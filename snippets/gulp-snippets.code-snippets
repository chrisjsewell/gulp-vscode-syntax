{
  "keyword-PDFkeep": {
    "prefix": "keyword-PDFkeep",
    "body": "PDFkeep",
    "description": "- Use: \tAs \"PDFcut\", but 'keep' all phonon contributions greater than a given\n\t\"wmax\" (pdf block input option) or less than a given \"wmin\" (pdf block\n\tinput option) by setting w=wmax or w = wmin respectively.\n- See also: \tPDFcut pdf nowidth nofreq rmax rbins wmin wmax units\nalamode"
  },
  "keyword-alamode": {
    "prefix": "keyword-alamode",
    "body": "alamode",
    "description": "- Use: \tCompute the thermal conductivity using Alamode. For this to work\n\tAlamode must be installed on your computer and the environment\n\tvariable ALAMODE_DIR set to point to the root directory of Alamode.\n\tIn this mode GULP will call the program alm to obtain the finite\n\tdifference patterns required for the system, compute the forces\n\tfor these displacements, and fit the force constants using alm.\n\tThe cost of this process depends on the force constant cutoffs\n\tand the precision is determined by the displacement magnitude.\n- See also: \tthermalconductivity ala_disp ala_cutoff ala_shrink ala_processors\nallbonds"
  },
  "keyword-allbonds": {
    "prefix": "keyword-allbonds",
    "body": "allbonds",
    "description": "- Use: \tWhen using eembond GULP tries to find the minimal set of bonds\n\tneed for EEM that avoid rings that cause the inversion of the EEM\n\tmatrix to become singular. Specifying this keyword forces the code\n\tto work with all bonds. However, this means iterative solution has\n\tto be used and prevents the use of analytic second derivatives.\n- See also: \teembond\nallow_gt_1"
  },
  "keyword-allow_gt_1": {
    "prefix": "keyword-allow_gt_1",
    "body": "allow_gt_1",
    "description": "- Default: \tDo not allow partial occupancies on a site to exceed 1.\n- Use: \tTells GULP to allow the sum of partial occupancies on a\n\tgiven site to be allowed to exceed one without treating\n\tthe particles as separate entities that have accidentally\n\tbeen superimposed.\n\tNB: This option should be used with caution as it physically\n\tnot usually sensible to have a site occupancy greater than\n\tone. The main use is to allow different atom types to be\n\tconstrained to move together to allow the construction of\n\tmore complex potential forms.\nangle"
  },
  "keyword-angle": {
    "prefix": "keyword-angle",
    "body": "angle",
    "description": "- Use: \tPrint out all valid three-body angles found for the three-body\n\tpotentials.\nanneal"
  },
  "keyword-anneal": {
    "prefix": "keyword-anneal",
    "body": "anneal",
    "description": "- Use: \tGiven contents of unit cell find possible atomic coordinates\n\tby implementing an algorithm which simulates annealing.\n\tGenerally a local minimisation is performed on the best configuration.\n- See also: \tpredict cost global temperature\natomic_stress"
  },
  "keyword-atomic_stress": {
    "prefix": "keyword-atomic_stress",
    "body": "atomic_stress",
    "description": "- Use: \tCauses the atomic stresses to be output at the final geometry.\n\tThese are the atomic contributions to the strain derivatives.\n\tFor 3D systems the stresses in GPa are output, while for all\n\tcases the strain derivative per atom is output in eV.\n\tNB: This feature requires that symmetry is turned off during\n\tthe calculation.\n- See also: \tstress_out catomic_stress\naverage"
  },
  "keyword-average": {
    "prefix": "keyword-average",
    "body": "average",
    "description": "- Use: \tCauses the average bond lengths between pairs of species to be printed\n\tout after a bond length analysis.\n- See also: \tbond distance\nbond"
  },
  "keyword-bond": {
    "prefix": "keyword-bond",
    "body": "bond",
    "description": "- Use: \tPrint out bond length analysis at beginning and end of run.\n\tNOTE : The way in which this keyword works has changed for\n\tversion 1.4. Whereas in older versions all distances less\n\tthan the sum of the covalent radii multiplied by a tolerance\n\twere considered to be bonded, now only the atoms which are\n\tbonded in the calculation are listed. This therefore allows\n\tfor the influence of the \"nobond\" and \"connect\" options.\n- See also: \tdistance average nobond connect bondtype\nbreathe"
  },
  "keyword-breathe": {
    "prefix": "keyword-breathe",
    "body": "breathe",
    "description": "- Use: \tSet flags for radii only optimisation . It is still necessary to\n\tspecify either \"conp\" or \"conv\" so that the cell flags are correctly\n\tset.\n- See also: \tconp conv noflags shell nobreathe cellonly isotropic ocell\nbroaden_dos"
  },
  "keyword-broaden_dos": {
    "prefix": "keyword-broaden_dos",
    "body": "broaden_dos",
    "description": "- Format: \tbroaden_dos <scale/gaussian> b\n- Default: \tb = 0.2\nUnits \tcm-1 (default) or fractional (scale)\n- Use: \tAn approximation to the delta function is used in order to line\n\tLorentzian broaden the phonon density of states peaks. If given\n\tas a keyword then the default broadening is applied or if used\n\tas an option the user may specify their own broadening factor.\n\n\te.g. broaden 0.3\n\n\tThe expression used for the broadening is:\n\n\tw(f) = b/[pi*(1 + (b*(f - f0))**2)]\n\n\twhere w is the fractional weight at frequency f of a peak at\n\tfrequency f0. b is the broadening factor and is the inverse\n\tof the half-width at half-maximum parameter.\n\n\tNote, the smaller the factor, the greater the broadening.\n\tThe range of the plot is automatically extended when broadening is\n\tturned on to allow the highest frequency peak to decay to 1/100th of\n\tits original magnitude.\n\n\tIn the case of thermal conductivity calculations, there is the\n\toption to have a fixed broadening (default) or to scale the\n\taverage frequency difference (if scale is specified).\n\n\tIf \"gaussian\" is specified then Gaussian broadening will be used:\n\n\tw(f) = b/sqrt(pi) * exp(-(b*(f-f0))**2)\n\n- See also: \tphonon project output lorentzian_tolerance thermalconductivity\n\tbox\nbulk_noopt"
  },
  "keyword-bulk_noopt": {
    "prefix": "keyword-bulk_noopt",
    "body": "bulk_noopt",
    "description": "- Use: \tStops GULP from performing optimisations during the bulk run\n\t- this is of use when performing defect calculations when\n\tyou only want the runtype to apply to the defect section.\n- See also: \tdefect centre size region_1 noanisotropic_2b\nc6"
  },
  "keyword-c6": {
    "prefix": "keyword-c6",
    "body": "c6",
    "description": "- Use: \tThe dispersion energy, as represented by 1/r**6 terms\n\tas part of the Buckingham, Lennard-jones and General\n\tpotentials, is actually quite slow to converge in\n\treal space. By specifying this keyword the C6 terms\n\tare evaluated using an Ewald-like approach, thus\n\tachieving much greater accuracy in the energy for\n\tonly a small amount of extra computational expense.\n\tWhen this option is used the rmax value for the\n\tpotential only influences the short range repulsion\n\tcomponent. As the truncation distance for these terms\n\tis also controlled by the program, the best thing is\n\tto just specify a large cutoff and let the program\n\tdecide.\ncellonly"
  },
  "keyword-cellonly": {
    "prefix": "keyword-cellonly",
    "body": "cellonly",
    "description": "- Use: \tSet flags for cell optimisation while keeping internal coordinates\n\tfixed. If cellonly, conv or conp are not specified for a calculation\n\tthat requires derivatives - individual flags are needed.\n- See also: \tconv conp noflags breathe nobreathe shell isotropic ocell\n\tstrain cellstrain\ncompare"
  },
  "keyword-compare": {
    "prefix": "keyword-compare",
    "body": "compare",
    "description": "- Default: \tno comparison\n- Use: \tCauses a table comparing the initial and final structures to be printed\n\tout both for bulk and defects.\nconjugate"
  },
  "keyword-conjugate": {
    "prefix": "keyword-conjugate",
    "body": "conjugate",
    "description": "- Use: \tUse conjugate gradients to optimise geometry, instead of second\n\tderivative based methods.\n- See also: \tdfp numdiag unit positive lbfgs steepest\nand"
  },
  "option-and": {
    "prefix": "option-and",
    "body": "and",
    "description": "- Use: \tStart of global optimiser options section, closed by \"end\"\n- See also: \tminimum maximum discrete configurations conjugate\n\ttournament crossover mutation seed grid\npregionforce"
  },
  "keyword-conp": {
    "prefix": "keyword-conp",
    "body": "conp",
    "description": "- Use: \tSet flags for constant pressure optimisation.\n\tIf conv, cellonly or conp are not specified for a calculation\n\tthat requires derivatives - individual flags are needed.\n- See also: \tconv cellonly breathe nobreathe noflags shell isotropic ocell\nconserved"
  },
  "keyword-conserved": {
    "prefix": "keyword-conserved",
    "body": "conserved",
    "description": "- Use: \tCauses the conserved quantity for the MD ensemble to be output where\n\tapplicable.\nconv"
  },
  "keyword-conv": {
    "prefix": "keyword-conv",
    "body": "conv",
    "description": "- Use: \tSet flags for constant volume optimisation.\n\tIf cellonly, conv or conp are not specified for a calculation\n\tthat requires derivatives - individual flags are needed.\n- See also: \tconp cellonly breathe nobreathe noflags shell isotropic\ncoreinfo"
  },
  "keyword-coreinfo": {
    "prefix": "keyword-coreinfo",
    "body": "coreinfo",
    "description": "- Use: \tOutputs atomic information on all atoms (cores, not shells, if using shell model)\n\tused in phonon calculations. Details given for each core in the primitive cell.\n\tLists species mass, neutron scattering length (bbar), incoherent and coherent\n\tneutron scattering area, and atomic position in both Cartesian and Fractional\n\tcoordinates. This option is purely for information, and does not change the\n\tbehaviour of GULP. Where partial occupancies used, output is for the mean-\n\tfield atom on each site.\n- See also: \tKeywords: makeEigenArrays\ncosmic"
  },
  "keyword-cosmic": {
    "prefix": "keyword-cosmic",
    "body": "cosmic",
    "description": "- Use: \tInvokes a modified form of the COSMO algorithm that\n\timposes the constraint of an Integral Charge (normally\n\tzero) on the system. This is important for periodic\n\tsystems where charge neutral is a requirement for a\n\tconverged lattice sum.\n\tIf a surface is non-charge neutral then the net surface\n\tcharge is balanced by the net charge on the solvent\n\taccessible surface. This requires the \"qok\" keyword\n\tto be specified.\n- See also: \tpointsperatom segmentsperatom solventepsilon\n\tsolventradius solventrmax vdw nosasinitevery\n\tcosmoframe cosmoshape rangeforsmooth qsas\n\tsasparticles qiterative cwolf pureQ cosmo\n\tmatrix_format\ncosmo"
  },
  "keyword-cosmo": {
    "prefix": "keyword-cosmo",
    "body": "cosmo",
    "description": "- Use: \tCauses a solvation energy calculation to be performed\n\tusing the COSMO model. For details of the method see:\n\n\tA. Klamt and G. Schueuermann, JCS Perkin Trans 2, 799 (1993)\n\n\tHere the system is immersed in an effective continuum\n\tsolvent with a user-specified dielectric constant and\n\tsolvent molecule radius. A solvent-accessible surface\n\tis then constructed around the molecule/surface where\n\tcharges are induced that interact with the underlying\n\tmaterial.\n- See also: \tpointsperatom segmentsperatom solventepsilon\n\tsolventradius solventrmax vdw nosasinitevery\n\tcosmoframe cosmoshape rangeforsmooth qsas\n\tsasparticles qiterative cwolf pureQ cosmic\n\tmatrix_format\ncost"
  },
  "keyword-cost": {
    "prefix": "keyword-cost",
    "body": "cost",
    "description": "- Use: \tCalculate the cost function rather than energy during global\n\toptimisation. If no other potential form given then use cost\n\tfunction for local minisation as well.\n\tFor a single point run calculate cost function as well as\n\tenergy.\n- See also: \tpredict genetic anneal\nand"
  },
  "genetic-and": {
    "prefix": "genetic-and",
    "body": "and",
    "description": "- Format: \tcost <kb value_kb> <kc value_kc> <kq value_kq> <ks value_ks>\n- Default: \tkb=1.0 kc=1.0 kq=1.0 ks=0.0\n- Use: \tSpecify a weighting factor for the various components of the cost\n\tfunction, where kb represent the bond valence contribution, kc\n\tthe coordination contribution, kq the Coulombic repulsion between\n\tlike charged ions and ks a sort of bond valence term between like\n\tcharged ions.\ndcharge"
  },
  "keyword-dcharge": {
    "prefix": "keyword-dcharge",
    "body": "dcharge",
    "description": "- Use: \tCalculate the first derivatives of the atomic charges\n\twith respect to the coordinates of the atoms (and strain)\n\tas calculated according to either the EEM or QEq\n\telectronegativity equalisation schemes.\n- See also: \teem qeq noqeem\ndebug"
  },
  "keyword-debug": {
    "prefix": "keyword-debug",
    "body": "debug",
    "description": "- Use: \tCould do anything! For programmers' use only.\ndecimal_only"
  },
  "keyword-decimal_only": {
    "prefix": "keyword-decimal_only",
    "body": "decimal_only",
    "description": "- Default: \tUse fractions in output where appropriate.\n- Use: \tSpecifying this keyword suppresses the use of fractions in\n\toutput from GULP.\ndefect"
  },
  "keyword-defect": {
    "prefix": "keyword-defect",
    "body": "defect",
    "description": "- Use: \tWhen used as a keyword this causes a defect calculation to be\n\tperformed at the end of any bulk calculations. This option\n\tcannot currently be used in conjuction with the background\n\tneutralising charge for non-charge neutral unit cells, or\n\twith the dipole correction energy.\n- See also: \tregion_1 centre size regi_before vacancy\n\timpurity interstitial frequency noanisotropic save\n\trestore gdcrit bulk_noopt\ndelta_dipole"
  },
  "keyword-delta_dipole": {
    "prefix": "keyword-delta_dipole",
    "body": "delta_dipole",
    "description": "- Use: \tFor crystals where there is a dipole moment within the\n\tunit cell it adds the correction term to the energy:\n\n\tE = 2*pi*D**2 / 3.V\n\n\twhere D is the dipole per unit cell and V is the volume.\n\tWhen delta_dipole is specified the dipole D is defined\n\trelative to the dipole for the initial configuration\n\tbeing zero. This is useful where an electric field is\n\tapplied to an equilibrium system, generating a net dipole.\n\tNote that defect calculations cannot be performed when\n\tthis term is present.\n\tNB: delta_dipole and dipole are mutually exclusive - if\n\tboth are specified then delta_dipole will be applied\n- See also: \tfield dipole initial_dipole\nderv2"
  },
  "keyword-derv2": {
    "prefix": "keyword-derv2",
    "body": "derv2",
    "description": "- Use: \tDebugging keyword that causes GULP to output the internal-internal\n\tsecond derivative matrix when second derivatives are generated.\n- See also: \tderv3\nderv3"
  },
  "keyword-derv3": {
    "prefix": "keyword-derv3",
    "body": "derv3",
    "description": "- Use: \tDebugging keyword that causes GULP to output the internal-strain\n\tsecond derivative matrix when second derivatives are generated.\n- See also: \tderv2\ndfp"
  },
  "keyword-dfp": {
    "prefix": "keyword-dfp",
    "body": "dfp",
    "description": "- Use: \tUse the Davidon-Fletcher-Powell updating formula instead of BFGS.\n- See also: \tunit numdiag positive conjugate lbfgs steepest\ndipole"
  },
  "keyword-dipole": {
    "prefix": "keyword-dipole",
    "body": "dipole",
    "description": "- Use: \tFor crystals where there is a dipole moment within the\n\tunit cell it adds the correction term to the energy:\n\n\tE = 2*pi*D**2 / 3.V\n\n\twhere D is the dipole per unit cell and V is the volume.\n\tBy default the Ewald sum assumes that there is no dipole\n\tmoment across the crystal, while this term is applicable\n\tto cases where there is a permenant dipole. Note\n\tthat the dipole is ambiguous in many cases because it\n\tdepends on the termination of the crystal at the surface\n\tand hence this correction should be used with care!\n\tNote that defect calculations cannot be performed when\n\tthis term is present.\n\tNB: delta_dipole and dipole are mutually exclusive - if\n\tboth are specified then delta_dipole will be applied\n- See also: \tfield delta_dipole\ndistance"
  },
  "keyword-distance": {
    "prefix": "keyword-distance",
    "body": "distance",
    "description": "- Use: \tPrint out distance analysis at beginning and end of run.\n\tDefault search radius is 2.0 Angstroms - this can be changed\n\tby using \"cutd\". For bond length search see \"bond\".\ndynamical_matrix"
  },
  "keyword-dynamical_matrix": {
    "prefix": "keyword-dynamical_matrix",
    "body": "dynamical_matrix",
    "description": "- Use: \tCauses GULP to output the dynamical matrix from a phonon calculation.\n- See also: \tphonon\neckart"
  },
  "keyword-eckart": {
    "prefix": "keyword-eckart",
    "body": "eckart",
    "description": "- Use: \tFor molecules it causes an Eckart transformation to be performed\n\ton dynamical matrix. This removes the rotational and translational\n\tcontamination of the vibration modes. Currently only applies to\n\t0-D systems.\n- See also: \tphonon raman inten msd\neem"
  },
  "keyword-eem": {
    "prefix": "keyword-eem",
    "body": "eem",
    "description": "- Use: \tCalculate charges by Mortiers EEM.\n\toldeem invokes the original set of parameters.\n\tOnly available for H, C, N, O, F, Si, Al and P.\n\tIf specified with optimise then the charges will be recalculated at\n\tevery point of the optimisation.\n\n\tNB Electronegativity equalisation schemes should NOT\n\tbe used in combination with Coulomb subtraction of\n\tany form otherwise the calculation of the charges and\n\tthe energy will not be self-consistent. This leads to\n\tall derivatives being incorrect as dE/dQ is no longer\n\tzero. If Coulomb subtracted potentials are to be used\n\tthen charges must be calculated for the initial geometry\n\tand then frozen.\n\n\tNote: Phonon calculations are limited with the EEM keyword\n\tto the gamma point without the LO/TO splitting.\n\n\tNote: Only region 1 atoms are included in EEM and fixed\n\tcharges will be taken for region 2.\n- See also: \tqeq dcharge sm electronegativity gasteiger qbond pacha noqeem\n\teembond\neembond"
  },
  "keyword-eembond": {
    "prefix": "keyword-eembond",
    "body": "eembond",
    "description": "- Use: \tCalculate charges by split bond charge electronegativity\n\tThis is closely related to EEM and can use many of the same\n\tvariants such as QEq, SM, and pacha. The major difference is\n\tthat charge is only transfered between atoms that are bonded\n\tand so the charge on an atom is the sum of its bond charges.\n\tThis means that the total charge within a molecule is conserved\n\tand long-distance unphysical charge transfer is prevented.\n\tHowever, there are some restrictions:\n\t1) This approach can only be applied to charge neutral systems\n\tat present since a net charge cannot be automatically\n\tredistributed.\n\t2) The energy surface is discontinuous if a bond breaks or forms.\n\t3) The iterative QEq special case for hydrogen is not available\n\tin this form at present, though increasingly this is not used.\n- See also: \tqeq dcharge sm electronegativity gasteiger qbond pacha noqeem\n\teem allbonds\nefg"
  },
  "keyword-efg": {
    "prefix": "keyword-efg",
    "body": "efg",
    "description": "- Use: \tPrint out electric field gradients at the atomic sites. Currently\n\tthis is not compatible with the use of the cell multipole method\n\t- in such cases the exact electric field gradients will be calculated.\n\tThe principal components of the EFG tensor and the asymmetry parameter\n\tare now also output as part of an efg calculation.\n- See also: \tpot potential\neharmonic"
  },
  "keyword-eharmonic": {
    "prefix": "keyword-eharmonic",
    "body": "eharmonic",
    "description": "- Use: \tCalculate the implicit harmonic relaxation energy, but do not optimise.\n\tThis uses the Hessian and forces to compute the energy of optimisation\n\tif the system was perfectly harmonic, but without iteratively refining\n\tthe coordinates. It allows a single point calculation to provide an\n\testimate of the energy that would result from optimisation.\n- See also: \tconp conv cellonly isotropic finite unfix shell single\n\toptimise md montecarlo gradient ocell\neigenvectors"
  },
  "keyword-eigenvectors": {
    "prefix": "keyword-eigenvectors",
    "body": "eigenvectors",
    "description": "- Use: \tGenerate eigenvectors as well as eigenvalues during a phonon\n\tcalculation. This option is automatically implied when projected\n\tphonon densities of states are required.\n\tBoth real and imaginary components of the eigenvectors are\n\toutput, but remember that when two or more frequencies are\n\tdegenerate there are an infinite number of possible vectors\n\tthat can be created by taking linear combinations.\n\tAll eigenvectors output are orthonormal.\n- See also: \tphonon lower symmetry project_dos eckart intensity msd\neregion"
  },
  "keyword-eregion": {
    "prefix": "keyword-eregion",
    "body": "eregion",
    "description": "- Default: \tDon't print region energies\n- Use: \tCauses GULP to output the energy broken down into regions.\n\tNB Not all potential types currently support this feature and\n\tfor many body potentials it may not be meaningful where they\n\tspan multiple regions. Use with care!\nfastfd"
  },
  "keyword-fastfd": {
    "prefix": "keyword-fastfd",
    "body": "fastfd",
    "description": "- Use: \tSwitch the algorithm for bond order potential calculations (including\n\tEDIP, Brenner and ReaxFF) to a faster finite difference approach.\n- See also:\nfbfgs"
  },
  "keyword-fbfgs": {
    "prefix": "keyword-fbfgs",
    "body": "fbfgs",
    "description": "- Use: \tPerform fitting run using full BFGS method. This involves\n\tthe calculation of the full numerical Hessian instead of\n\tjust the diagonal elements.\n- See also: \tfit\nfit"
  },
  "keyword-fit": {
    "prefix": "keyword-fit",
    "body": "fit",
    "description": "- Use: \tPerform fitting run using unit matrix with BFGS method.\n- See also: \tsimul relax genetic fbfgs delta simplex\nfix_molecule"
  },
  "keyword-fix_molecule": {
    "prefix": "keyword-fix_molecule",
    "body": "fix_molecule",
    "description": "- Use: \tWhen a molecule keyword is included, the bonding list\n\tdefining the connectivity is checked at every geometry\n\tand the cell index references recalculated. If an atom\n\twhich was previously bonded exceeds the bond length\n\tcutoff then the calculation is normally abandoned. By\n\tusing the fix_molecule (can be abbreviated to \"fix\")\n\toption the connectivity is fixed by the initial\n\tgeometry and not updated subsequently. This can\n\tprevent the calculation from being abandoned. However\n\tit has the side effect that a restarted job may have\n\ta different energy due to changes in connectivity - so\n\tbeware!\n- See also: \tmolecule molmec molq rtol inter intra both\nforce_minimisation"
  },
  "keyword-force_minimisation": {
    "prefix": "keyword-force_minimisation",
    "body": "force_minimisation",
    "description": "- Use: \tCauses an optimisation run to use the gradient norm as the quantity for minimisation\n\trather than the energy. Useful for situation where the absolute energy is not well\n\tdefined, such as systems under uniaxial stress.\n- See also: \tanisotropic_pressure\nframe"
  },
  "keyword-frame": {
    "prefix": "keyword-frame",
    "body": "frame",
    "description": "- Default: \tUse coordinates as input\n- Use: \tCauses the coordinates of a 0-D system (molecule) to be rotated to the\n\tstandard frame of reference based on the non-mass weighted moment of\n\tinertia tensor of the cores.\n\tNB: Use of this keyword is not compatible with the use of flags and\n\tconstraints at present. It is recommend that a single point calculation\n\tis used to change the frame first and then any flag/constraints specified\n\tusing the restart file.\n- See also: \tcartesian\nfree_energy"
  },
  "keyword-free_energy": {
    "prefix": "keyword-free_energy",
    "body": "free_energy",
    "description": "- Use: \tUse Gibbs free-energy as the quantity to be calculated/optimised\n\tinstead of the internal energy. This uses the phonon density of\n\tstates to calculate the vibrational partition function and thereby\n\tthe free energy. Note: It is best not to use gamma point phonons\n\tin such calculations since the Born charge correction is not applied\n\tin a free energy minimisation. Hence the default k point (if none\n\tspecified) is (1/4,1/4,1/4). However, the use of the \"shrink\" option\n\tis recommended to converge the free energy.\n- See also: \tphonon nozeropt static_first zsisa scmaxsearch lowest_mode shrink\nfrequencies"
  },
  "keyword-frequencies": {
    "prefix": "keyword-frequencies",
    "body": "frequencies",
    "description": "- Use: \tCauses GULP to compute the frequencies for a defect calculation\n\tin the Mott-Littleton scheme.\n\tNB: This is approximate since it assumes that regions 1 and 2\n\tare uncoupled with respect to their vibrations.\n- See also: \tphonon\nfull"
  },
  "keyword-full": {
    "prefix": "keyword-full",
    "body": "full",
    "description": "- Use: \tCauses the nosymmetry keyword to produce the full, instead of the\n\tprimitive, unit cell.\n- See also: \tnosymmetry\ngasteiger"
  },
  "keyword-gasteiger": {
    "prefix": "keyword-gasteiger",
    "body": "gasteiger",
    "description": "- Use: \tIndicates that Gasteiger charges should be calculated according\n\tto the method in Tetrahedron, 36, 3219-3288 (1980). The Gasteiger\n\tcharges are geometry independent and only depend on the connectivity\n\tof the molecule. Hence it is important to ensure that the bonding\n\tis correct at the start of the calculation and the \"fix\" keyword\n\tis also recommended to avoid potential discontinuities. Parameters\n\tare available for H, C, N, O, S and the halogens. For C, N and O\n\tthe electronegativities used depend on the hybridisation. In the\n\tabsence of formal atom typing, GULP makes the approximation that\n\tthe hybridisation state is the obvious one for the coordination\n\tnumber, i.e. for C, 4 bonds => sp3, 3 bonds => sp2, 2 bonds => sp,\n\tfor N, 3 bonds => sp3, 2 bonds => sp2, 1 bond => sp, and for O,\n\t2 bonds => sp3, 1 bond => sp2.\n- See also: \teem qeq molq fix bond gasttol gastiter qbond pacha gastparam\n\tgastdamping noqeem eembond\ngenetic"
  },
  "keyword-genetic": {
    "prefix": "keyword-genetic",
    "body": "genetic",
    "description": "- Use: \tGiven contents of unit cell use a genetic algorithm to find\n\tpossible atomic coordinates. (global optimiser)\n\tA local minimisation can then be performed on the best configurations\n- See also: \tpredict anneal contents global cost\nghostcell"
  },
  "keyword-ghostcell": {
    "prefix": "keyword-ghostcell",
    "body": "ghostcell",
    "description": "- Use: \tWhen using the fc_supercell approach to compute phonons based on\n\tfinite differencing of first derivatives there can be problems\n\tfor some models where images of the same atom interact with each\n\tother. The main case where this occurs is for bond order potentials,\n\tincluding brenner, EDIP, ReaxFF. Note that for brenner analytic\n\tsecond derivatives are available and so there is no need to use\n\tfinite differences, whereas for EDIP and ReaxFF this is not the case.\n\tThe solution to this problem is to compute the force constants for a\n\tsupercell (specified using this option) and then the ghostcell keyword\n\ttells the code to compute the phonons as though they were for the\n\toriginal smaller cell from which the supercell was constructed.\n\tNB: At present this keyword can only be used in serial.\n- See also: \tphonon fc_supercell ghost_supercell\nglobal"
  },
  "keyword-global": {
    "prefix": "keyword-global",
    "body": "global",
    "description": "- Use: \tAfter finding possible crystal coordinates (because keyword\n\tpredict specified) dump out restart files before performing local\n\tminimisation of the best structures.\n- See also: \tpredict genetic anneal\ngradient"
  },
  "keyword-gradient": {
    "prefix": "keyword-gradient",
    "body": "gradient",
    "description": "- Use: \tCalculate gradients but do not optimise, provided the single\n\tkeyword is not specified.\n- See also: \tconp conv cellonly isotropic finite unfix shell single\n\toptimise md montecarlo eharmonic fix_atom ocell\ngroupvelocity"
  },
  "keyword-groupvelocity": {
    "prefix": "keyword-groupvelocity",
    "body": "groupvelocity",
    "description": "- Use: \tCalculate the group velocities of the phonons at each k point\n- See also: \tthermalconductivity broaden_dos temperature lorentzian_tolerance\ngrueneisen"
  },
  "keyword-grueneisen": {
    "prefix": "keyword-grueneisen",
    "body": "grueneisen",
    "description": "- Use: \tCalculate the Grueneisen parameters for the phonons\n- See also: \tphonon groupvelocity thermal_conductivity shrink kpoint\nhessian"
  },
  "keyword-hessian": {
    "prefix": "keyword-hessian",
    "body": "hessian",
    "description": "- Use: \tCauses details of the Hessian matrix to be output. For calculations\n\temploying the RFO method then the eigenvalues, eigenvectors and the\n\tgradients transformed into the local modes are output for every cycle.\n\tFor Newton-Raphson calculations, the inverse Hessian is output after\n\teach exact recalculation, but not after updating.\n- See also: \toptimise matrix_format\nhexagonal"
  },
  "keyword-hexagonal": {
    "prefix": "keyword-hexagonal",
    "body": "hexagonal",
    "description": "- Use: \tCauses a rhombohedral structure to be output in\n\thexagonal form in the dumpfile.\nhideshells"
  },
  "keyword-hideshells": {
    "prefix": "keyword-hideshells",
    "body": "hideshells",
    "description": "- Default: \tShow shell coordinates and other details in the output.\n- Use: \tCauses the output of details of the shells to be suppressed in the output.\n- See also: \tnoaddshells\nhill"
  },
  "keyword-hill": {
    "prefix": "keyword-hill",
    "body": "hill",
    "description": "- Default: \tReuss convention for bulk/shear modulus\n- Use: \tSpecifies that the Hill convention is used for the bulk\n\tmodulus. The Hill convention takes the average of the\n\tReuss and Voigt values.\n- See also: \tbulk_modulus shear_modulus elastic fit observables\n\tvoigt young poisson\ninclude_imaginary"
  },
  "keyword-include_imaginary": {
    "prefix": "keyword-include_imaginary",
    "body": "include_imaginary",
    "description": "- Default: \tImaginary frequencies excluded from DOS / dispersion\n- Use: \tSpecifies that imaginary frequencies should be included\n\tin the output of density of states or dispersion plots.\n- See also: \tphonon nodensity\nintensity"
  },
  "keyword-intensity": {
    "prefix": "keyword-intensity",
    "body": "intensity",
    "description": "Info \tInfra-red phonon intensities are output when the eigenvectors\n\thave been calculated using \"eigen\". This keyword also triggers\n\tthe printing of intensity. Intensities are in nominal\n\tunits of charge**2. Raman intensities are also now output.\n\tHowever, it should be noted that they are approximate and only\n\tvalid for systems with a single type of bond in (such as a\n\tsilicate).\n\tNB: From version 4.0.5 onwards the IR intensities are computed\n\tusing the Born effective charge tensor, where available,\n\trather than the sum of core and shell charges. For simple rigid\n\tion models there is no difference, but for more complex models\n\tthere may be some change.\n\tNNB: Intensities should usually be calculated at the gamma point\n\tand to ensure the proper symmetry it is recommended to specify\n\tnononanal as a keyword to turn off the non-analytic correction.\n- See also: \toldintensity eigen nononanal eckart msd\nisotropic"
  },
  "keyword-isotropic": {
    "prefix": "keyword-isotropic",
    "body": "isotropic",
    "description": "- Use: \tOnly allow isotropic cell expansion and contraction during\n\toptimisation. For molecular dynamics this keyword requires the\n\tuse of the default integrator (stochastic).\n- See also: \tconp conv orthorhombic ocell\nkcal"
  },
  "keyword-kcal": {
    "prefix": "keyword-kcal",
    "body": "kcal",
    "description": "- Default: \teV\n- Use: \tOutput the energy components in kcal rather than eV.\n\tUseful for comparing energies against other programs\n- See also: \tkjmol\nkfull"
  },
  "keyword-kfull": {
    "prefix": "keyword-kfull",
    "body": "kfull",
    "description": "- Use: \tWhen the unit cell is centred, the K points specified are taken\n\tas being for the primitive cell by default. When this keyword\n\tis specified, the K points given by the kpoints and dispersion\n\toptions are taken to be for the full centred cell instead. Note\n\tthe calculation is still performed using the primitive cell, but\n\tat the points in reciprocal space that relate to the full cell.\n- See also: \tkpoints dispersion\nkjmol"
  },
  "keyword-kjmol": {
    "prefix": "keyword-kjmol",
    "body": "kjmol",
    "description": "- Default: \teV\n- Use: \tOutput the energy components in kJ/mol rather than eV.\n\tUseful for comparing energies against other programs\n- See also: \tkcal\nlbfgs"
  },
  "keyword-lbfgs": {
    "prefix": "keyword-lbfgs",
    "body": "lbfgs",
    "description": "- Use: \tUse limited memory BFGS for optimisation. This is useful where\n\ta system is too large to allow the storage of the full Hessian\n\tmatrix and so a limited part of it is stored instead. The size\n\tof the memory used depends on the value of lbfgs_order which\n\tis set as an option.\n- See also: \tnumdiag dfp positive conjugate unit lbfgs_order\nlibdump"
  },
  "keyword-libdump": {
    "prefix": "keyword-libdump",
    "body": "libdump",
    "description": "- Use: \tIndicates that library symbols should be dumped to a restart\n\tfile. NB This option will create an a restart file that is\n\tincompatible with GULP at the moment.\n- See also: \tlibrary libff\nlibff"
  },
  "keyword-libff": {
    "prefix": "keyword-libff",
    "body": "libff",
    "description": "- Use: \tIndicates that fitting flags should be read from any library\n\tfiles if this is a fitting run.\n- See also: \tlibrary libdump\nlinmin"
  },
  "keyword-linmin": {
    "prefix": "keyword-linmin",
    "body": "linmin",
    "description": "- Default: \tno printing\n- Use: \tPrint out details of line minimisations.\nlower_symmetry"
  },
  "keyword-lower_symmetry": {
    "prefix": "keyword-lower_symmetry",
    "body": "lower_symmetry",
    "description": "- Use: \tUse imaginary phonon modes to lower the symmetry of a structure.\n\tThis is particularly useful when an optimised structure has\n\timaginary frequencies and help is needed as to how to distort the\n\tgeometry to obtain the true minimum. This keyword requires a\n\tphonon run to be performed and the calculation of eigenvectors\n\tis required, though from version 5.1 onwards these will not be\n\toutput unless eigenvectors is explicitly specified as a keyword.\n\tNB: If applying to molecules then it is recommended that the\n\teckart keyword is also used to ensure that rotations are not\n\tincluded in the frequencies calculated.\n- See also: \tphonon eigenvectors slower optlower switch frqtol\nmadelung"
  },
  "keyword-madelung": {
    "prefix": "keyword-madelung",
    "body": "madelung",
    "description": "- Use: \tIf the cell is cubic, then a Madelung correction can be\n\tapplied to the electrostatics of a charged system to\n\tput the energy to zero. This assumes a single point ion\n\texcess charge (e.g. one charged ion in a box). The\n\tenergy correction is given by:\n\n\tE = 1/2 alpha*Q**2/(epsilon_0*L)\n\n\twhere alpha is the Madelung constant (2.8373 for a simple\n\tcubic case), Q is the excess charge and L the side of the\n\tcubic box.\n- See also: \tqok\nmakeEigenArrays"
  },
  "keyword-makeEigenArrays": {
    "prefix": "keyword-makeEigenArrays",
    "body": "makeEigenArrays",
    "description": "- Use: \tStores phonon information (frequencies and eigenvectors) in internal arrays for\n\tfurther calculations. This information is generated by phonon and eigen\n\tkeywords (automatically called if makeEigenArrays is set). This keyword\n\tshould not need to be explicitly set unless testing. It is not currently\n\tcompatible with parallel runs.\n- See also: \tpdf nowidth nofreq\nmarvinSE"
  },
  "keyword-marvinSE": {
    "prefix": "keyword-marvinSE",
    "body": "marvinSE",
    "description": "- Use: \tChanges the way that many body terms are apportioned between regions 1\n\tand 2 to match the convention that Marvin adopts (i.e. all 3-/4- body\n\tinteractions involving a region 1 atom are assigned to the region 1\n\tenergy)\nmd"
  },
  "keyword-md": {
    "prefix": "keyword-md",
    "body": "md",
    "description": "- Use: \tSpecifies that a molecular dynamics run is to be performed\n- See also: \ttimestep temperature equilibration production sample\n\ttscale write cutp integrator nolist_md minimum_image\n\tnomolecularinternalke momentum_correct mdmaxtemp tether\nmeanke"
  },
  "keyword-meanke": {
    "prefix": "keyword-meanke",
    "body": "meanke",
    "description": "- Use: \tRequests that GULP prints out a decomposition of the mean kinetic\n\tenergy of vibration projected onto each lattice site. Note that\n\tthis keyword requires that a phonon calculation be specified and\n\tthat the temperature is non-zero. Furthermore, this will only\n\tcurrently work for a single temperature rather than a temperature\n\trange.\n- See also: \tphonon eigenvector msd\nminimum_image"
  },
  "keyword-minimum_image": {
    "prefix": "keyword-minimum_image",
    "body": "minimum_image",
    "description": "- Use: \tRequests that the real space components of the energy for\n\ta solid are calculated using the minimum image convention\n\tduring a molecular dynamics or conjugate gradient simulation.\n\tFor large unit cells this can accelerate the real space\n\tcalculation of the program by reducing the work done in\n\tsearching for interactions, especially for right angled unit cells.\n\n\tNB: The minimum image approach is incompatible with the spatial\n\talgorithm and so if both are specified the spatial algorithm will\n\tbe used.\n- See also: \tmd spatial\nmolecule"
  },
  "keyword-molecule": {
    "prefix": "keyword-molecule",
    "body": "molecule",
    "description": "- Default: \tno molecules\n- Use: \tProgram locates molecules based on either an input connectivity or\n\tby automatically locating bonds based on covalent radii and removes the\n\tCoulombic interactions within the molecule. See \"molq\" if you wish\n\tto retain the Coulomb terms. This option allows intra- and inter-\n\tmolecular potentials to be specified.\n- See also: \tmolq molmec fix_molecule rtol nobond inter intra both\n\t14_scale noautobond bondtype\nmolmec"
  },
  "keyword-molmec": {
    "prefix": "keyword-molmec",
    "body": "molmec",
    "description": "- Default: \tno molecules\n- Use: \tProgram locates molecules based on either an input connectivity or\n\tby automatically locating bonds based on covalent radii and subtracts\n\tCoulomb terms between bonded atoms and between atoms bonded to\n\ta common third atom. This option is needed when using molecular\n\tmechanics potentials, such as in the CVFF forcefield. Works for\n\tisolated molecules and 1,2 and 3-D periodic molecules provided\n\trepeat directions lie parallel to crystallographic axes, where\n\tappropriate.\n- See also: \tmolq molecule rtol fix_molecule nobond inter intra both\n\t14_scale noautobond bondtype\nmolq"
  },
  "keyword-molq": {
    "prefix": "keyword-molq",
    "body": "molq",
    "description": "- Default: \tno molecules\n- Use: \tProgram locates molecules based on either an input connectivity or\n\tby automatically locating bonds based on covalent radii, but retains the\n\tCoulombic interactions within the molecule. See \"molecule\" if you wish\n\tto remove the Coulomb terms. This option allows intra- and inter-\n\tmolecular potentials to be specified. Works for isolated molecules\n\tand 1, 2 and 3-D periodic molecules provided repeat directions\n\tlie parallel to crystallographic axes, where appropriate.\n- See also: \tmolecule molmec rtol fix_molecule nobond inter intra both\n\t14_scale noautobond bondtype\nmontecarlo"
  },
  "keyword-montecarlo": {
    "prefix": "keyword-montecarlo",
    "body": "montecarlo",
    "description": "- Use: \tSpecifies that a Monte Carlo calculation is to be performed.\n- See also: \tmccreate mcdestroy mcmove mcrotate mctrial mcoutfreq\n\tmcsample gcmcspecies gcmcmolecule mcstrain mcswap nomcediff\nmsd"
  },
  "keyword-msd": {
    "prefix": "keyword-msd",
    "body": "msd",
    "description": "Info \tCompute the mean-squared displacements for atoms based on the\n\tphonon calculation. The three Cartesian components are output\n\tbased on the sum over all k points (where applicable).\n- See also: \tphonon intensity eigenvector meanke\nneb"
  },
  "keyword-neb": {
    "prefix": "keyword-neb",
    "body": "neb",
    "description": "- Use: \tInvokes a Nudged Elastic Band run to map out the minimum energy\n\tpathway between two structures. A limited memory BFGS run is used to\n\tconverge the replicas to the path. See the papers of G. Henkelman\n\tand H. Jonsson (e.g. J. Chem. Phys., 113, 9978 (2000)). By default\n\tthe Doubly Nudged Elastic Band form is used.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnewda"
  },
  "keyword-newda": {
    "prefix": "keyword-newda",
    "body": "newda",
    "description": "- Use: \tif specified this selects the new defect algorithm\n\tin which all ions in region 2 that interact with\n\tregion 1 are stored. The advantage of this approach\n\tis that there is no need to add and then subtract\n\tcontributions from the non-defective region 1 to the\n\tshort range energy. This leads to increased numerical\n\tstability, but tends to be slower than the old\n\talgorithm except where numerical problems slow down\n\tthe rate of convergence. The other downside is that\n\tthe storage needed for region 2a will be larger.\n\tWhen using the Embedded Atom Model this algorithm\n\tmust be used and will therefore automatically be\n\tselected.\n- See also: \tdefect\nnoaddshells"
  },
  "keyword-noaddshells": {
    "prefix": "keyword-noaddshells",
    "body": "noaddshells",
    "description": "- Default: \tAdd shells where they are missing in the input.\n- Use: \tIf specified then no shells will be added.\n- See also: \thideshells\nnoanisotropic_2b"
  },
  "keyword-noanisotropic_2b": {
    "prefix": "keyword-noanisotropic_2b",
    "body": "noanisotropic_2b",
    "description": "- Use: \tThe region 2b energy is calculated for an anisotropic solid by\n\tdefault using ra*rb/r**6. This keyword forces the program to\n\tuse the isotropic formula 1/r**4. The only real use for this\n\tkeyword is when trying to compare with CASCADE results which\n\tuse the more approximate isotropic form.\n- See also: \tmode2a defect centre region_1 vacancy impurity\n\tinterstitial bulk_noopt\nnoautobond"
  },
  "keyword-noautobond": {
    "prefix": "keyword-noautobond",
    "body": "noautobond",
    "description": "- Default: \tAutomatically locate bonds in molecules based on covalent radii\n- Use: \tSpecifies that GULP should not try to automatically locate bonds\n\tbased on the sum of covalent radii. Bonds are then completely\n\tcontrolled by the \"connectivity\" option.\n- See also: \tmolecule molq rtol fix_molecule nobond inter intra both\n\t14_scale molmec bondtype\nnobreathe"
  },
  "keyword-nobreathe": {
    "prefix": "keyword-nobreathe",
    "body": "nobreathe",
    "description": "- Use: \tExcludes radii from the optimisation variables.\n- See also: \tconp conv noflags shell breathe cellonly isotropic ocell\nnod2sym"
  },
  "keyword-nod2sym": {
    "prefix": "keyword-nod2sym",
    "body": "nod2sym",
    "description": "- Use: \tTurns off the use of symmetry for second derivatives in\n\tbulk and defect calculations. Primarily of use for debugging\n\tpurposes. If using variable charges this option is used\n\timplicitly.\n- See also: \tdefect nod3\nnod3"
  },
  "keyword-nod3": {
    "prefix": "keyword-nod3",
    "body": "nod3",
    "description": "- Use: \tTurns off the calculation of third derivatives for ShengBTE\n\toutput. Allows just the second derivatives to be obtained.\n- See also: \toutput num3\nnodensity_out"
  },
  "keyword-nodensity_out": {
    "prefix": "keyword-nodensity_out",
    "body": "nodensity_out",
    "description": "- Use: \tDo not write phonon density of states curve to output channel.\nnodneb"
  },
  "keyword-nodneb": {
    "prefix": "keyword-nodneb",
    "body": "nodneb",
    "description": "- Use: \tTurns off the doubly nudged elastic band method and uses the singly\n\tnudged formalism.\n- See also: \tnebspring nebtolerance neb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnodpsym"
  },
  "keyword-nodpsym": {
    "prefix": "keyword-nodpsym",
    "body": "nodpsym",
    "description": "- Use: \tWhen performing a calculation of the site potentials for region 1\n\tin a defect calculation, the values are normally only output for\n\tthe asymmetric unit. If this keyword is specified then symmetry\n\tis still used in the defect calculation, but the site potentials\n\tare output for all sites in region 1.\n- See also: \tpot\nnodsymmetry"
  },
  "keyword-nodsymmetry": {
    "prefix": "keyword-nodsymmetry",
    "body": "nodsymmetry",
    "description": "- Use: \tSwitches off the use of symmetry in defect calculations.\n- See also: \tdefect\nnoelectrostatics"
  },
  "keyword-noelectrostatics": {
    "prefix": "keyword-noelectrostatics",
    "body": "noelectrostatics",
    "description": "- Use: \tTurns off the Ewald summation/Coulomb interaction even when charges\n\tare present in the input. This is mainly used when a screened\n\tCoulomb potential is being used, such as \"qerfc\", which requires\n\tthe charges to be present but replaces the normal energy term.\n- See also: \tqerfc qwolf\nnoenergy"
  },
  "keyword-noenergy": {
    "prefix": "keyword-noenergy",
    "body": "noenergy",
    "description": "- Use: \tDo not calculate energy.\nnoexclude"
  },
  "keyword-noexclude": {
    "prefix": "keyword-noexclude",
    "body": "noexclude",
    "description": "- Use: \tDo not freeze out atoms with no degrees of freedom from first and\n\tand second derivative calculations during optimisation. For systems\n\twhere the number of frozen atoms is small then turning off this\n\toption may increase the performance of the program as it allows\n\tvariable tuning of eta for each level of derivatives to be used.\n- See also: \tunfreeze\nnofirst_point"
  },
  "keyword-nofirst_point": {
    "prefix": "keyword-nofirst_point",
    "body": "nofirst_point",
    "description": "- Default: \tdo first point\n- Use: \tRequests that the translate option exclude the initial\n\tstarting structure from the calculation and only does\n\tthe translated calculations.\n- See also: \ttranslate\nnoflags"
  },
  "keyword-noflags": {
    "prefix": "keyword-noflags",
    "body": "noflags",
    "description": "- Use: \tStops input processor looking for flags in the absence of conp, conv,\n\tshell or cellonly and sets all flags to zero. Mainly of use for\n\tfitting energy hypersurfaces when the gradients are not to be fitted.\n- See also: \tconv cellonly breathe nobreathe shell isotropic ocell\nnofrequency"
  },
  "keyword-nofrequency": {
    "prefix": "keyword-nofrequency",
    "body": "nofrequency",
    "description": "- Use: \tCauses the frequencies not to be output after a phonon calculation.\n\tThis is useful when calculating phonon dispersion curves which can\n\tinvolve large numbers of k points and frequencies.\n- See also: \tkpoints dispersion shrink phonon\nnokpoints"
  },
  "keyword-nokpoints": {
    "prefix": "keyword-nokpoints",
    "body": "nokpoints",
    "description": "- Use: \tPrevents output of list of k points for each configuration.\nnoksymmetry"
  },
  "keyword-noksymmetry": {
    "prefix": "keyword-noksymmetry",
    "body": "noksymmetry",
    "description": "- Use: \tTurns off the use of Brillouin zone symmetry to reduce the number of\n\tk points associated with a given shrinking factor. Generally there is\n\tnever any reason to do this, except for checking purposes.\n- See also: \tphonon shrink\nnolist_md"
  },
  "keyword-nolist_md": {
    "prefix": "keyword-nolist_md",
    "body": "nolist_md",
    "description": "- Use: \tBy default list based methods are used for three and four\n\tbody terms in molecular dynamics to avoid problems with\n\tdiscontinuities in the energy as atoms move over cutoffs.\n\tIt also increases the speed of the three and four body\n\tterms dramatically. Specifying \"nolist\" will cause the\n\tprogram to use the standard non-list based method.\n- See also: \tthree-body four md\nnomcediff"
  },
  "keyword-nomcediff": {
    "prefix": "keyword-nomcediff",
    "body": "nomcediff",
    "description": "- Use: \tControls the algorithm used for calculating the energy difference\n\tduring a trial move. By default, GULP will try to use the energy\n\tchange associated only with the atoms that are affected by the\n\ttrial step, where possible. Specifying this keyword forces the full\n\tcalculation of the total energy at each step, which is more expensive.\n\tThis option is mainly for debug checking.\n- See also: \tmontecarlo\nnomodcoord"
  },
  "keyword-nomodcoord": {
    "prefix": "keyword-nomodcoord",
    "body": "nomodcoord",
    "description": "- Use: \tPrevents the use of mod on the input coordinates for most purposes.\n\tThe mod function is used to place fractional coordinates into the\n\tcentral unit cell. Note that this option applies to all steps of a\n\tcalculation.\nnomolecularinternalke"
  },
  "keyword-nomolecularinternalke": {
    "prefix": "keyword-nomolecularinternalke",
    "body": "nomolecularinternalke",
    "description": "- Use: \tCauses the initial velocites of atoms within a molecule to\n\tbe initialised to the same average value thereby resulting\n\tin no internal kinetic energy.\n- See also: \tmd\nnononanal"
  },
  "keyword-nononanal": {
    "prefix": "keyword-nononanal",
    "body": "nononanal",
    "description": "- Use: \tIf present, then the non-analytic correction to the phonons at\n\tthe gamma point is excluded. This was always true for versions\n\tof GULP prior to 1.4 and so this keyword allows backwards\n\tcompatability while leading to an incorrect LO/TO splitting.\n\tFrom version 4.2.0 the default has been changed and this correction\n\tis no longer included for a configuration unless the\n\tgamma_direction_of_approach is explicitly input or a dispersion\n\tcurve is requested.\n\tNote: The Born effective charges are not presently available\n\twith electronegativity equalisation and therefore this keyword\n\twill automatically be set.\n- See also: \tphonon gamma_direction_of_approach gamma_angular_steps intensity\nnopartial"
  },
  "keyword-nopartial": {
    "prefix": "keyword-nopartial",
    "body": "nopartial",
    "description": "- Use: \tUsed in conjuction with PDF keywords, suppresses output of partial pair\n\tdistributions.\n- See also: \tPDFcut PDFkeep nowidth\nnoqeem"
  },
  "keyword-noqeem": {
    "prefix": "keyword-noqeem",
    "body": "noqeem",
    "description": "- Use: \tCauses the electrostatic contribution to be excluded from the EEM\n\tcalculation. Invoke this will make the charge calculation geometry\n\tindependent.\n- See also: \teem qeq dcharge sm electronegativity gasteiger qbond pacha\n\teembond\nnoquicksearch"
  },
  "keyword-noquicksearch": {
    "prefix": "keyword-noquicksearch",
    "body": "noquicksearch",
    "description": "- Use: \tTurns off some timesaving changes to the searching algorithm for\n\tpairs of distances. Should have no effect, but this is still\n\tunder evaluation!\nnoreal"
  },
  "keyword-noreal": {
    "prefix": "keyword-noreal",
    "body": "noreal",
    "description": "- Use: \tDo not calculate real space contributions to the energy and\n\tderivatives.\n- See also: \tnorecip\nnorecip"
  },
  "keyword-norecip": {
    "prefix": "keyword-norecip",
    "body": "norecip",
    "description": "- Use: \tDo not calculate reciprocal space contributions to the energy and\n\tderivatives.\n- See also: \tnoreal\nnorepulsive_cutoff"
  },
  "keyword-norepulsive_cutoff": {
    "prefix": "keyword-norepulsive_cutoff",
    "body": "norepulsive_cutoff",
    "description": "- Use: \tGULP automatically introduces a cutoff for exponential\n\trepulsive terms when they become less than the accuracy\n\tfactor (default=10**-8) to save computer time where the\n\tBuckingham potential has a large cutoff due to the more\n\tslowly convergent C term. This option tells the program\n\tto rigorously enforce the cutoff given in the input file.\n- See also: \tcutp accuracy\nnorxQ"
  },
  "keyword-norxQ": {
    "prefix": "keyword-norxQ",
    "body": "norxQ",
    "description": "- Use: \tIf specified then this turns off the calculation of charges within ReaxFF\n- See also: \treaxff_chi reaxff_mu reaxff_gamma qiterative\nnosasinitevery"
  },
  "keyword-nosasinitevery": {
    "prefix": "keyword-nosasinitevery",
    "body": "nosasinitevery",
    "description": "- Use: \tCauses the SAS calculation not to be reinitialised at\n\tevery step of the calculation. It is generally recommended\n\tto reinitialise to ensure that calculation results are\n\tindependent of the starting point. It also avoids potential\n\tenergy surface discontinuities due to the history of segment\n\tcreation.\n- See also: \tcosmo\nnosderv"
  },
  "keyword-nosderv": {
    "prefix": "keyword-nosderv",
    "body": "nosderv",
    "description": "- Use: \tStops the use of symmetry in calculating the first derivatives, but\n\tnot the energy during line searches. This causes the program to\n\trevert to behaving like GULP0.4 and earlier versions. The user should\n\tnever need to use this option as it will slow down the code and is\n\tonly useful for algorithm checking purposes.\nnosymmetry"
  },
  "keyword-nosymmetry": {
    "prefix": "keyword-nosymmetry",
    "body": "nosymmetry",
    "description": "- Use: \tSwitches off symmetry after generating unit cell.\n\tFor non-primitive systems the final unit cell is primitive.\n- See also: \tspacegroup origin valid_spacegroups symmetry_operator\nnowidth"
  },
  "keyword-nowidth": {
    "prefix": "keyword-nowidth",
    "body": "nowidth",
    "description": "- Use: \tUsed in conjunction with PDF keywords, prevents output of individual\n\tpairwise contributions to the PDF peak widths in a .wid file\n- See also: \tPDFcut PDFkeep nowidth nofreq\nnowrap"
  },
  "keyword-nowrap": {
    "prefix": "keyword-nowrap",
    "body": "nowrap",
    "description": "- Use: \tStops coordinates from being wrapped back into the unit cell\n\tThis is a pseudonym for the nomodcoord keyword.\n- See also: \tnomodcoord\nnozeropt"
  },
  "keyword-nozeropt": {
    "prefix": "keyword-nozeropt",
    "body": "nozeropt",
    "description": "- Use: \tExclude zero point energy term from phonon/free energy calculation\n\t- this has the advantage that the conventional energy minimised\n\tstructure corresponds to the zero kelvin structure.\n- See also: \tphonon free_energy lowest_mode\nnum3"
  },
  "keyword-num3": {
    "prefix": "keyword-num3",
    "body": "num3",
    "description": "- Use: \tForces the use of numerical third derivatives for force constant evaluation\n\teven when analytic third derivatives are available. This is only needed\n\tfor debugging purposes. At present this keyword only applies to the calculation\n\tof force constants for output to ShengBTE.\n- See also: \tnumerical output shopt threshold nod3\nnumdiag"
  },
  "keyword-numdiag": {
    "prefix": "keyword-numdiag",
    "body": "numdiag",
    "description": "- Use: \tUse numerical estimates of the diagonal elements as a starting point\n\tfor the Hessian. Can be useful when exact Hessian is ill-conditioned.\n- See also: \tunit dfp positive conjugate lbfgs steepest\nnumerical"
  },
  "keyword-numerical": {
    "prefix": "keyword-numerical",
    "body": "numerical",
    "description": "- Use: \tForces the use of numerical second derivatives for property evaluation\n\teven when analytic second derivatives are available. This is only needed\n\tfor debugging purposes.\n\tNB: If using numerical in combination with fc_supercell it is important\n\tto make sure that the interaction range for a given force term is less\n\tthan the size of the unit cell being used. If this is not the case then\n\tthere will be some error in the phasing of the second derivatives. In\n\tother words, the gamma point results will be correct, but the dispersion\n\taway from gamma may contain errors. This problem is most likely to happen\n\tfor small cells when using bondorder or manybody potentials since\n\tinteractions become coupled over longer ranges.\n\tNB: Numerical derivatives can be in error in cases where the finite\n\tdifferences go across cutoff boundaries!\n- See also: \tproperty sfinite pfinite fc_supercell num3\nocell"
  },
  "keyword-ocell": {
    "prefix": "keyword-ocell",
    "body": "ocell",
    "description": "- Use: \tUse cell parameters instead of strains for optimisation of the cell\n\tBy default GULP uses strain derivatives for unit cell optimisation.\n\tHowever, if you wish to fix cell parameters with flags then this will\n\tbe easier with this keyword since the flags will refer directly to\n\tthe cell parameters rather than strains.\n- See also: \tconv cellonly breathe nobreathe noflags shell isotropic scan_cell\n\tstrain\noldintensity"
  },
  "keyword-oldintensity": {
    "prefix": "keyword-oldintensity",
    "body": "oldintensity",
    "description": "- Use: \tSpecifies that the old IR intensities, as per pre-GULP-4.0.5,\n\tbe computed instead of the new values based on the Born effective\n\tcharge tensor.\n- See also: \tintensity eigen msd\noldunits"
  },
  "keyword-oldunits": {
    "prefix": "keyword-oldunits",
    "body": "oldunits",
    "description": "- Use: \tThe default units of elastic constants have now changed to GPa\n\tin order to be consistent and modern. This keyword is included\n\tto maintain backwards compatibility.\noldvarorder"
  },
  "keyword-oldvarorder": {
    "prefix": "keyword-oldvarorder",
    "body": "oldvarorder",
    "description": "- Use: \tIn order to make parallelisation of the second derivatives easier\n\tthe order of variables in optimisation has been changed such that\n\tinternal coordinates appear before cell variables. Specifying this\n\tkeyword returns the order to that used in earlier versions of GULP\n\tfor backward compatibility. Note that the order shouldn't change\n\tthe answers and so this keyword is primarily for debugging and code\n\tverification.\n- See also: \toptimise\noperators"
  },
  "keyword-operators": {
    "prefix": "keyword-operators",
    "body": "operators",
    "description": "- Use: \tCauses the program to print out the rotation matrix and shifts for\n\tall bulk symmetry operators. Primarily a debugging keyword.\noptimise"
  },
  "keyword-optimise": {
    "prefix": "keyword-optimise",
    "body": "optimise",
    "description": "- Use: \tInvokes geometry optimisation using the NR/BFGS minimiser.\n\tThe exact Hessian is used where necessary and subsequently updated\n\tunless a failure occurs in which case a cycle of steepest descents\n\tis used to continue the optimisation.\n- See also: \tconp conv cellonly shell transition_state rfo unfix single md montecarlo\n\teharmonic fix_atom oldvarorder hessian ocell\noptlower"
  },
  "keyword-optlower": {
    "prefix": "keyword-optlower",
    "body": "optlower",
    "description": "- Use: \tCauses an optimisation to be performed after the lower_symmetry\n\ttask has been performed as part of the same run. Note that it is\n\tnormally worthwhile using the switch option to get the minimiser\n\tto change to rfo after lower_symmetry has been performed.\n- See also: \tphonon eigenvectors slower lower_symmetry switch\northorhombic"
  },
  "keyword-orthorhombic": {
    "prefix": "keyword-orthorhombic",
    "body": "orthorhombic",
    "description": "- Use: \tOnly allow cell lengths to change, but not angles, during\n\toptimisation or MD.\n- See also: \tconp conv isotropic cellonly ocell\noutcon"
  },
  "keyword-outcon": {
    "prefix": "keyword-outcon",
    "body": "outcon",
    "description": "- Use: \tBy default any contraints generated by the program automatically\n\tare not dumped to the restart file unless the user has also added\n\tsome constraints. This is to prevent errors when users use the\n\trestart file, but with nosym specified. Specifying outcon on the\n\tkeyword line will cause the program to dump all constraints\n\tregardless.\n- See also: \tconstrain\npacha"
  },
  "keyword-pacha": {
    "prefix": "keyword-pacha",
    "body": "pacha",
    "description": "- Use: \tTurns on calculation of variable charges using the formulation\n\tof Marc Henry known as Pacha. See ChemPhysChem, 3, 561-569\n\t(2002) for more details. At present the parameters for this\n\tmethod in GULP are limited to elements below number 102 in the periodic\n\ttable.\n- See also: \tsm eem qeq gasteiger noqeem external_potential\n\teembond\npdf"
  },
  "keyword-pdf": {
    "prefix": "keyword-pdf",
    "body": "pdf",
    "description": "- Use: \tCalculate the Pair Distribution Function up to a given maximum radius (rmax)\n\tby summing peak widths calculated for each atomic pair. Makes use of the\n\ttheory of Chung and Thorpe for calculating PDFs from phonon information\n\tPhonon information will be generated according to a full Monkhorst-Pack grid,\n\twith a specified density (using the shrink option). It is essential that all\n\tk-points are evaluated within a single gamma-centred Brillouin Zone; this\n\tis automatically enforced through the use of the \"shift\" keyword.\n- See also: \tPDFcut PDFkeep nowidth nofreq optimise rmax rbins shrink bbar siginc\nphonon"
  },
  "keyword-phonon": {
    "prefix": "keyword-phonon",
    "body": "phonon",
    "description": "- Use: \tCauses the phonon frequencies to be calculated for each structure\n\twith k points specified at the end of each run. If no k points are\n\texplicitly given the phonons are calculated at the gamma point.\n\tNote: For materials with charges it is important to consider the\n\teffect of the LO/TO splitting.\n- See also: \tkpoints dispersion shrink eigenvectors lower_symmetry box\n\tproject_dos output nozeropt gamma_direction_of_approach omega\n\tdynamical_matrix meanke frequencies eckart box fc_supercell\n\tmsd ghostcell alamode ala_disp ala_cutoff groupvelocity\n\tgrueneisen threshold\npositive"
  },
  "keyword-positive": {
    "prefix": "keyword-positive",
    "body": "positive",
    "description": "- Use: \tEnsure that the Hessian always behaves as positive definite during\n\tNewton-Raphson by ensuring the search vector has the same sign as\n\tas the gradient vector.\n- See also: \tunit numdiag dfp conjugate lbfgs steepest\npot"
  },
  "keyword-pot": {
    "prefix": "keyword-pot",
    "body": "pot",
    "description": "- Use: \tPrint out electrostatic site potentials and their first derivatives.\n\tIf cell multipole method is specified then this technique will be\n\talso used in the calculation of the potential for clusters. Note\n\tthat the potential calculated is not corrected for Coulomb subtract\n\toptions in the two-body potentials or molecule options. However, in\n\ta core-shell model the potential due to the other component of an\n\tatom is excluded.\n\tIt is now possible to also use \"pot\" for defect\n\tcalculations in which case GULP returns the electrostatic\n\tpotential at the sites of the asymmetric unit of region 1.\n\tThis potential does not include the displacements in\n\tregion 2a.\n\tNote : when using pot in combination with QEq the potential calculated\n\tis that resulting from q/r, not the integral expression used within a\n\tQEq determination of the charges.\n- See also: \tefg potential nodpsym potsites potgrid\npredict"
  },
  "keyword-predict": {
    "prefix": "keyword-predict",
    "body": "predict",
    "description": "- Use: \tGeneral Algorithm for Structure Prediction Pre-gulp routine.\n\tGiven contents of unit cell atomic coordinates are found using a\n\tglobal optimiser (simulated annealing or genetic algorithm).\n- See also: \tgenetic anneal contents global cost\nand"
  },
  "keyword-pregionforce": {
    "prefix": "keyword-pregionforce",
    "body": "pregionforce",
    "description": "- Use: \tIf present, this causes the force on each region to be output.\n- See also: \tsfractional\npreserve_Q"
  },
  "keyword-preserve_Q": {
    "prefix": "keyword-preserve_Q",
    "body": "preserve_Q",
    "description": "- Use: \tIf charges are given in a library or via the species command these\n\tcan potentially overwrite charges input on the end of a coordinate\n\tline. By specifying this keyword GULP preserves the state of the\n\tcharges from the coordinate input and prevents overwriting. Note\n\tthat if fitting of charges is specified or a method that generates\n\tcharges, such as eem or qeq, these options will still lead to the\n\tcharges being modified.\n- See also: \tspecies library\nproperty"
  },
  "keyword-property": {
    "prefix": "keyword-property",
    "body": "property",
    "description": "- Default: \tproperties not calculated\n- Use: \tCauses properties to be calculated and output.\n\tFor 3-D systems this includes the elastic constants, dielectric\n\tconstants, piezoelectric constants, sound wave velocities, bulk\n\tand shear moduli, and Youngs modulus.\n\tFor 0-D systems this leads to the calculation of the moment of\n\tinertia tensor and, if the temperature is greater than zero,\n\tthe calculation of the rotational and translational partition\n\tfunctions, plus the free energy. Because the rotational partition\n\tfunction depends on the symmetry number, this can be input by the\n\tuser, otherwise it will default to 1.\n- See also: \tnumerical temperature pressure symmetry_number raman\nprt_eam"
  },
  "keyword-prt_eam": {
    "prefix": "keyword-prt_eam",
    "body": "prt_eam",
    "description": "- Use: \tOutput the density and energy associated with atoms during an EAM calculation.\n\tFor a MEAM calculation, the density printed is the total when summed over the\n\tcomponent orders.\n- See also: \team_functional eam_density prt_two prt_four prt_three prt_six\nprt_four"
  },
  "keyword-prt_four": {
    "prefix": "keyword-prt_four",
    "body": "prt_four",
    "description": "- Use: \tOutput the fourbody energy contributions. The atoms are output in\n\tthe order of the torsion, 1-2-3-4, or with the middle atom as number 1\n\tfor the out of plane terms.\n- See also: \tprt_eam prt_two prt_three prt_six\nprt_six"
  },
  "keyword-prt_six": {
    "prefix": "keyword-prt_six",
    "body": "prt_six",
    "description": "- Use: \tOutput the sixbody energy contributions.\n- See also: \tprt_eam prt_four prt_three prt_two\nprt_three"
  },
  "keyword-prt_three": {
    "prefix": "keyword-prt_three",
    "body": "prt_three",
    "description": "- Use: \tOutput the threebody energy contributions. Atom 1 is the pivot atom\n\twhen output.\n- See also: \tprt_eam prt_two prt_four prt_six\nprt_two"
  },
  "keyword-prt_two": {
    "prefix": "keyword-prt_two",
    "body": "prt_two",
    "description": "- Use: \tOutput the real space twobody energy contributions.\n- See also: \tprt_eam prt_four prt_three prt_six\npureQ"
  },
  "keyword-pureQ": {
    "prefix": "keyword-pureQ",
    "body": "pureQ",
    "description": "- Use: \tBy default, a Wolf sum is used to evaluate the Coulomb\n\tpotential in periodic systems when applied to the SAS\n\t- SAS interaction matrix (A) in COSMO/COSMIC. For\n\tconsistency, this is retained in 0-D where it is not\n\tnecessary. This keyword causes a pure 1/r Coulomb\n\tpotential to be used instead.\n- See also: \tcosmo cosmic cwolf\nqbond"
  },
  "keyword-qbond": {
    "prefix": "keyword-qbond",
    "body": "qbond",
    "description": "- Use: \tIndicates that charges should be calculated using bond increments.\n\tHere the charge on the site is the sum of the increments associated\n\twith each bond. These increments are specified using the qincrement\n\toption.\n- See also: \tqeq eem gasteiger qincrement noqeem eembond\nqeq"
  },
  "keyword-qeq": {
    "prefix": "keyword-qeq",
    "body": "qeq",
    "description": "- Use: \tCalculate charges by Rappe and Goddard's QEq scheme.\n\tThis differs from Mortier's scheme in that the Coulomb\n\tinteraction is replaced by the integral over two s\n\ttype Slater orbitals for small distances. It is also\n\tavailable for the whole periodic table up to Lr (103).\n\tIf specified with optimise then the charges will be\n\trecalculated at every point of the optimisation.\n\n\tNB Electronegativity equalisation schemes should NOT\n\tbe used in combination with Coulomb subtraction of\n\tany form otherwise the calculation of the charges and\n\tthe energy will not be self-consistent. This leads to\n\tall derivatives being incorrect as dE/dQ is no longer\n\tzero. If Coulomb subtracted potentials are to be used\n\tthen charges must be calculated for the initial geometry\n\tand then frozen.\n\n\tNote: it is important to investigate the effect of\n\tqeqradius on the degree of convergence and CPU time.\n\n\tNote: Phonon calculations are limited with the QEq keyword\n\tto the gamma point without the LO/TO splitting.\n\n\tNote: Only region 1 atoms are included in QEq and fixed\n\tcharges will be taken for region 2.\n- See also: \teem qeqtol qeqiter qeqradius dcharge sm qelectronegativity\n\tgasteiger pacha noqeem external_potential\nqextrapolate"
  },
  "keyword-qextrapolate": {
    "prefix": "keyword-qextrapolate",
    "body": "qextrapolate",
    "description": "- Use: \tTry to extrapolate the charges forward during MD with the reaxFF algorithm. Only works\n\twhen qiterative is also specified.\n- See also: \treaxff_chi reaxff_mu reaxff_gamma reaxff_qshell qiterative\nqiterative"
  },
  "keyword-qiterative": {
    "prefix": "keyword-qiterative",
    "body": "qiterative",
    "description": "- Use: \tInvokes the use of an iterative method to solve for charges in a\n\tvariable charge scheme, rather than matrix inversion. This applies\n\tboth COSMO/COSMIC calculations, where the charge is induced on the\n\tsolvent accessible surface, and to variable charge schemes including\n\tReaxFF, EEM, and QEq. This algorithm is usually superior for large\n\tsystems, especially in the case of ReaxFF where it offers linear-scaling\n\tdue to sparsity. For parallel calculations this option must be used\n\tfor variable charge algorithms since parallel matrix inversion is not\n\tyet implemented.\n\tNB: To obtain precise second derivatives by finite differences then\n\tit is best NOT to use this keyword since it will generate more numerical\n\tnoise.\n- See also: \tcosmo cosmic reaxff_mu reaxff_chi reaxff_gamma qsolver qiterations\nqok"
  },
  "keyword-qok": {
    "prefix": "keyword-qok",
    "body": "qok",
    "description": "- Use: \tif specified this allows a periodic calculation to be\n\trun when a solid is not charge neutral. This implies\n\tthat a neutralising uniform charge background will be\n\tadded.\n\tNote that defect calculation cannot be performed when\n\tthis term is present.\n- See also: \tmadelung\nqsas"
  },
  "keyword-qsas": {
    "prefix": "keyword-qsas",
    "body": "qsas",
    "description": "- Use: \tCauses the charges on the segments of the solvent\n\taccessible surface to be output, as well as the total\n\tcharge and dipole(s).\n- See also: \tcosmo cosmic qonsas\nraman"
  },
  "keyword-raman": {
    "prefix": "keyword-raman",
    "body": "raman",
    "description": "- Default: \tRaman susceptibilities not calculated\n- Use: \tCauses Raman susceptibilities to be calculated and output.\n\tThe quantities output are the derivatives of:\n\n\t(1/(4*pi))(epsilon_infinity - delta_ab)\n\n\tHere epsilon_infinity is the high frequency dielectric\n\tconstant tensor and delta_ab is the delta function that is\n\tone for xx, yy, zz and otherwise 0. This quantity is the\n\tsame as q.(D**-1).q, where q is the vector shell charges,\n\tand D is the matrix of shell-shell second derivatives.\n\n\tNote that this will only have an effect if a shell model is\n\tused since it involves the high frequency polarisability.\n\tIt also requires that a property calculation is performed\n\tsince it uses the high frequency dielectric constant tensor.\n\n\tNB: The calculation of this quantity requires analytical\n\tthird derivatives and so is only available for certain\n\tpotential models (pairwise, three- and four-body terms).\n- See also: \tproperty rdirection eckart\nregi2a"
  },
  "keyword-regi2a": {
    "prefix": "keyword-regi2a",
    "body": "regi2a",
    "description": "- Use: \tprint out region 2a in the output\n- See also: \tregion_1 regi_before defect\nregi_before"
  },
  "keyword-regi_before": {
    "prefix": "keyword-regi_before",
    "body": "regi_before",
    "description": "- Default: \toutput region 1 only after a minimisation\n- Use: \tOutput region 1 list before the start of a defect calculation.\n- See also: \tdefect centre size region_1 bulk_noopt\nrelax"
  },
  "keyword-relax": {
    "prefix": "keyword-relax",
    "body": "relax",
    "description": "- Default: \tno relaxation during fitting\n- Use: \tInvokes fitting to structural displacements on relaxation rather than\n\tto the derivatives. This also means any observables are fitted at the\n\toptimised rather than experimental structure. There is no need to give\n\t\"simul\" as an option if relax fitting. This method should only be used\n\tonce a reasonable set of potentials have been obtained by conventional\n\tfitting, otherwise the optimisations may fail. It is also an order of\n\tmagnitude more expensive in cputime!\n- See also: \tfit simultaneous\nrephase"
  },
  "keyword-rephase": {
    "prefix": "keyword-rephase",
    "body": "rephase",
    "description": "- Use: \tChanges the eigenvector phases so the component with the largest magnitude is\n\tall real for all eigenvectors, and renormalizes to unity. This makes visualisation\n\tof eigenvectors simpler. Called as a dependent keyword by other keywords, for\n\texample PDF.\n- See also: \tPDF\nrestore"
  },
  "keyword-restore": {
    "prefix": "keyword-restore",
    "body": "restore",
    "description": "- Use: \tCauses the region 2 matrices, derived from the bulk\n\tsecond derivatives, to be restored from disk (fort.44)\n\tfor use in restarts. This is important for large\n\tbulk materials where the second derivatives are\n\texpensive to recalculate. The fort.44 file must have\n\tbeen generated in a previous run.\n- See also: \tsave defect\nrfo"
  },
  "keyword-rfo": {
    "prefix": "keyword-rfo",
    "body": "rfo",
    "description": "- Use: \tInvoke the Rational Function Optimisation (RFO) method for searching\n\tfor stationary points. By default the optimiser searches for the\n\tminimum and may prove advantageous over the standard optimiser if the\n\tHessian is ill-conditioned. Also the Newton-Raphson method will yield\n\ttransition states if started too close to one, whereas the RFO method\n\twill find the minimum.\n\tTransition_state is a special case of rfo, in which the optimiser is\n\tto converge to a first order transition state.\n\tFor transition state calculations, the updating scheme is DFP by\n\tdefault instead of BFGS as the former is not biased towards positive\n\tdefiniteness of the Hessian.\n- See also: \toptimise transition_state\nsave"
  },
  "keyword-save": {
    "prefix": "keyword-save",
    "body": "save",
    "description": "- Use: \tCauses the region 2 matrices, derived from the bulk\n\tsecond derivatives, to be saved to disk as fort.44\n\tfor use in restarts. This is important for large\n\tbulk materials where the second derivatives are\n\texpensive to recalculate.\n- See also: \trestore defect\nshell"
  },
  "keyword-shell": {
    "prefix": "keyword-shell",
    "body": "shell",
    "description": "- Use: \tSet flags for shell only optimisation (equivalent to optical\n\tcalculation). It is still necessary to specify \"conp\" or \"conv\"\n\tso that the cell flags are correctly set.\n- See also: \tconp conv noflags breathe nobreathe cellonly isotropic ocell\nshopt"
  },
  "keyword-shopt": {
    "prefix": "keyword-shopt",
    "body": "shopt",
    "description": "- Use: \tIf numerical third derivatives are being used to determine the force constants\n\tfor output to ShengBTE then this uses an algorithm in which only the cores are\n\tfinite differenced and the shells are optimised at every point. This is typically\n\tless numerically precise than the default method where the shells are handled by\n\tmatrix multiplication.\n- See also: \tnumerical output num3\nsimplex"
  },
  "keyword-simplex": {
    "prefix": "keyword-simplex",
    "body": "simplex",
    "description": "- Use: \tUse the simplex algorithm for fitting instead of unit matrix with BFGS method.\n- See also: \tfit simul relax genetic fbfgs delta\nsimultaneous"
  },
  "keyword-simultaneous": {
    "prefix": "keyword-simultaneous",
    "body": "simultaneous",
    "description": "- Default: \tno relaxation\n- Use: \tAllows simultaneous relaxation of shells during fitting,\n\tincluding both position and radius.\n- See also: \trelax fit breathe noflags\nsingle"
  },
  "keyword-single": {
    "prefix": "keyword-single",
    "body": "single",
    "description": "- Use: \tCalculate energy only - default calculation.\n- See also: \toptimise gradient md montecarlo\nsite_energy"
  },
  "keyword-site_energy": {
    "prefix": "keyword-site_energy",
    "body": "site_energy",
    "description": "- Default: \tsite energies not printed\n- Use: \tTells GULP to write out the site energies if possible.\n\tCurrently this is implemented in routines that compute\n\tthe forces and so you should use \"gradients\", \"opti\"\n\tor \"md\" in the run type to ensure there is some output.\n- See also: \tgradients optimise md\nsm"
  },
  "keyword-sm": {
    "prefix": "keyword-sm",
    "body": "sm",
    "description": "- Use: \tTurns on calculation of variable charges using the formulation\n\tof Streitz and Mintmire. Here the charge is partitioned into a\n\tfixed nuclear point charge and a variable charge distribution\n\twith the shape of a 1s orbital. To use this option parameters\n\tmust be specified with the smelectronegativity option too.\n\tIf the keyword is given as \"smzz\" then the Znuc_i-Znuc_j energy\n\tterm given by Streitz and Mintmire, but neglected as part of the\n\ttwo-body energy is included explicitly.\n- See also: \tsmelectronegativity eem qeq pacha gasteiger noqeem external_potential\n\teembond\nsopt"
  },
  "keyword-sopt": {
    "prefix": "keyword-sopt",
    "body": "sopt",
    "description": "- Use: \tSpecifies that the details of shell optimisations during MD be output\n- See also: \tshellmass iterations md\nspatial"
  },
  "keyword-spatial": {
    "prefix": "keyword-spatial",
    "body": "spatial",
    "description": "- Use: \tRequests that a spatial decomposition algorithm is used wherever\n\tpossible to try to achieve linear scaling with system size.\n\n\tNB: The minimum image approach is incompatible with the spatial\n\talgorithm and so if both are specified the spatial algorithm will\n\tbe used.\n- See also: \trcspatial minimum_image\nspme"
  },
  "keyword-spme": {
    "prefix": "keyword-spme",
    "body": "spme",
    "description": "- Use: \tUse the smoothed particle mesh Ewald sum where possible instead of the\n\tstandard Ewald sum. Note that this option only currently has first\n\tderivatives and does not support the calculation of site energies or\n\tuse of multiple regions. The main use for molecular dynamics or optimisation\n\tof large systems. Note that the values of rspeed and qgrid should be tuned\n\tto give the best performance for the desired precision.\n\tNB: This keyword is currently incompatible with variable charge models,\n\tcalculation of site energies and atomic stresses.\n- See also: \taccuracy rspeed qgrid bspline\nstatic_first"
  },
  "keyword-static_first": {
    "prefix": "keyword-static_first",
    "body": "static_first",
    "description": "- Use: \tRun a static optimisation first before the free energy energy minimisation.\n\tThis should always be done unless restarting a job from a previously\n\toptimised structure. However, because this would negate the effects of a\n\trestart the default action is not to do this.\n- See also: \tphonon nozeropt free_energy zsisa lowest_mode\nsteepest"
  },
  "keyword-steepest": {
    "prefix": "keyword-steepest",
    "body": "steepest",
    "description": "- Use: \tUse steepest descents weighted by the average diagonal Hessian\n\telement instead of the diagonal elements multiplying the gradients.\n- See also: \tunit numdiag positive conjugate lbfgs dfp\nstorevectors"
  },
  "keyword-storevectors": {
    "prefix": "keyword-storevectors",
    "body": "storevectors",
    "description": "- Use: \tUse algorithms, where possible, that involve storing a table of\n\tinteratomic vectors that lie within the cutoff distance. Currently\n\tthis applies only to molecular dynamics. The idea is that by reducing\n\tthe frequency with which the vectors are searched for, the calculation\n\twill be considerably speeded up in return for a small loss of precision.\n\tThe frequency of updating, controlled by the \"resetvectors\" option,\n\tshould be tested for the particular system of study.\n- See also: \tresetvectors extracutoff\nstrain"
  },
  "keyword-strain": {
    "prefix": "keyword-strain",
    "body": "strain",
    "description": "- Use: \tInstead of using the actual unit cell as input/output, a reference\n\tcell is used along with a specified set of strains to record the\n\tchange in the cell.\n- See also: \tscan_cell ocell vectors cell cellstrain\nstress_out"
  },
  "keyword-stress_out": {
    "prefix": "keyword-stress_out",
    "body": "stress_out",
    "description": "- Use: \tCauses the stresses to be output at the final geometry. This is\n\tthe same as the strain derivatives divided by the volume and\n\tconverted to GPa, plus correction for any external pressure.\n- See also: \tatomic_stress\nthermalconductivity"
  },
  "keyword-thermalconductivity": {
    "prefix": "keyword-thermalconductivity",
    "body": "thermalconductivity",
    "description": "- Use: \tCalculate the thermal conductivity of a solid at a given\n\ttemperature. This method uses a gamma point phonon calculation\n\tfor a supercell to estimate the thermal conductivity using the\n\tmethod of Allen and Feldman, Phys. Rev. B, 48, 12581 (1993).\n\tThe output includes the mode diffusivities, Di (in cm^2/s),\n\tand the overall thermal conductivity (in W/(m.K)). Note that\n\tin this approximation the precise value obtained depends on\n\tthe degree of broadening of the density of states, controlled\n\tby the broaden_dos option, the drop tolerance for the Lorentzian\n\tbroadening function, the temperature used, and finally the size\n\tof the supercell (until converged with increasing size). Also\n\tnote that the non-analytic correction to the phonons at gamma\n\tis turned off for a thermal conductivity calculation.\n\tIn order to correctly allow for the acoustic mode contribution\n\tto thermal conductivity then a lower bound frequency should be\n\tspecified for the Allen-Feldman contribution and an analytic\n\tintegration used, as described under the omega_af option.\n\tNB: Here the heat capacity for the modes is computed using the\n\tfull quantised expression from lattice dynamics, rather than\n\tapproximating the value from equipartition, as used in some\n\tother work.\n\n\tIf the thermal conductivity is required more accurately and for\n\tordered solids then GULP can write out the files required for\n\tuse with the program ShengBTE that implements the Boltzmann\n\tTransport Equations. To obtain the thermal conductivity via this\n\troute the steps are:\n\t1) Run a GULP calculation to optimise the structure and compute\n\tthe gamma point phonons with the option \"output shengbte\"\n\tspecified. Note that the third order force constants will be\n\tcomputed analytically if possible, or numerically if they are\n\tnot available. To force the use of numerical third derivatives\n\tthe keyword \"num3\" can be specified. It is important to note\n\tthat the range of third order force constants output depends\n\ton the size of the supercell specified using the \"super\" option.\n\t2) Modify the file CONTROL to ensure that the correct temperature\n\tk point sampling (ngrid) and broadening are specified for your\n\tsystem.\n\t3) Use the files CONTROL, FORCE_CONSTANTS_2ND and FORCE_CONSTANTS_3RD\n\tas the inputs for ShengBTE.\n\t4) Assuming the run is successful then the final overall thermal\n\tconductivity will be given in the file BTE.kappa_scalar as the\n\tlast line (converged value from final iteration).\n\n\tAlternatively GULP can use Alamode (if installed) to compute the\n\tthermal conductivity and phonon lifetimes. To do this it is important\n\tto set the environment variable ALAMODE_DIR to point to the root\n\tdirectory of Alamode.\n- See also: \tbroaden_dos temperature lorentzian_tolerance omega_af\n\tgroupvelocity output num3 supercell ghost_supercell\n\talamode ala_disp ala_cutoff\ntransition_state"
  },
  "keyword-transition_state": {
    "prefix": "keyword-transition_state",
    "body": "transition_state",
    "description": "- Use: \tInvoke RFO optimisation to find nearest stationary point with one\n\tnegative Hessian eigenvalue. More general optimisations to transition\n\tstates of any order can be performed using the RFO method.\n\tImportant note - a transition state optimisation will only lead to\n\tone negative phonon frequency if the calculation is run without any\n\tcrystal symmetry.\n- See also: \toptimise rfo\numorse"
  },
  "keyword-umorse": {
    "prefix": "keyword-umorse",
    "body": "umorse",
    "description": "- Use: \tBy default the UFF generation rules use a harmonic potential for the\n\tbonded interaction. By specifying this keyword, the Morse potential\n\tis used instead of harmonic.\n- See also: \tuff1\nunfix"
  },
  "keyword-unfix": {
    "prefix": "keyword-unfix",
    "body": "unfix",
    "description": "- Use: \tBy default, if GULP sets the flags for a system automatically then one\n\tatom will be fixed to remove translational invariance, which would be\n\tfatal to a Hessian based optimiser. For first derivative methods, there\n\tis no such need and they may work better by not fixing any atoms. The\n\tunfix keyword tells GULP not to fix any of the atoms.\n- See also: \toptimise noflags conp conv fix_atom\nunit"
  },
  "keyword-unit": {
    "prefix": "keyword-unit",
    "body": "unit",
    "description": "- Use: \tUse unit diagonal matrix as starting point for Hessian.\n\tCan be useful when exact Hessian is ill-conditioned.\n- See also: \tnumdiag dfp positive conjugate lbfgs\nveck"
  },
  "keyword-veck": {
    "prefix": "keyword-veck",
    "body": "veck",
    "description": "- Use: \tSpecifies that an alternative reciprocal space algorithm is used in\n\twhich the inner loop is over k vectors and the outer (parallelised)\n\tloop is over atoms. This may scale better on some platforms, but is\n\tusually slower overall.\n- See also: \trspeed accuracy index_k ewaldrealradius\nvoigt"
  },
  "keyword-voigt": {
    "prefix": "keyword-voigt",
    "body": "voigt",
    "description": "- Default: \tReuss convention for bulk/shear modulus\n- Use: \tSpecifies that the Voigt convention is used for the bulk\n\tmodulus. The Voigt convention takes the average of the\n\telastic constants in the 1-3 x 1-3 block.\n- See also: \tbulk_modulus shear_modulus elastic fit observables\n\thill young poisson\nzero_potential"
  },
  "keyword-zero_potential": {
    "prefix": "keyword-zero_potential",
    "body": "zero_potential",
    "description": "- Use: \tSets the average potential across all lattice sites to be\n\tzero. This allows comparison of the site potentials to be\n\tmade more readily between the bulk and molecular/surface\n\tsituations.\n- See also: \tpotential\nzsisa"
  },
  "keyword-zsisa": {
    "prefix": "keyword-zsisa",
    "body": "zsisa",
    "description": "- Use: \tperform free energy minimisation in the Zero Static Internal Stress\n\tApproximation (ZSISA) - this implies that only the strain derivatives\n\twith respect to the free energy are used while the internal derivatives\n\tneglect the free energy contribution. This approach is equivalent to\n\tthe old numerical method of free energy minimisation. Note this keyword\n\tdoes not apply to molecules!\n- See also: \tfree lowest_mode shrink\n3coulomb"
  },
  "option-3coulomb": {
    "prefix": "option-3coulomb",
    "body": "3coulomb",
    "description": "- Format: \t3coulomb <intra/inter> <bond> <nbeq/nbne nbond>\n\tatom1 atom2 atom3 scale <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23\nUnits \tscale in fractional, distances in Angstroms\n- Use: \tCoulomb subtraction between atoms that are connected by a three-body term:\n\n\tE(three) = - scale.q2.q3/r23\n\n\twhere q2 and q3 are the charges of the atoms 2 and 3.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger bcross lin3\n\turey-bradley murrell-mottram bacross hydrogen-bond equatorial\n\tuff3 bagcross\nabsdipolemoment"
  },
  "option-absdipolemoment": {
    "prefix": "option-absdipolemoment",
    "body": "absdipolemoment",
    "description": "- Format: \tabsdipolemoment\n\tvalue <weight>\nUnits \tDebye\n- Default: \tno dipole moment to be fitted\n- Use: \tSubsection of observables, used for specifying an experimental\n\tabsolute dipole moment for fitting. Here the square root of the\n\tdipole moment components along each axis are used so that the\n\tquantity is rotationally invariant.\n- See also: \tobservables\nabsolute_coordinates"
  },
  "option-absolute_coordinates": {
    "prefix": "option-absolute_coordinates",
    "body": "absolute_coordinates",
    "description": "- Format: \tabsolute_coordinates\n\tatom_no x y z\nUnits \tAngstroms\n- Use: \tSpecifies the absolute Cartesian coordinates of the atoms. Used for\n\trestarting MD calculations and determining properties, such as\n\tdiffusion coefficients, where the migration across cell boundaries\n\tmust be correctly tracked.\n- See also: \tmd initial_coordinates\naccelerations"
  },
  "option-accelerations": {
    "prefix": "option-accelerations",
    "body": "accelerations",
    "description": "- Format: \taccelerations <no._of_accelerations>\n\tatom_no (acceleration_x acceleration_y acceleration_z) x no. of accelerations\nUnits \tAngstroms / ps in powers appropriate to order\n- Default: \tNone\n- Use: \tSpecifies the current Cartesian accelerations in an MD simulation and\n\tcan be used for restarting such a run. Can also be used to set the\n\tinitial values. Depending on the algorithm, different orders of acceleration\n\tare required. For example, Gear fifth order requires 4, and velocity\n\tVerlet requires 1.\n- See also: \tmd velocities\naccuracy"
  },
  "option-accuracy": {
    "prefix": "option-accuracy",
    "body": "accuracy",
    "description": "- Format: \taccuracy <exponent> <<Euler-Maclaurin_order> <maximum-cell> <acc-1D>>\nUnits \tnone\n- Default: \t12.0 < 4 50 8.0>\n- Use: \tControls the accuracy of the electrostatic summations. Note : the last two\n\tvalues only apply to 1-D systems. The first value is the target number of\n\tconverged significant figures in the electrostatic energy or the fractional\n\tuncertainty in the electrostatic energy, where the value is used as an\n\texponent (i.e. 10**-(exponent)). This determines the real and reciprocal\n\tspace cut-offs of the Ewald sum (3-D) and Parry sum (2-D) for a given value\n\tof rspeed.\n\tFor 1-D systems a direct real space approach is used, as per CRYSTAL. Here\n\tthe energy is converged to the precision specified by acc-1D by searching\n\tfor the number of neutral cells that must be included in each direction in\n\tthe sum. The maximum-cell indicates the upper bound to be used while the\n\tsecond optional parameter is the order of the series used in the numerical integrals.\n\tGenerally the default values should be sufficient.\n- See also: \trspeed veck index_k spme\nala_cutoff"
  },
  "option-ala_cutoff": {
    "prefix": "option-ala_cutoff",
    "body": "ala_cutoff",
    "description": "- Format: \tala_cutoff cutoff_harm cutoff_cubic <none> <au>\nUnits \tAngstrom, unless au is specified in which case it will be atomic units\n- Default: \t8.0 Angstroms for both harmonic and cubic force constants.\n- Use: \tSpecifies the force constant cutoff (distance beyond which force\n\tconstants are assumed to be zero) for the thermal conductivity\n\tcalculation with Alamode. Note that the cost increases rapidly\n\twith the size of the cutoff since larger supercells are needed and\n\tmore terms must be computed. Separate values can be specified for\n\tharmonic (cutoff_harm) and cubic (cutoff_cubic) terms, or a single\n\tvalue for both. If \"none\" is specified then no cutoff is applied\n\t(i.e. the cutoff is determined by the size of the cell input).\n- See also: \talamode ala_disp thermal_conductivity ala_shrink ala_processors\nala_disp"
  },
  "option-ala_disp": {
    "prefix": "option-ala_disp",
    "body": "ala_disp",
    "description": "- Format: \tala_disp disp_harm disp_cubic <au>\nUnits \tAngstrom, unless au is specified in which case it will be atomic units\n- Default: \t0.005 / 0.01 for harmonic and cubic force constants, respectively.\n- Use: \tSpecifies the displacements for finite difference calculation of the\n\tharmonic (disp_harm) and cubic (disp_cubic) force constants when\n\tusing Alamode.\n- See also: \talamode ala_cutoff thermal_conductivity ala_shrink ala_processors\nala_processors"
  },
  "option-ala_processors": {
    "prefix": "option-ala_processors",
    "body": "ala_processors",
    "description": "- Format: \tala_processors ncore\nUnits \tNone\n- Default: \tSame number of cores as GULP is running on.\n- Use: \tSpecifies the number of processors that will be used by Alamode.\n\tSince the thermal conductivity calculation can be more expensive\n\tthan the force constant evaluation, this allows more processors\n\tto be used for the Alamode part of the calculation.\n- See also: \talamode thermalconductivity ala_disp ala_cutoff ala_shrink\nala_shrink"
  },
  "option-ala_shrink": {
    "prefix": "option-ala_shrink",
    "body": "ala_shrink",
    "description": "- Format: \tala_shrink ix <iy> <iz>\nUnits \tix, iy and iz are dimensionless integers\n- Default: \t1 1 1\n- Use: \tSpecifies the shrinking factors in reciprocal space. The higher the\n\tshrinking factor the more extensively k space is sampled. One value\n\tmay be given, in which case the shrinking factor is used isotropically\n\tor three anisotropic values can be given. These shrinking factors will\n\tbe used for calls to Alamode.\n- See also: \talamode thermalconductivity ala_disp ala_cutoff ala_processors\nanisotropic_pressure"
  },
  "option-anisotropic_pressure": {
    "prefix": "option-anisotropic_pressure",
    "body": "anisotropic_pressure",
    "description": "- Format: \tanisotropic_pressure P_xx P_yy P_zz P_yz P_xz P_xy (for 3-D)\n\tanisotropic_pressure P_xx P_yy P_xy (for 2-D)\n\tanisotropic_pressure P_xx (for 1-D)\nUnits \tGPa\n- Default: \tNo anisotropic pressure\n- Use: \tThis option allows the user to apply a general constant stress, such\n\tas a uniaxial stress. Because the energy is not defined for anisotropic\n\tpressure, except via a set of integrals between states, then the use\n\tof force minimisation, rather than energy minimisation is required for\n\toptimisation.\n\n\tIf both pressure and anisotropic pressure are specified then\n\tthe two are added together. For anisotropic pressure, this must be\n\tspecified after the structure otherwise the information may not be\n\tcorrectly processed since this depends on the dimensionality.\n\n\tNote that stresses are dependent on the cell orientation and so take\n\tcare when specifying.\n- See also: \tpressure force_minimisation\nashift"
  },
  "option-ashift": {
    "prefix": "option-ashift",
    "body": "ashift",
    "description": "- Format: \tashift <ev/au/kcal/kjmol-1>\n\tatomic_symbol value <1xflag>\nUnits \teV (default), au, kcal or kJmol-1\n- Default: \t0.0\n- Use: \tSpecifies a species specific energy shift (i.e. a one-body potential).\n\tUsually this term is not needed since it is just a constant. However,\n\tit may prove useful during fitting of ab initio energy surfaces.\n\n\te.g.\n\n\tashift\n\tO2 0.34\n\n\tThe above would apply an energy shift to each O2 atom in a structure\n\tof 0.34 eV.\n- See also: \tshift sshift\natomab"
  },
  "option-atomab": {
    "prefix": "option-atomab",
    "body": "atomab",
    "description": "- Format: \tatomab\n\t<Atomic_symbol/atomic_number> A B <2 x flags for fitting>\nUnits \teV*Angs**m and eV*Angs**n\n- Use: \tSpecifies A and B values for each species type to be used in\n\tcombination rules to obtain Lennard-Jones potential parameters\n\twhere specified.\n- See also: \tepsilon lennard\naver"
  },
  "option-aver": {
    "prefix": "option-aver",
    "body": "aver",
    "description": "- Format: \taver sum_velocity_squared sum_energy sum_virial sum_temperature sum_cons\n\tsum_cst no_of_averaging_points\nUnits \tAngstroms and ps as appropriate.\n- Use: \tSpecifies various sum of values required for correct restarting of the\n\taverages during MD.\n- See also: \tmd caver cfaver current_time absolute_coordinates\naxilrod-teller"
  },
  "option-axilrod-teller": {
    "prefix": "option-axilrod-teller",
    "body": "axilrod-teller",
    "description": "- Format: \taxilrod-teller <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3) <rmin(2-3)>\n\trmax(2-3) <flag>\nUnits \tk in eV*Angstroms**9, rmin & rmax in Angstroms\n- Default: \tnone\n- Use: \tAxilrod-Teller three-body potential:\n\n\tE(three) = k (1+3*cos(theta1)*cos(theta2)*cos(theta3))\n\t-------------------------------------------\n\t(r12*r13*r23)**3\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential stillinger-weber bcross urey-bradley\n\tmurrell-mottram bacross hydrogen-bond equatorial uff3 lin3 3coulomb\n\tbagcross\nbacoscross"
  },
  "option-bacoscross": {
    "prefix": "option-bacoscross",
    "body": "bacoscross",
    "description": "- Format: \tbacoscross <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K1 K2 r1 r2 theta0 <rmin12> rmax12 <rmin13> rmax13\n\t<rmin23> rmax23 <5*flags>\nUnits \tK1 and K2 in eV/Angs, r1 and r2 in Angstroms, theta0 in degrees\n- Use: \tBond-angle cosine cross term three body potential\n\n\tE(three) = [K1*(r12 - r1) + K2*(r13 - r2)].(cos(theta)-cos(theta0))\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger urey-bradley\n\tmurrell-mottram bcross hydrogen-bond equatorial lin3 uff3 bacross\n\t3coulomb bagcross\nbacross"
  },
  "option-bacross": {
    "prefix": "option-bacross",
    "body": "bacross",
    "description": "- Format: \tbacross <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol/degree>\n\tatom1 atom2 atom3 K1 K2 r1 r2 theta0 <rmin12> rmax12 <rmin13> rmax13\n\t<rmin23> rmax23 <5*flags>\nUnits \tK1 and K2 in eV/(Angs*rad), r1 and r2 in Angstroms, theta0 in degrees\n- Use: \tBond-angle cross term three body potential\n\n\tE(three) = [K1*(r12 - r1) + K2*(r13 - r2)].(theta-theta0)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger urey-bradley\n\tmurrell-mottram bcross hydrogen-bond equatorial lin3 uff3\n\tbacoscross 3coulomb bagcross\nbagcross"
  },
  "option-bagcross": {
    "prefix": "option-bagcross",
    "body": "bagcross",
    "description": "- Format: \tbagcross <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K r1 r2 theta0 m n p <rmin12> rmax12 <rmin13> rmax13\n\t<rmin23> rmax23 <4*flags>\nUnits \tK in eV/((Angs**(m+n))*(rad**p)), r1 and r2 in Angstroms, theta0 in degrees\n- Use: \tBond-angle general cross term three body potential:\n\n\tE(three) = K*[(r12 - r1)**m]*[(r13 - r2)**n].(theta-theta0)**p\n\n\tThis potential is designed to represent general anharmonic coupling\n\tterms for a force field up to three-body terms.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger urey-bradley\n\tmurrell-mottram bcross hydrogen-bond equatorial lin3 uff3\n\tbacoscross 3coulomb bacross balcross\nbalcross"
  },
  "option-balcross": {
    "prefix": "option-balcross",
    "body": "balcross",
    "description": "- Format: \tbalcross <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K r1 r2 isign n m p <rmin12> rmax12 <rmin13> rmax13\n\t<rmin23> rmax23 <3*flags>\nUnits \tK in eV/(Angs**(m+p))), r1 and r2 in Angstroms\n- Use: \tBond-angle linear cross term three body potential:\n\n\tE(three) = K*[(r12 - r1)**m]*[(r13 - r2)**p].(1 + isign*cos(n*theta))\n\n\tThis potential is designed to represent anharmonic coupling\n\tterms for a force field up to three-body terms for linear angles.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger urey-bradley\n\tmurrell-mottram bcross hydrogen-bond equatorial lin3 uff3\n\tbacoscross 3coulomb bacross bagcross\nbaskes"
  },
  "option-baskes": {
    "prefix": "option-baskes",
    "body": "baskes",
    "description": "- Format: \tbaskes <a4> <n>\n\tatom1 atom2 Ec A alpha r0 Z1 wF d <rmin> rmax <5xflags>\n\tZ2S_1 s_1 Z2S_2 s_2\n\n\tif the potential is specified as \"baskes a4\" then the format is:\n\tatom1 atom2 Ec A alpha r0 Z1 wF d gamma lambda <rmin> rmax <7xflags>\n\tZ2S_1 s_1 Z2S_2 s_2\n\n\tZ2S and s are only input if n > 0\nUnits \tEc in eV; gamma and r0 in Angstroms; A, Z1, Z2S, s, alpha, d, wF and lambda are unitless\n- Default: \tNone, n=0\n- Use: \tThis option specifies the two-body potential between atoms need for the MEAM\n\tmethod. The form is constructed based on the difference between the Rose\n\tequation of state and the form of the embedding function for a reference\n\tstructure (such as fcc, bcc, hcp, etc).\n\n\tThe form of the potential is:\n\n\tE = - (2/Z1)*Ec*{(1+a+d*a**3)*exp(-a) + A*(rho_ref(r)/rho0)*ln((rho_ref(r)/rho0))}\n\n\tunless \"a4\" is specified in which case there is an extra term:\n\n\tE = - (2/Z1)*Ec*{(1+a+d*a**3+gamma*a**4*exp(-lambda*a**2)/r)*exp(-a) +\n\tA*(rho_ref(r)/rho0)*ln((rho_ref(r)/rho0))}\n\n\twhere:\n\n\tZ1 = the number of nearest neighbours in the reference structure (NB no fitting flag)\n\tEc = cohesive energy of the reference structure\n\tr0 = equilibrium distance in the reference structure\n\trho0 = density for equilibrium reference structure (comes from meam_functional)\n\trho_ref(r) = density for reference structure when distance is r.\n\ta = (alpha/r0)*(r-r0)\n\td = unitless factor that modifies shape of equation - usually 0.0\n\twF = unitless factor that weights the i vs j contributions - for pure phases this is\n\t1.0, but for alloys will be 0 < wF < 1. For phase of composition AB3 with atoms\n\tinput in the order A then B, then wF will be 0.25 (the weight for component A).\n\tIf B is input first then it would be 0.75.\n\tgamma = distance factor that modifies shape of equation\n\tlambda = exponent that modifies the shape of the equation\n\n\tThe value of rho_ref(r) is given by the following expression:\n\n\trho_ref(r) = sqrt[ sum(l=0->3) s_l*t_l*rho_l(r)**2 ]\n\n\twhere rho_l = exp(-(b_l/r0)*(r-r0))\n\n\there t_l is the coefficient of the l'th order density square in MEAM and s_l is a\n\tgeometric factor for the reference structure in question that depends on the l'th\n\torder. Note that s_0 is equal to Zd**2 in the notation of Baskes and co-workers.\n\n\tNB: In earlier versions of GULP the b and t coefficients were specified explicitly\n\tfor this potential. However, they are now obtained directly from the MEAM density\n\tin order to avoid duplication. Similarly the rho0 used to be specified, but this is\n\tnow obtained from the MEAM functional.\n\n\tIf n = 0 (default) then the 1NN form of MEAM is used.\n\tIf n > 0, then the 2NN form of MEAM is selected instead. Here the pair potential\n\tis generated according to:\n\n\tphi(R) = psi(R) + sum(i=1,n) (-Z2S/Z1)**i.psi(s**i.R)\n\n\twhere:\n\n\tZ2S = the number of second neighbours in the reference structure x screening function, S\n\ts = is the scale factor for the second neighbour distance relative to the first one\n\tphi = effective pair potential\n\tpsi = (2/Z1)*(Ec(R)-F(rho(R))\n\n- See also: \tmeam_functional meam_density\nbbar"
  },
  "option-bbar": {
    "prefix": "option-bbar",
    "body": "bbar",
    "description": "- Format: \tbbar at.no. <bbar>\nUnits \tAngstrom\n- Use: \tUsed within element option input block, overwrites the default neutron\n\tscattering length for a specified element. (at. no. or symbol may be used)\n- See also: \tcoreinfo element siginc\nbcoscross"
  },
  "option-bcoscross": {
    "prefix": "option-bcoscross",
    "body": "bcoscross",
    "description": "- Format: \tbcoscross <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K b m n r1 r2 <rmin12> rmax12 <rmin13> rmax13\n\t<rmin23> rmax23 <4*flags>\nUnits \tK in eV/Angs**2, r1 and r2 in Angstroms, b, m and n are unitless.\n- Use: \tBond-bond cross term three body potential with cosine angle dependance:\n\n\tE(three) = K * (1 + b*cos(n.theta)**m) * (r12 - r1) * (r13 - r2)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger urey-bradley\n\tmurrell-mottram bacross bcross hydrogen-bond equatorial lin3 uff3\n\t3coulomb bagcross\nbcross"
  },
  "option-bcross": {
    "prefix": "option-bcross",
    "body": "bcross",
    "description": "- Format: \tbcross <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K r1 r2 <rmin12> rmax12 <rmin13> rmax13 <rmin23>\n\trmax23 <3*flags>\nUnits \tK in eV/Angs**2, r1 and r2 in Angstroms\n- Use: \tBond-bond cross term three body potential:\n\n\tE(three) = K * (r12 - r1) * (r13 - r2)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger urey-bradley\n\tmurrell-mottram bacross hydrogen-bond equatorial lin3 uff3 3coulomb\n\tbagcross\nbecke_johnson_c6"
  },
  "option-becke_johnson_c6": {
    "prefix": "option-becke_johnson_c6",
    "body": "becke_johnson_c6",
    "description": "- Format: \tbecke_johnson_c6 <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 C6 r0 <rmin> rmax <2*flags>\nUnits \tC6 in eV*Angs**6, r0 in Angs\n- Default: \tNone\n- Use: \tSpecifies potential parameters for the Becke-Johnson form of damped C6 term.\n\tThe energy is of the form:\n\n\tE = - C6/(r**6 + r0**6)\n\n- See also: \tdamped_dispersion grimme_c6\nbest"
  },
  "option-best": {
    "prefix": "option-best",
    "body": "best",
    "description": "- Format: \tbest n <every_m> <only>\n- Default: \tBest 2 candidates at the end of global search may be optimised.\n- Use: \tPart of ga options section. If used then the best 'n' candidates\n\tfound (after every m iterations) may be optimised at the end.\n\tIf 'only' specified then a maximum of n candidates may be optimised\n\tie the best n from iterations m, 2m, 3m, ...\n- See also: \tgenetic predict\nblocksize"
  },
  "option-blocksize": {
    "prefix": "option-blocksize",
    "body": "blocksize",
    "description": "- Format: \tblocksize <atoms/sas> nblocksize\n- Default: \tatoms = 1, sas = 12\nUnits \tnone\n- Use: \tThis parameter is an integer that decides how the second\n\tderivatives are divided over the processes when running\n\tin parallel. The number is used to control the efficiency\n\tof the parallel work in Scalapack / Blacs, but also in\n\tGULP itself. The real number used for atoms is actually\n\t3*nblocksize in order to divide the coordinates of the atoms\n\tso that the x, y, z components of an atom are all on the same\n\tnode. If nblocksize is too large then load balance will\n\tbe an issue, while if it is too small then Scalapack will\n\tlose efficiency.\n\tSpecifying atoms or sas allows control over the individual\n\tblocksizes for matrices relating to atoms, or the solvent\n\taccessible surface, respectively.\n\tNB: The blocksize must be a factor of the number of atoms,\n\tand the number of shells, if appropriate, in each configuration.\n\tTherefore 1 is a safe value that will always work, but other\n\tvalues may be possible depending on the system.\n- See also: \tmatrix_format maths\nboattractive"
  },
  "option-boattractive": {
    "prefix": "option-boattractive",
    "body": "boattractive",
    "description": "- Format: \tboattractive <zrl>\n\tatom1 <atom2> alpha m n lambda <3*flags>\n\n\tor\n\n\tboattractive theta <zrl>\n\tatom1 <atom2> alpha m n lambda c d h <6*flags>\n\n\tor\n\n\tboattractive kumagai <zrl>\n\tatom1 <atom2> alpha m n lambda c1 c2 c3 c4 c5 h <9*flags>\n\n\tor\n\n\tboattractive mmp <zrl>\n\tatom1 <atom2> alpha m n lambda c0 c1 c2 c3 c4 <8*flags>\n\n\tNB The value of m cannot be fitted and therefore there is no flag\nUnits \tlambda in 1/Angstroms\n\tAll other quantities are unitless.\n- Default: \tIf atom2 is not given then it will be set to be atom1\n- Use: \tSets the parameters for the bond-order in the attractive term as\n\tgiven by\n\n\tBOa = (1 + (alpha*zeta)**n)**(-1/2n)\n\n\tFor case without \"theta\" sub-option;\n\n\tzeta = Sum(rik) [f(rik).exp(lambda**m.(rij-rik)**m)]\n\n\telse;\n\n\tzeta = Sum(rik) [f(rik).g(theta).exp(lambda**m.(rij-rik)**m)]\n\n\tf(rik) = cosine taper function\n\n\tg(theta) = 1 + (c/d)**2 - c**2/[d**2 + (h - cos(theta))**2]\n\n\tNote that the cut-offs are derived from the values for the corresponding\n\tbotwobody potential.\n\n\tIf the \"zrl\" sub-option is specified then the alternative form\n\tof Billeter et al (Phys. Rev. B, 73, 155329 (2006)) is used in which\n\tthe exponential part of zeta becomes:\n\n\texp((lambda_ij*rij - lambda_ik*rik)**m)\n\n\tBecause lambda is now specific to each pair of atoms, it is recommended\n\tthat the zrl form is specified for all bond-order potentials or none,\n\trather than mixing forms.\n\n\tIf the \"kumagai\" sub-option is specified then the theta term becomes:\n\n\tg(theta) = c1 + g_o(theta)*g_a(theta)\n\n\tg_o(theta) = c2*(h - cos(theta))**2/(c3 + (h - cos(theta))**2)\n\n\tg_a(theta) = 1 + c4*exp(-c5*(h-cos(theta))**2)\n\n\tIf the \"mmp\" sub-option is specified then the theta term becomes:\n\n\tg(theta) = (sum(n=0->4) c_n*cos(n*theta))**2\n\n\tThis is the form of the angular potential required for the MMP potential\n\tas given in Monteverde et al, J. Phys. Condens. Matter, 25, 425801 (2013)\n\n\tNB: Because of the introduction of pair-wise specific terms, input files\n\tfrom earlier versions will needed to be changed for mixed element systems.\n\n- See also: \tbotwobody borepulsive bocharge boselfenergy bocoordination\nbocharge"
  },
  "option-bocharge": {
    "prefix": "option-bocharge",
    "body": "bocharge",
    "description": "- Format: \tbocharge <staper>\n\tatom1 atom2 deltaQ Rmin Rmax\nUnits \tau\n- Default: \tNone for potential / use cosine taper\n- Use: \tSpecifies the parameters for the taper function used in determining\n\tbond order charges as a function of environment. The charge on an\n\tion is determined as:\n\n\tAtom 1: Q = sum [ - deltaQ*H(r) ]\n\tAtom 2: Q = sum [ + deltaQ*H(r) ]\n\n\tHere the sum is over all atoms of the approriate type within the\n\tcutoff radius, Rmax. H(r) is taper function that acts between Rmin\n\tand Rmax. In the original paper of Jiang and Brown a cosine taper\n\tis used and this is the default. However, the sub-option allows the\n\tsine taper of Watanabe et al (Jpn. J. Appl. Phys. 38, L367 (1999))\n\tto be used which has better behaviour for the second derivatives at\n\tthe cutoff.\n\n- See also: \tbotwobody borepulsive boattractive boselfenergy sw2jb sw3jb\n\tbocoordination\nbocnswitch"
  },
  "option-bocnswitch": {
    "prefix": "option-bocnswitch",
    "body": "bocnswitch",
    "description": "- Format: \tbocnswitch zb zt\nUnits \tNone\n- Default: \tzb = 0.20039, zt = 0.49751\n- Use: \tSpecifies the 2 universal values that are used in the coordination\n\tswitching function in the Tersoff ZRL model. See paper below for\n\tmore information, and this is the source of the default values:\n\n\tBilleter et al, Phys. Rev. B, 73, 155329 (2006).\n\n\tNB: zt+zb must be less than 1 and zt-zb must be greater than 0\n\tNNB: The original switching function in the above paper leads to\n\ta highly discontinuous energy and so a modified form is implemented\n\there in 2 ways (the int(z) term is left out and sin is replaced by cos)\n- See also: \tbotwobody borepulsive boattractive bocharge sw2jb sw3jb\n\tboselfenergy bocoordination bocntolerance\nbocntolerance"
  },
  "option-bocntolerance": {
    "prefix": "option-bocntolerance",
    "body": "bocntolerance",
    "description": "- Format: \tbocntolerance tol\nUnits \tNone\n- Default: \ttol = 0.000001\n- Use: \tSpecifies the tolerance on the coordination number from an\n\tinteger to trigger calculating derivatives.\n- See also: \tbotwobody borepulsive boattractive bocharge sw2jb sw3jb\n\tboselfenergy bocoordination bocnswitch\nbocoordination"
  },
  "option-bocoordination": {
    "prefix": "option-bocoordination",
    "body": "bocoordination",
    "description": "- Format: \tbocoordination\n\tatom1 c1 c2 z0 E0 <4*flags>\nUnits \tc1, c2 and E0 in eV\n- Default: \tc1, c2 = 0, E0 = 0, z0 = 0\n- Use: \tSpecifies the Tersoff augmentation term based on coordination number, as\n\twell as the self energy. These were proposed in the Tersoff ZRL form of\n\tBilleter et al, Phys. Rev. B, 73, 155329 (2006).\n\n\tE = c1*delta_z + c2*(delta_z**2) + E0\n\n- See also: \tbotwobody borepulsive boattractive bocharge sw2jb sw3jb\n\tboselfenergy bocnswitch bocntolerance\nbondtype"
  },
  "option-bondtype": {
    "prefix": "option-bondtype",
    "body": "bondtype",
    "description": "- Format: \tbondtype species1 species2 type_of_bond <regular/cyclic/exocyclic>\n- Default: \ttype_of_bond = single\n- Use: \tSets the default type of bond between two species.\n\tValid bond types are: single, double, triple, quadruple, resonant,\n\tamide, custom, half, quarter, and third. For example, a default\n\tdouble bond between two carbons of type C2 can be specified as:\n\n\tbondtype C2 C2 double\n\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n- See also: \tmolecule molq molmec bond connect noautobond nobond\nborepulsive"
  },
  "option-borepulsive": {
    "prefix": "option-borepulsive",
    "body": "borepulsive",
    "description": "- Format: \tborepulsive <zrl>\n\tatom1 <atom2> alpha m n lambda <3*flags>\n\n\tor\n\n\tborepulsive theta <zrl>\n\tatom1 <atom2> alpha m n lambda c d h <6*flags>\n\n\tor\n\n\tborepulsive kumagai <zrl>\n\tatom1 <atom2> alpha m n lambda c1 c2 c3 c4 c5 h <9*flags>\n\n\tor\n\n\tborepulsive mmp <zrl>\n\tatom1 <atom2> alpha m n lambda c0 c1 c2 c3 c4 <8*flags>\n\n\tNB The value of m cannot be fitted and therefore there is no flag\nUnits \tlambda in 1/Angstroms\n\tAll other quantities are unitless.\n- Default: \tIf atom2 is not given then it will be set to be atom1\n- Use: \tSets the parameters for the bond-order in the repulsive term as\n\tgiven by\n\n\tBOr = (1 + (alpha*zeta)**n)**(-1/2n)\n\n\tFor case without \"theta\" sub-option;\n\n\tzeta = Sum(rik) [f(rik).exp(lambda**m.(rij-rik)**m)]\n\n\telse;\n\n\tzeta = Sum(rik) [f(rik).g(theta).exp(lambda**m.(rij-rik)**m)]\n\n\tf(rik) = cosine taper function\n\n\tg(theta) = 1 + (c/d)**2 - c**2/[d**2 + (h - cos(theta))**2]\n\n\tNote that the cut-offs are derived from the values for the corresponding\n\tbotwobody potential.\n\n\tIf the \"zrl\" sub-option is specified then the alternative form\n\tof Billeter et al (Phys. Rev. B, 73, 155329 (2006)) is used in which\n\tthe exponential part of zeta becomes:\n\n\texp((lambda_ij*rij - lambda_ik*rik)**m)\n\n\tBecause lambda is now specific to each pair of atoms, it is recommended\n\tthat the zrl form is specified for all bond-order potentials or none,\n\trather than mixing forms.\n\n\tIf the \"kumagai\" sub-option is specified then the theta term becomes:\n\n\tg(theta) = c1 + g_o(theta)*g_a(theta)\n\n\tg_o(theta) = c2*(h - cos(theta))**2/(c3 + (h - cos(theta))**2)\n\n\tg_a(theta) = 1 + c4*exp(-c5*(h-cos(theta))**2)\n\n\tIf the \"mmp\" sub-option is specified then the theta term becomes:\n\n\tg(theta) = (sum(n=0->4) c_n*cos(n*theta))**2\n\n\tThis is the form of the angular potential required for the MMP potential\n\tas given in Monteverde et al, J. Phys. Condens. Matter, 25, 425801 (2013)\n\n\tNB: Because of the introduction of pair-wise specific terms, input files\n\tfrom earlier versions will needed to be changed for mixed element systems.\n\n- See also: \tbotwobody boattractive bocharge boselfenergy bocoordination\nbornq"
  },
  "option-bornq": {
    "prefix": "option-bornq",
    "body": "bornq",
    "description": "- Format: \tbornq n\n\ti <xx/yy/zz/xy/xz/yz> Zeff <weight>\nUnits \tatomic units\n- Default: \tno Born effective charges to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tBorn effective charges for fitting. Note that i is the\n\tatom number in the unit cell, not the asymmetric unit,\n\tand the two letter code indicates the tensorial component\n\tto be considered. Note: The Born effective charge tensor is\n\tantisymmetric (i.e. Zxy = - Zyx )\n\n\tExample:\n\n\tbornq 1\n\t1 xx 1.95\n\n\tHere n (after bornq) represents the number of lines of input\n\tto follow.\n\n\tNote: Born effective charges cannot currently be calculated\n\twith electronegativity equalisation.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tmonopoleq qreaxff young poisson\nboselfenergy"
  },
  "option-boselfenergy": {
    "prefix": "option-boselfenergy",
    "body": "boselfenergy",
    "description": "- Format: \tboselfenergy\n\tatom1 Kq <rho> q0\nUnits \tKq in eV, rho in a.u., q0 in a.u.\n- Default: \tRho = 1.0\n- Use: \tSpecifies the self energy for bond order charges, as introduced by\n\tJiang and Brown:\n\n\tE = Kq*exp(-rho/(q - q0)) if q > q0 for q0 > 0\n\n\tor\n\n\tE = Kq*exp(rho/(q - q0)) if q > q0 for q0 < 0\n\n\telse E = 0\n\n- See also: \tbotwobody borepulsive boattractive bocharge sw2jb sw3jb\n\tbocoordination\nboth"
  },
  "option-both": {
    "prefix": "option-both",
    "body": "both",
    "description": "- Default: \tboth\n- Use: \tAll subsequent potentials to be treated as both intra-\n\tand intermolecular when molecule option is active.\n- See also: \tmolecule molq molmec inter intra\nbotwobody"
  },
  "option-botwobody": {
    "prefix": "option-botwobody",
    "body": "botwobody",
    "description": "- Format: \tbotwobody <kcal/kjmol> <cosine/mdf/murty>\n\tatom1 atom2 A B za zb rtaper rmax <4*flags>\n\n\tor\n\n\tbotwobody combine <cosine/mdf/murty>\n\tatom1 atom2 chiR chiA <2*flags>\n\nUnits \tA and B in eV, za and zb in 1/Angstroms, rtaper and rmax in Angs\n- Default: \tnone, taper = mdf\n- Use: \tSpecifies the parameters for the twobody form of a bond-order\n\tpotential of the Tersoff form:\n\n\tE = f(r)[A.exp(-za.r).(BOr) - B.exp(-zb.r).(BOa)]\n\n\twhere f(r) is a taper function that smooths the decay from rtaper\n\tto rmax, BOr and BOa are the bond orders for the repulsive and\n\tattractive terms, respectively. These terms are set by separate\n\toptions. If the combine sub-option is specified then the parameters\n\tare generated using Tersoff's combination rules from the values for\n\tthe corresponding element's self-self interaction. The chi values\n\tthen scale the repulsive and attractive terms.\n\tThe sub-options cosine, mdf and murty are used to select the form of\n\ttaper that is used. Early versions of GULP used the cosine taper, but\n\tthis leads to numerical instabilities in the second derivatives for some\n\tcases. For backwards compatibility it may be necessary to use cosine\n\tto reproduce results. The murty taper form was used by Kumagai et al\n\tin their form of the Tersoff potential along with the corresponding\n\tmodified angular term.\n- See also: \tborepulsive boattractive bocharge boselfenergy bocoordination\nbox"
  },
  "option-box": {
    "prefix": "option-box",
    "body": "box",
    "description": "- Format: \tbox <dispersion/density> <size/number> value\nUnits \tsize in cm-1\n- Default: \tnumber for dispersion = 25\n\tnumber for density = 64\n- Use: \tAllows the user to change the box size or number of boxes used for\n\toutputting the phonon density of states or/and phonon dispersion\n\tcurves.\n\tFor example, to change the resolution of the phonon density of\n\tstates to 10 cm^-1:\n\tbox density size 10\n- See also: \tphonon dispersion shrink broaden_dos\nbrenner"
  },
  "option-brenner": {
    "prefix": "option-brenner",
    "body": "brenner",
    "description": "- Format: \tbrenner\n- Use: \tSpecifies that the REBO forcefield of Brenner et al (2002 variant) be\n\tincluded in the energy calculation. Note that this is only available\n\tfor the elements C, H, and O. The parameters for O are from the work\n\tof Ni, Lee and Sinnott (J. Phys.: Condens. Matter, 16, 7261 (2004), but\n\twith some changes from the authors that lead to improvements. Parameters\n\tare also available for F, but should not be used if oxygen is present.\n\tThe option REBO is a synonym for this option.\n\tIf the model number is given as 1 (i.e. \"brenner 1\") then the original\n\tBrenner model will be used. This option has parameters for C, H and Si\n\tusing the extended parameter set given in Dyson and Smith, Surf. Sci.,\n\t355, 140 (1996)\n- See also: \tspatial\nbsm"
  },
  "option-bsm": {
    "prefix": "option-bsm",
    "body": "bsm",
    "description": "- Format: \tbsm <exponential> <single_exponential> <kcal/kjmol>\n\tif harmonic form:\n\n\tatom_symbol/atomic_number <core/shel> K r0 <2 x flags>\n\n\tif exponential form:\n\n\tatom_symbol/atomic_number <core/shel> K rho r0 <3 x flags>\n\n\tif single_exponential form:\n\n\tatom_symbol/atomic_number <core/shel> K rho r0 <3 x flags>\n\nUnits \tK in eVAngs**-2, r0 in Angstroms\n\tK in eV, rho in Angstroms**-1\n- Default:s \tType = harmonic\n- Use: \tSpecifies the breathing shell force constant, K, and\n\tequilibrium radius, r0, for the spherical breathing\n\tshell model.\n\n\tE(bs) = 1/2 * K * (r - r0)**2\n\n\tor the constants of the exponential restoring term:\n\n\tE(bs) = K * [exp(rho*(r-r0)) + exp(-rho*(r-r0))]\n\n\tor the constants of the single_exponential restoring term:\n\n\tE(bs) = K * exp(rho*(r-r0))\n\n- See also: \tbreathe nobreathe simultaneous\nbspline"
  },
  "option-bspline": {
    "prefix": "option-bspline",
    "body": "bspline",
    "description": "- Format: \tbspline norder\nUnits \tnone\n- Default: \tnorder = 8\n- Use: \tSpecifies the B-spline interpolation order in SPME.\n- See also: \trspeed veck accuracy ewaldrealradius spme qgrid\nbuck4"
  },
  "option-buck4": {
    "prefix": "option-buck4",
    "body": "buck4",
    "description": "- Format: \tbuck4 <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 A rho C <rmin> cut1 rminimum cut2 rmax <4*flags>\nUnits \tA in eV, rho in Angs, C in eV*Angs**6, distances in Angstroms\n- Default: \tnone\n- Use: \tFour range Buckingham potential - optimisation flags for fitting (0/1)\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\tThe form of the potential is:\n\tfrom rmin to cut1 : E=Aexp(-r/rho)\n\tfrom cut1 to rminimum: E=a0+a1*r+a2*r**2+a3*r**3+a4*r**4+a5*r**5\n\tfrom rminimum to cut2: E=b0+b1*r+b2*r**2+b3*r**3\n\tfrom cut2 to rmax : E=-C/r**6\n\tThe potentials are subjected to the constraint that the functions and\n\ttheir first and second derivatives must be continuous at the boundary\n\tpoints, and also that the function must have a stationary point at\n\trminimum (hopefully a minimum!).\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\nbuckingham"
  },
  "option-buckingham": {
    "prefix": "option-buckingham",
    "body": "buckingham",
    "description": "- Format: \tbuckingham <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tatom1 atom2 A rho C <rmin> rmax <3*flags>\nUnits \tA in eV, rho in Angs, C in eV*Angs**6\n\tIf kcal is given : A in kcal, rho in Angs, C in kcal*Angs**6\n\tIf kjmol is given: A in kJmol-1, rho in Angs, C in kJmol*Angs**6\n- Default: \tnone\n- Use: \tBuckingham potential - optimisation flags for fitting (0/1).\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = A.exp(-r/rho) - C/r**6\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tc6 mm3buck slater\nbuffered_lj"
  },
  "option-buffered_lj": {
    "prefix": "option-buffered_lj",
    "body": "buffered_lj",
    "description": "- Format: \tbuffered_lj <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 epsilon r0 delta gamma <rmin> rmax <4*flags>\nUnits \tepsilon in eV, r0, rmin and rmax in Angs\n- Default: \tnone\n- Use: \tThis option specifies the use of a buffer 14-7 Lennard-Jones potential.\n\tThe form is that used by AMOEBA for interactions:\n\n\tE = epsilon*[((1+delta)/(rho+delta))**7]*[(1+gamma)/(rho**7+gamma)-2]\n\n\twhere rho = r/r0\n\n- See also: \tepsilon atomab c6 lennard\nbulk_modulus"
  },
  "option-bulk_modulus": {
    "prefix": "option-bulk_modulus",
    "body": "bulk_modulus",
    "description": "- Format: \tbulk_modulus <weight>\nUnits \tGPa\n- Default: \tbulk modulus not to be fitted\n- Use: \tSubsection of observables, used for specifying the experimental\n\tbulk modulus for fitting. By default, the Reuss definition of\n\tthe bulk modulus is used. However, the Voigt and Hill definitions\n\tcan be used by specifying the appropriate keyword.\n- See also: \tobservables elastic sdlc hfdlc shear_modulus weight bornq\n\thill voigt young poisson\ncartesian"
  },
  "option-cartesian": {
    "prefix": "option-cartesian",
    "body": "cartesian",
    "description": "- Format: \tcartesian <region <n> <qm/mm> <rigid <xyz>>> <nonrigid> <angs/au>\n\tat no. x y z <charge> <occupancy> <radius> <3 x optimisation flags> <%/T>\n\tor\n\tat no. x y z <charge> <occupancy> <radius> <3 x optimisation flags> <%/T>\n\tor\n\tat.sym. <species_type> x y z <charge> <occupancy> <radius> <3 x flags> <%/T>\nUnits \tAngstrom (default) or au for coordinates and electrons for charge,\n\tradius in Angstroms\n- Use: \tCartesian coordinates and charges for all species in the unit cell.\n\tEither the atomic number or the symbol may be supplied, followed\n\tby the species type. If the species type is omitted then it is\n\tassumed to be a core. Individual charges may be supplied for each\n\tion or the charges for each type of species given using the\n\tspecies option. If the charges are given, then optionally site\n\toccupancies may also be specified. Optimisation flags are only\n\tneeded if cellonly, conv, bulk, conp or shell are not specified.\n\n\tIf the \"region\" sub-option is specified, then this tells the program\n\tthe region number for the following atoms. In a surface calculation\n\tregion 2 is held fixed. If the \"rigid\" sub-option is also specified\n\tafter \"region\" then the region is created as a rigid body so that\n\tall atoms are constrained with respect to each other. By specifying\n\ta string after this containing x, y and/or z, the region may be\n\tallowed to move in particular directions. For example, in an interface\n\tcalculation, a region could be specified that is allowed to only relax\n\tin the z direction by using:\n\n\tcart region 3 rigid z\n\n\tNB: The \"region\" sub-option must come before any of the other related\n\tsub-options.\n\n\tIf a \"T\" is specified then the atom is marked for the translate option\n\tIf a \"%\" is specified then the atom is part of a growth slice if it\n\tis in region 1 of a surface calculation.\n\n- See also: \tfractional ditto spacegroup frame\ncatomic_stress"
  },
  "option-catomic_stress": {
    "prefix": "option-catomic_stress",
    "body": "catomic_stress",
    "description": "- Format: \tcatomic_stress\n\t1 xx yy zz yz xz xy\n\t2 xx yy zz yz xz xy\n\tetc\nUnits \teV\n- Default: \tNone\n- Use: \tGives the current average of the atomic stresses needed from MD\n\tUsed for MD restart or information.\n- See also: \tatomic_stress\ncaver"
  },
  "option-caver": {
    "prefix": "option-caver",
    "body": "caver",
    "description": "- Format: \tcaver sum_a sum_b sum_c\n\tsum_alpha sum_beta sum_gamma sum_vol\nUnits \tAngstroms for distances / degrees for angles\n- Use: \tThe cumulative sum of all cell parameters and the volume is\n\tspecified so that the averages can be correctly determined\n\ton restarting.\n- See also: \tmd aver cfaver current_time absolute_coordinates\ncell"
  },
  "option-cell": {
    "prefix": "option-cell",
    "body": "cell",
    "description": "- Format: \tcell <angs/au>\n\ta b c alpha beta gamma <6 x optimisation flags>\nUnits \tAngstrom (default) or au for a, b, c and degrees for angles\n- Use: \tCrystallographic unit cell. Either \"vectors\" or \"cell\"\n\tmust be given. For optimisations or fitting,\n\tflags must be set unless cellonly, conp or conv are specified.\n- See also: \tvectors scan_cell\ncellstrain"
  },
  "option-cellstrain": {
    "prefix": "option-cellstrain",
    "body": "cellstrain",
    "description": "- Format: \tcellstrain strain_1 <strain_2> ... <strain_6>\nUnits \tNone\n- Default: \t0.0\n- Use: \tSpecifies the initial strains to be applied to the unit cell.\n\tThe number of expected input values depends on the dimensionality of\n\tthe system:\n\t3-D => 6 strains (1=xx,2=yy,3=zz,4=yz,5=xz,6=xy)\n\t2-D => 3 strains (1=xx,2=yy,3=xy)\n\t1-D => 1 strain (1=xx)\n\tNB: These values are only used if strain is specified as a keyword.\n- See also: \tstrain cell vectors ocell scan_cell\ncentre"
  },
  "option-centre": {
    "prefix": "option-centre",
    "body": "centre",
    "description": "- Format: \tcentre <atomic_symbol> <atom_number> <mol no.> <cart/frac> <x y z>\n- Use: \tDefines the location of the defect centre for a defect calculation.\n\tThe location can be specified in one of 4 ways;\n\t(1) Atomic symbol - places the defect centre at the atom site as\n\tspecified at the start of the defect calculation.\n\te.g. centre Mg1 shel\n\t(2) Atom number - places the defect centre at the site of the atom\n\tgiven by the number in the asymmetric unit.\n\te.g. centre 3\n\t(3) Cartesian coordinates - explicit specification of centre\n\te.g. centre cartesian 0.2 1.3 0.53\n\t(4) Fractional coordinates - explicit specification of centre\n\tbased on the fractional coordinates. If \"cart\" or \"frac\"\n\tis not specified, this is the default.\n\te.g. centre 0.25 0.25 0.25\n\t(5) Molecule number - places the defect centre at the centre of\n\tthe molecule whose number has been given.\n\te.g. centre mol 2\n- See also: \tdefect size region_1 regi_before\n\timpurity vacancy impurity interstitial frequency bulk_noopt\ncfaver"
  },
  "option-cfaver": {
    "prefix": "option-cfaver",
    "body": "cfaver",
    "description": "- Format: \tcfaver sum_lambdaR sum_lambdaV\nUnits \teV/Angstrom\n- Use: \tSpecifies the sum of the values for the constraint force during an MD\n\trun. Used to restart average values correctly. LambdaR is the distance\n\tconstraint force in the velocity Verlet algorithm, while LambdaV is the\n\tvelocity constraint force.\n- See also: \taver caver md\ncfm_fermi"
  },
  "option-cfm_fermi": {
    "prefix": "option-cfm_fermi",
    "body": "cfm_fermi",
    "description": "- Format: \tcfm_fermi <kcal/kjmol>\n\tatom1 atom2 k zeta r0 R w rmax <5*flags>\nUnits \tk in eV, r0, w and R in Ang, zeta in Ang**-1\n- Default: \tnone\n- Use: \tSpecifies a Fermi-Dirac like inter potential for the central force model\n\tas described by Bresme (J. Chem. Phys. 115, 7564 (2001)).\n\n\tE = [k/(1+exp(zeta*(r - r0)))]*t(r)\n\n\twhere\n\n\tt(r) = 0.5*(1 + tanh((r-R)/w))\n\n- See also: \tcfm_harmonic cfm_power cfm_gaussian\ncfm_gaussian"
  },
  "option-cfm_gaussian": {
    "prefix": "option-cfm_gaussian",
    "body": "cfm_gaussian",
    "description": "- Format: \tcfm_gaussian <kcal/kjmol>\n\tatom1 atom2 k zeta r0 R w rmax <5*flags>\nUnits \tk in eV, r0, w and R in Ang, zeta in Ang**-2\n- Default: \tnone\n- Use: \tSpecifies a Gaussian inter potential for the central force model\n\n\tE = [k*exp(-zeta*(r - r0)**2)]*t(r)\n\n\twhere\n\n\tt(r) = 0.5*(1 + tanh((r-R)/w))\n\n\tNB: If w < 0 then t(r) = 1\n- See also: \tcfm_harmonic cfm_power cfm_fermi\ncfm_harmonic"
  },
  "option-cfm_harmonic": {
    "prefix": "option-cfm_harmonic",
    "body": "cfm_harmonic",
    "description": "- Format: \tcfm_harmonic <kcal/kjmol>\n\tatom1 atom2 k r0 R w rmax <4*flags>\nUnits \tk in eV/Ang**2, r0, w and R in Ang\n- Default: \tnone\n- Use: \tSpecifies a harmonic intra potential for the central force model\n\tas described by Bresme (J. Chem. Phys. 115, 7564 (2001)).\n\n\tE = [0.5*k*(r - r0)**2]*[1 - t(r)]\n\n\twhere\n\n\tt(r) = 0.5*(1 + tanh((r-R)/w))\n\n\tNB: If w < 0 then t(r) = 1\n- See also: \tcfm_power cfm_gaussian cfm_fermi\ncfm_power"
  },
  "option-cfm_power": {
    "prefix": "option-cfm_power",
    "body": "cfm_power",
    "description": "- Format: \tcfm_power <kcal/kjmol>\n\tatom1 atom2 A power R w rmax <4*flags>\nUnits \tk in eV*Ang**power, w and R in Ang, power is unitless\n- Default: \tnone\n- Use: \tSpecifies a power-law inter potential for the central force model\n\tas described by Bresme (J. Chem. Phys. 115, 7564 (2001)).\n\n\tE = [A/r**power]*t(r)\n\n\twhere\n\n\tt(r) = 0.5*(1 + tanh((r-R)/w))\n\n\tNB: If w < 0 then t(r) = 1\n- See also: \tcfm_harmonic cfm_gaussian cfm_fermi\ncharge"
  },
  "option-charge": {
    "prefix": "option-charge",
    "body": "charge",
    "description": "- Format: \tcharge <number of charges to be varied>\n\tlist of labels whose charges are to be varied\nUnits \tnone\n- Default: \tcharges fixed\n- Use: \tAllows charges to be varied during fitting. Charge neutrality of\n\tthe lattice is automatically maintained, or no change in the\n\ttotal charge in the case of charged molecular systems.\n\tThis directive must be part of the variables section.\n\tNB: DO NOT specify charges on the coordinate line for the atoms\n\tthat you wish to be influenced by this option since they will be\n\theld fixed as they are NOT overwritten by the species option.\n- See also: \tfit observables monopoleq\nchemshell_mode"
  },
  "option-chemshell_mode": {
    "prefix": "option-chemshell_mode",
    "body": "chemshell_mode",
    "description": "- Format: \tchemshell_mode <init/calc>\n- Default: \tNo chemshell output\n- Use: \tSets the ChemShell output mode to be init or calc.\n\tNB: Only is used if GULP has been compiled to work with\n\trecent versions of ChemShell.\n- See also:\ncmm"
  },
  "option-cmm": {
    "prefix": "option-cmm",
    "body": "cmm",
    "description": "- Format: \tcmm <monopole/dipole/quadrupole/octopole> <cell_size>\n- Use: \tThe cell multipole method (cmm) is a technique for speeding\n\tup calculations on large systems by approximating all\n\tlong range interactions by multipole expansions for\n\tall species within a given box. Because of the general\n\tnature of GULP a one level strategy is currently used\n\twith larger boxes than normal. The idea is that the\n\tshort range cutoff is used to decide the box length\n\tso that all potentials only act between neighbouring\n\tboxes (given that not all potentials are readily\n\texpanded as a series in inverse distance). All other\n\tboxes act through the multipole expansion. At the\n\tmoment this method is only available for clusters, as\n\tdifferent techniques are more appropriate for periodic\n\tsystems.\n\tAfter the option cmm the highest term included in the\n\texpansion can be given. Currently the octopole moment\n\tis the highest allowed and the quadrupole moment is\n\tthe default. In cases where there are no short range\n\tpotentials the cell size may be specified by the user.\n\tNote that because of the nature of the cell multipole\n\tmethod, second derivatives are not available with this\n\ttechnique. Correspondingly the minimiser will therefore\n\tdefault to BFGS starting from a unit Hessian.\n\n\tNOTE: cmm cannot be used in conjunction with EEM\n\tor QEq at the moment.\nconfigurations"
  },
  "option-configurations": {
    "prefix": "option-configurations",
    "body": "configurations",
    "description": "- Format: \tconfigurations n <max_configs> <stepsize>\n- Default: \t10 <10> <0 or 2>\n- Use: \tPart of ga options section. Specifies the number of configurations\n\tto be used in the genetic algorithm procedure. Number of\n\tconfigurations must be even. If maximum number of configurations\n\tis greater than n then population will expand by stepsize (default\n\t2) every iteration until <n=max> after which <stepsize> new random\n\tconfigurations will replace current <stepsize> worst configurations.\n\t<stepsize> also specifies how many of the best configurations\n\tsurvive into the next iteration without changing!\n- See also: \tgenetic predict\nconnect"
  },
  "option-connect": {
    "prefix": "option-connect",
    "body": "connect",
    "description": "- Format: \tconnect atom1 atom2 <type_of_bond> <imageX> <imageY> <imageZ>\n- Default: \tIf imageX, imageY, imageZ are not specified then take the nearest\n\timage.\n- Use: \tForces a bond to be formed between atom1 and atom2 where atom1 and\n\tatom2 are the numbers of atoms in the full unit cell. Requires one\n\tof the molecule keywords to be included to have any affect. The\n\tparameters imageX, imageY and imageZ specify which translational\n\timage of atom 2 should be used. Valid values are usually -1, 0, 1,\n\twhere 0 means the image in the central cell, -1 means the image in\n\tthe negative direction and +1 in the positive one.\n\n\te.g.\n\tconnect 1 2 1 0 -1\n\n\tOptionally, the type of bond can be specified and this information\n\tcan be used in applying the correct force field terms where applicable.\n\tValid bond types are: single, double, triple, quadruple, resonant,\n\tamide, custom, half, quarter, third, cyclic, and exocyclic. For example,\n\tan exocyclic double bond can be specified as:\n\n\tconnect 1 2 double exocyclic 1 0 -1\n\n\tIf not specified, the bonds are assumed to be single bonds. Note that\n\tthe bond order used in UFF for each type_of_bond can be set using the\n\toption uff_bondorder.\n\n\tNB: For the connect information to be used one of the molecule\n\tkeywords must be specified.\n- See also: \tmolecule molq molmec nobond bond noautobond uff_bondorder bondtype\nconstrain"
  },
  "option-constrain": {
    "prefix": "option-constrain",
    "body": "constrain",
    "description": "- Format: \tFor geometric or (non-)linear fit:\n\tconstrain <fit> <no._of_constraints>\n\tnvari nfix coefficient <offset> <power>\n\n\tFor geometric mean fit:\n\tconstrain <fit> <no._of_constraints>\n\tnvari1 nvari2 mean nfix <coefficient>\n- Default: \tno constraints, <coefficient>=1.0\n- Use: \tAllows geometrical variables within configuration to be\n\tconstrained to be equal to preserve symmetry. By also specifying\n\t\"fit\" this allows the constraint of fitted parameters instead.\n\toption within variables section.\n\tnvari = no. of variable(s) to allow to vary\n\tnfix = no. of variable to be constrained\n\tcoefficient = multiplier that relates values\n\twhich is normally 1 or -1.\n\toffset = additive shift between the coordinates\n\tpower = power to which value is raised (1 for a linear case)\n\n\tGeometric constraints:\n\n\tVariable numbers are coded as strains = 1-6, internal variable\n\tn of atom i = 3*(i-1)+n+6, n=1,3 => x,y,z and radius of atom\n\ti = 6+3*nasym+i, where nasym = no. of atoms in asymmetric unit.\n\tNow nvari and nfix can be entered as:\n\tatom1 x/y/z atom2 x/y/z coefficient offset\n\te.g. 3 x 6 z 1.0 0.0\n\tRadii can be entered as:\n\tatom1 r atom2 r coefficient offset\n\te.g. 3 r 6 r 1.0 0.2\n\n\tAdditive use of geometric constraints is allowed so that an\n\tatom may be fixed at the centroid of two other atoms. When\n\tthis is the case for 3-D systems, there is an ambiguity\n\tdue to the presence of periodic replications. GULP will\n\tuse the two nearest images for the constraints.\n\n\tFitting constraints:\n\n\tVariable numbers refer to the number of the parameter as included\n\tin the variables table, which in general is the same as the order\n\tof specification in the input. If nvar1=nvar2 for geometric mean\n\tconstraints then the square root of just one parameter is taken.\n\tNote that the variable numbers for the constraint command in\n\tfitting may be changed in the restart file relative to those in\n\tthe input. This is to take account of the reordering of potentials.\n\n\tTo input multiple constraints the number can be\n\tadded after the constraint command.\n\n\tNote: The ability to raise the variable to power is currently only\n\tavailable for fitting constraint, though it shouldn't be needed\n\tfor geometric variables anyway.\n\n- See also: \toutcon\ncontents"
  },
  "option-contents": {
    "prefix": "option-contents",
    "body": "contents",
    "description": "- Format: \tcontents\n\tat no. <x> <y> <z> charge <coordination>\n\tat.sym. <species_type> <x> <y> <z> charge <coordination>\nUnits \tFractional, electrons and dimensionless\n- Use: \tInternal contents of the first atom, charges and coordination\n\tnumbers for all species in the unit cell. Either the atomic\n\tnumber or the symbol may be supplied, followed by the species\n\ttype. For now the species type can only be a core. Individual\n\tcharges and coodination number may be supplied for each ion or\n\tfor each type of species given using the species option. The\n\taverage observed coodination numbers are used as default.\n\tCan only be used when keyword predict included or when a single\n\tcalculation required and all coordinates are known/supplied.\ncoordno"
  },
  "option-coordno": {
    "prefix": "option-coordno",
    "body": "coordno",
    "description": "- Format: \tcoordno <n>\n\ti rcut cn <weight>\nUnits \tAngstroms for rcut\n- Default: \tno coordination numbers to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tcoordination numbers for fitting. Here i is the atom number\n\twhose coordination number is to be fitted, rcut is the cutoff\n\tdistance for including neighbours in the coordination shell,\n\tand cn is the target value of the coordination number.\n\n\tExample:\n\n\tcoordno 1\n\t3 2.4 6 1000.0\n\n\tNB This option is intended for use with relax fitting.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq monopoleq qreaxff fbond fangle relax reaction\ncosh-spring"
  },
  "option-cosh-spring": {
    "prefix": "option-cosh-spring",
    "body": "cosh-spring",
    "description": "- Format: \tcosh-spring <kcal/kjmol>\n\tatom1 k2 d <2 x flags>\nEqn \tE = k2*d**2*(cosh(r/d) - 1)\nUnits \tk2 in eV/Angs*2, d in Angs\n- Default: \tNone\n- Use: \tCore-shell spring potential with cosh functional form.\n\tCosh-spring potential does not need cutoffs as the maximum is set by cuts\n\tand the minimum is zero.\n\tOnly atom1 needs to be specified as this potential is specifically\n\tfor core shell pairs. Atom1 can be given either by atomic number\n\tor symbol which in the latter case can be followed by a species\n\ttype. If no species type is given then type is assumed to be core.\n- See also: \tspring\ncosmoframe"
  },
  "option-cosmoframe": {
    "prefix": "option-cosmoframe",
    "body": "cosmoframe",
    "description": "- Format: \tcosmoframe\n\tM(1,1) M(2,1) M(3,1)\n\tM(1,2) M(2,2) M(3,2)\n\tM(1,3) M(2,3) M(3,3)\nUnits \tnone\n- Default: \tCurrent local frame\n- Use: \tSpecifies the local frame for the system as used in a\n\tprevious run so that a job can be restarted consistently.\n- See also: \tcosmo\ncosmoshape"
  },
  "option-cosmoshape": {
    "prefix": "option-cosmoshape",
    "body": "cosmoshape",
    "description": "- Format: \tcosmoshape <octahedron/dodecahedron>\nUnits \tnone\n- Default: \toctahedron\n- Use: \tSpecifies the basic polyhedron used to construct the SAS\n\tused in COSMO. The original approach used a dodecahedron\n\tbut an octahedron is more symmetric.\n- See also: \tcosmoframe pointsperatom segmentsperatom\ncoulomb_subtract"
  },
  "option-coulomb_subtract": {
    "prefix": "option-coulomb_subtract",
    "body": "coulomb_subtract",
    "description": "- Format: \tcoulomb_subtract <intra/inter> <bond/x12/x13/x14/o14/g14> <scale14>\n\tatom1 atom2 <scale> <rmin> rmax <flag>\nUnits \trmin and rmax in Angs, scale in fractional\n- Default: \tscale = 1.0\n- Use: \tCoulomb subtraction potential only\n\tCoulomb potential does not need Coulomb offset\n\twhen acting as a core-shell spring, see cuts\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = - scale*qi.qj/rij\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction - this can also be achieved through the command molmec.\n\to14 => only act between atoms which are 1-4, i.e. separated by\n\t3 bonds\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\n- See also: \tmolmec 3coulomb\ncovalent"
  },
  "option-covalent": {
    "prefix": "option-covalent",
    "body": "covalent",
    "description": "- Format: \tcovalent at.no. <radius>\nUnits \tAngstroms\n- Default: \tstandard literature value\n- Use: \tAllows covalent radii to be changed.\n\tUsed in bond and molecule calculations.\n\tCommand is part of element section.\n- See also: \telement\ncovexp"
  },
  "option-covexp": {
    "prefix": "option-covexp",
    "body": "covexp",
    "description": "- Format: \tcovexp <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tatom1 atom2 D a r0 <rmin> rmax <3*flags>\nUnits \tD in eV, a in Angs**-1, r0, rmin and rmax in Angs\n- Default: \tnone\n- Use: \tCovalent-exponential potential form (see Phys. Rev. B, 60, 7234 (1999))\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = -D*exp(-a*(r-r0)**2/(2r))\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\ncrossover"
  },
  "option-crossover": {
    "prefix": "option-crossover",
    "body": "crossover",
    "description": "- Format: \tcrossover initial <final> <stepsize>\n- Default: \t0.4 <0.4> <0.0>\n- Use: \tPart of ga options section. Specifies the crossover probability.\n\tThe higher the value, the more likely it is that crossover will\n\toccur. If <initial> value is less than <final> value then after\n\t20 iterations tournament is incremented by <stepsize>. If the optimisation\n\tis stuck in a local minimum then if stepsize non-zero tournament is reset\n\tto <initial>.\n- See also: \tgenetic anneal tpxo\ncurrent_time"
  },
  "option-current_time": {
    "prefix": "option-current_time",
    "body": "current_time",
    "description": "- Format: \tcurrent_time time <ps>\nUnits \tps\n- Use: \tSpecifies the current total time during an MD simulation, so that\n\trestarting can be performed from the correct time step.\n- See also: \tmd aver caver absolute_coordinates\ncutd"
  },
  "option-cutd": {
    "prefix": "option-cutd",
    "body": "cutd",
    "description": "- Format: \tcutd cutoff_distance <angs/au>\nUnits \tAngstrom (default) or au\n- Default: \t2.0 Angstroms\n- Use: \tControls search for bond lengths.\n- See also: \tbond\ncutmany"
  },
  "option-cutmany": {
    "prefix": "option-cutmany",
    "body": "cutmany",
    "description": "- Format: \tcutp cutoff_scale_factor\nUnits \tFractional\n- Default: \t0.5\n- Use: \tManybody calculations with EAM and MEAM can be accelerated when\n\tsecond derivatives are being used in optimisation by reducing the\n\tcutoff for cross-terms that only contribute to Hessian matrix but\n\tnot the energy or first derivatives. This scale factor can be used\n\tto choose the balance between being exact (1.0) and fast (0.0).\n\tUsually a good local approximation to the Hessian is sufficient\n\tand so fractions much less than 1 can still converge quickly while\n\tspeed ups of an order of magnitude can be obtained.\n- See also: \tcutp cuts manybody\ncutp"
  },
  "option-cutp": {
    "prefix": "option-cutp",
    "body": "cutp",
    "description": "- Format: \tcutp cutoff_distance <polynomial/cosine/voter/exponential/mdf/p7> <taper_range> <angs/au>\nUnits \tAngstrom (default) or au\n- Default: \tUse individual potential values / polynomial\n- Use: \tMaximum interatomic potential cutoff if less than individual value\n\tThis can be optionally followed by a taper range. If this is set\n\tto a non-zero value then all short range potentials are tapered\n\tsmoothly to zero over this range such that the energy, first and\n\tsecond derivatives remain continuous. This facility is particularly\n\tuseful for MD where discontinuities can lead to drift in the energy/\n\ttemperature. Note that tapering does not apply to Coulomb subtracts,\n\tStillinger-Weber potentials (as these go to zero at the cut-off any\n\tway) and spline potentials (which can be constructed to go to zero\n\tas well). The types of taper that can be used are:\n\n\tpolynominal => 5th order polynomial\n\tp7 => 7th order polynomial over whole range (as per ReaxFF)\n\tcosine => cosine function\n\texponential => exponential function - see below\n\tvoter => form suggested by Voter - see below\n\tmdf => form suggested by Mei-Davenport-Fernando - see below\n\n\tThe form of the Voter taper is:\n\n\tE_smooth(r) = E(r) - E(rcut) + (rcut/m)*(1 - (r/rcut)**m)*(dE(rcut)/dR)\n\n\tThe form of the exponential taper is:\n\n\tE_smooth(r) = E(r)*f_cut(r)\n\n\twhere f_cut(r) = exp(-1/(rcut-r)) for r < rcut and = 0 for r >= rcut\n\n\tNote that in the case of the Voter, exponential and p7 tapers there is\n\tno taper range since it applies over the whole range.\n\n\tThe form of the MDF (Mei-Davenport-Fernando) taper is:\n\n\tE_smooth(r) = E(r)*f_cut(r)\n\n\twhere f_cut(r) = 1.0 for r < r_m and = 0 for r >= rcut.\n\tIn between it takes the value f_cut(r) = ((1 - x)**3)*(1+3x+6x**2), where\n\tx = (r-r_m)/(rcut-r_m). Here r_m is the start of the taper range.\n\n- See also: \tcutmany cuts\ncuts"
  },
  "option-cuts": {
    "prefix": "option-cuts",
    "body": "cuts",
    "description": "- Format: \tcuts cutoff_distance <angs/au>\nUnits \tAngstrom (default) or au\n- Default: \t0.8 Angstroms\n- Use: \tCore-shell cutoff distance - should be set to be the same as the\n\tmaximum core-shell harmonic distance. If spring potential is used\n\tthen cutoff is set equal to cuts to avoid errors.\n- See also: \tcutp cutmany\ncv"
  },
  "option-cv": {
    "prefix": "option-cv",
    "body": "cv",
    "description": "- Format: \tCv\n\tvalue <weight> <j/kmol>\nUnits \teV/(Kmol) (default) or J/(Kmol)\n- Default: \tHeat capacity not to be fitted\n- Use: \tSpecifies the experimental heat capacity (Cv) for\n\tfitting. Remember that it is important to set the\n\ttemperature for the structure otherwise the heat\n\tcapacity will be zero. Also you should ensure that\n\tsufficient K points are sampled to give an accurate\n\tvalue. Remember that the value should be per mole of\n\tprimitive unit cells, not just per mole when Z does\n\tnot equal 1.\n- See also: \tobservables entropy elastic sdlc hfdlc bulk shear\n\tyoung poisson bornq weight\ncvec"
  },
  "option-cvec": {
    "prefix": "option-cvec",
    "body": "cvec",
    "description": "- Format: \tcvec no_of_vector x y z\nUnits \tAngstroms\n- Use: \tFor constant pressure MD, specifies the Cartesian cell vectors at the\n\tcurrent time step of a MD simulation so that the cell dynamics can be\n\trestarted.\n- See also: \tmd caver aver current_time\ncwolf"
  },
  "option-cwolf": {
    "prefix": "option-cwolf",
    "body": "cwolf",
    "description": "- Format: \tcwolf <eta> <rmax>\nUnits \teta in inverse Angstroms and rmax in Angstroms\n- Default: \tnone\n- Use: \tThe particle - particle Coulomb interaction matrix for\n\tthe COSMO/COSMIC method is determined using the Wolf\n\tsum in real space. This option controls the eta value\n\tand cutoff for this summation. Small eta and large\n\tcutoff leads to convergence towards the Ewald / Parry\n\tresult for periodic systems.\n- See also: \tcosmo cosmic pureQ\ndamped_dispersion"
  },
  "option-damped_dispersion": {
    "prefix": "option-damped_dispersion",
    "body": "damped_dispersion",
    "description": "- Format: \tdamped <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 C6 C8 C10 <b6> <b8> <b10> <rmin> rmax <6*flags>\nUnits \tC6 in eV*Angs**6, C8 in eV*Angs**8, C10 in eV*Angs**10\n\tb6, b8 and b10 in Angs**-1\n- Default: \tC8=0, C10=0, b6=0, b8=0, b10=0\n- Use: \tSpecifies potential parameters for damped dispersion potential\n\tform of Tang and Toennies (J. Chem. Phys. 80, 3726 (1984)).\n\tIf the coefficients b6 and b8 are zero then the potential is\n\tundamped. The functional form is:\n\n\tE = -(C6/r**6)*f6(r) -(C8/r**8)*f8(r) -(C10/r**10)*f10(r)\n\n\twhere f2n(r) is given by:\n\n\tf2n(r) = 1 - { sum(k=0->2n) [(b*r)**k]/k!} * exp(-b*r)\n\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\n\tNote that this potential cannot yet be used with the c6 keyword.\n- See also: \tgrimme_c6 becke_johnson_c6\ndefault_weight"
  },
  "option-default_weight": {
    "prefix": "option-default_weight",
    "body": "default_weight",
    "description": "- Format: \tdefault_weight <type> weight\n\twhere type is one of angle, bond, cell_length, cell_angle, coord,\n\tdipole, elastic, energy, dielectric, frac, freq, grad, modulus, stress\nUnits \tNone\n- Use: \tChanges the default weights for the structure or properties.\n\tThe following are the types of weights that can be changed and\n\ttheir default values:\n\n\tangle angle observable 1.0\n\tbond bond length observable 1.0\n\tcell_length cell parameter weight in relax fit 1000.0\n\tcell_angle cell parameter weight in relax fit 1000.0\n\tcoord Cartesian coordinate weight (0-2-D) 1000.0\n\tdipole dipole moment 10.0\n\telastic elastic constant tensor component 0.01\n\tenergy energy (absolute or reaction) 1.0\n\tfrac fractional coordinate in relax fit (3-D) 10000.0\n\tfreq vibrational frequency or phonon mode 1.0\n\tgrad gradient in a conventional fit 1.0\n\tmodulus bulk or Young's modulus 1.0\n\tstress stress value in conventional fit 1.0\n\n- See also: \tweight\ndeflist"
  },
  "option-deflist": {
    "prefix": "option-deflist",
    "body": "deflist",
    "description": "- Format: \tdeflist nvacancy ninterstitial\n\tnvacancy x atom numbers, ninterstitial x atom numbers\n- Use: \tUsed by the program to enable restarts when mode2a\n\tis greater than or equal to 3. Normally this should\n\tonly need to be written by GULP, rather than the\n\tuser.\n- See also: \tdefect reldef centre region restore save size\ndelay_field"
  },
  "option-delay_field": {
    "prefix": "option-delay_field",
    "body": "delay_field",
    "description": "- Format: \tdelay_field value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - default is time in picoseconds.\n- Default: \t0.0\n- Use: \tSpecifies a delay time before any time-dependent field is\n\tapplied to the simulation. Can be used to prevent the\n\tfield being applied during equilibration.\n- See also: \tmd production sample write temperature timestep\n\ttscale nolist equilibration external_force\n\ttd_external_force end_force td_field field end_field\ndelay_force"
  },
  "option-delay_force": {
    "prefix": "option-delay_force",
    "body": "delay_force",
    "description": "- Format: \tdelay_force value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - default is time in picoseconds.\n- Default: \t0.0\n- Use: \tSpecifies a delay time before any external force is\n\tapplied to the simulation. Can be used to prevent the\n\tforce being applied during equilibration.\n- See also: \tmd production sample write temperature timestep\n\ttscale nolist equilibration external_force\n\ttd_external_force end_force\ndelf"
  },
  "option-delf": {
    "prefix": "option-delf",
    "body": "delf",
    "description": "- Format: \tdelf energy_change\nUnits \teV\n- Default: \tnone\n- Use: \tMaximum change per step of minimisation of the function before\n\tHessian is recalculated.\ndelta"
  },
  "option-delta": {
    "prefix": "option-delta",
    "body": "delta",
    "description": "- Format: \tdelta <fit> <real value>\nUnits \tfractional\n- Default: \t0.00001 for ordinary fitting / 0.0001 for relax fitting\n- Use: \tDifferencing interval used in numerical procedures.\n\tOne delta value is possible according to the sub-option word\n\tsupplied. This value corresponds to the differencing interval\n\tfor gradients during fitting (fit). Previously values were\n\talso possible in connection with free energy minimisation.\n\tHowever, these are no long needed with analytical derivatives.\ndhkl"
  },
  "option-dhkl": {
    "prefix": "option-dhkl",
    "body": "dhkl",
    "description": "- Format: \tdhkl <width of growth slice> <au>\nUnits \tAngstrom\n- Use: \tThis specifies the spacing of the hkl planes which is equivalent to the\n\twidth of the growth slice for the calculation of the attachment energy.\n\tThis should only be specified for an unrelaxed surface. For a general\n\tsurface the growth slice can be marked by adding a \"%\" sign to the end\n\tof the coordinate line.\n- See also: \tsfractional cartesian\ndiscrete"
  },
  "option-discrete": {
    "prefix": "option-discrete",
    "body": "discrete",
    "description": "- Format: \tdiscrete <no._to_set>=N\n\t<variables_to_be_set>xN\n\t<discretation_number>xN\n- Default: \t6\n- Use: \tPart of genetic options section. When two is raised to the power\n\tof this number it gives the discretisation interval for a fitted\n\tvariable. The higher the value, the greater the resolution of the\n\tfitting.\n- See also: \tgenetic\ndispersion"
  },
  "option-dispersion": {
    "prefix": "option-dispersion",
    "body": "dispersion",
    "description": "- Format: \tdispersion <no. of lines, default=1> <no. of k points per line>\n\tx1 y1 z1 to x2 y2 z2 <to x3 y3 z3 .....>\nUnits \tx, y and z are fractions of reciprocal lattice vectors\n- Default: \tnone\n- Use: \tSpecifies the start and end points of lines through k space\n\talong which the phonon dispersion will be calculated.\n\n\tExamples:\n\n\tdispersion 2 20\n\t0.0 0.0 0.0 to 0.5 0.5 0.5 to 0.5 0.0 0.0\n\t0.5 0.0 0.0 to 0.5 0.5 0.0\n\n\tThis would produce two plots, the first containing two parts\n\tand the second only one. Both plots would contain a total of\n\t20 k points.\n\n- See also: \tphonon shrink kpoints box kfull\nditto"
  },
  "option-ditto": {
    "prefix": "option-ditto",
    "body": "ditto",
    "description": "- Format: \tditto <option_word> <configuration_no>\nUnits \tnone\n- Default: \toption_word = 'all' and configuration_no = last structure\n- Use: \tCopies the data from the previous configuration to this one\n\tbefore options overwrite it. The option_word parameter is a\n\tstring that states what is to be copied. Current valid words\n\tare;\n\n\tall - copy all of the below items\n\tconditions - copy temperature / pressure data\n\tmd - copy all molecular dynamics related parameters\n\tsolvent - copy solvent related data\n\tstructure - copy structure related data\n\n\tThe parameter, configuration_no, gives the configuration number\n\tto be copied when creating the present new structure.\n\tThis option is useful when wanting to run a sequence of\n\tcalculations on the same structure with different conditions.\n\tNote: The coordinates cannot be presently overwritten.\ndmaximum"
  },
  "option-dmaximum": {
    "prefix": "option-dmaximum",
    "body": "dmaximum",
    "description": "- Format: \tdmaximum <x> <y> <z>\n- Default: \t0.0\n- Use: \tPart of genetic options section. Specifies the maximum value\n\tused as a default in genetic optimisation. According to the\n\tdimensionality the arguments supplied should be:\n\t2-D => z\n\t1-D => y & z\n\t0-D => x & y & z\n\tBy specifying a maximum value, this allows GAs to be used for\n\tnon-3D systems.\n- See also: \tgenetic\ndminimum"
  },
  "option-dminimum": {
    "prefix": "option-dminimum",
    "body": "dminimum",
    "description": "- Format: \tdminimum <x> <y> <z>\n- Default: \t0.0\n- Use: \tPart of genetic options section. Specifies the minimum value\n\tused as a default in genetic optimisation. According to the\n\tdimensionality the arguments supplied should be:\n\t2-D => z\n\t1-D => y & z\n\t0-D => x & y & z\n\tBy specifying a minimum value, this allows GAs to be used for\n\tnon-3D systems.\n- See also: \tgenetic\ndump"
  },
  "option-dump": {
    "prefix": "option-dump",
    "body": "dump",
    "description": "- Format: \tdump <every <n> noover> <channel> <cart> <connectivity> <generated> <filename a20>\n- Default: \tno dumpfile, n=1 if every is given\n- Use: \tGenerates dumpfile after fitting or optimisation.\n\tFile is created on fortran channel 12. To change, specify either\n\tanother channel number or a filename. If \"every\" is specified\n\tthen a dumpfile will be written after every n cycles of fitting\n\tor optimisation. If \"noover\" is also specified then the dumpfile won't be\n\toverwritten every write, but labelled with a unique number.\n\tIf \"connectivity\" is specified then the connectivity list will be\n\twritten to the dump file. Note that this will only be done for the\n\tcurrent configuration.\n\tIf \"generated\" is specified then this will force the dumping of explicit\n\tpotentials generated by automated rules (e.g. using uff1).\n\tNB: Although the filename can be anything you like it is proposed that\n\tthe conventional extension be .grs (.res was being used but this\n\tconflicts with other software).\n\tNNB: During Monte Carlo and Molecular Dynamics calculations the use of\n\ta small value for the frequency of dumping may significantly lower the\n\tspeed of the calculation.\neam_alloy"
  },
  "option-eam_alloy": {
    "prefix": "option-eam_alloy",
    "body": "eam_alloy",
    "description": "- Format: \team_alloy\n\tatom scale <1 x flag>\nUnits \tNone\n- Default: \tscale = 1.0\n- Use: \tThis option applies a scaling transformation to the EAM method.\n\tWhile this has no effect on pure elements, it influences the\n\tresults for alloys. The transformation is applied as;\n\n\trho'(i) = scale(i)*rho(i)\n\n\tF'(sum(rho(i))) = F(sum(rho(i))/scale(i))\n\n\twhere F is the unscaled function of the density.\n\n- See also: \tmanybody eam_functional eam_density scmaxsearch\neam_density"
  },
  "option-eam_density": {
    "prefix": "option-eam_density",
    "body": "eam_density",
    "description": "- Format: \team_density <power n/fpower/exponential n/gaussian n/cubic/quadratic/quartic/voter/glue/evoter/mei-davenport/baskes/vbo/spline>\n\tatom1 <atom2> C (power law) <1 x flag >\n\tatom1 <atom2> C rn (fractional power law) <2 x flag >\n\tatom1 <atom2> A B r0 (exponential) <3 x flags>\n\tatom1 <atom2> A B r0 (gaussian) <3 x flags>\n\tatom1 <atom2> A r0 (quadratic) <2 x flags>\n\tatom1 <atom2> A r0 (cubic) <2 x flags>\n\tatom1 <atom2> A r0 (quartic) <2 x flags>\n\tatom1 <atom2> A beta (voter) <2 x flags>\n\tatom1 <atom2> A beta (evoter) <2 x flags>\n\tatom1 <atom2> c0 c1 c2 c3 c4 c5 r0 (mei-davenport) <7 x flags>\n\tatom1 <atom2> r1 r2 rm (glue)\n\tb1_3 b1_2 b1_1 b1_0\n\tb2_3 b2_2 b2_1 b2_0\n\tb3_3 b3_2 b3_1 b3_0\n\tatom1 <atom2> A beta r0 (baskes) <3 x flags>\n\tatom1 <atom2> c sigma gamma r0 delta (vbo) <5 x flags>\n\tatom1 <atom2> A B C D rmin r0 (spline) <4 x flags>\nUnits \tDistances are in Angstrom\n- Use: \tSpecifies the density due to a given atom1 at another\n\tatomic centre (atom2) in the Embedded Atom Model (EAM).\n\tThis density is only calculated for pairs of atoms\n\twhere the \"manybody\" potential has been specified\n\tso that the user can control which atoms are part\n\tof the EAM.\n\tWhere no atom2 is specified then the density is applied to\n\tall atoms allowed by the manybody potential, regardless of\n\tspecies type.\n\tThe density can take one of several functional forms:\n\n\tPower Law:\n\n\trho(i) = C*rij**(-n)\n\n\te.g. eam_density power 6\n\tNi core 729.7\n\n\tFractional power Law:\n\n\trho(i) = C*rij**(-rn)\n\n\te.g. eam_density fpower\n\tNi core 729.7 6.1\n\n\tExponential:\n\n\trho(i) = A*(rij**n)*exp(-B(rij-r0))\n\n\te.g. eam_density exponential 0\n\tNi core 500.0 4.0 3.52\n\n\tGaussian:\n\n\trho(i) = A*(rij**n)*exp(-B(rij-r0)**2)\n\n\te.g. eam_density gaussian 2\n\tNi core 400.0 3.0 3.52\n\n\tQuadratic:\n\n\trho(i) = A*(rij-r0)**2 if r < r0, else = 0\n\n\tCubic:\n\n\trho(i) = A*(rij-r0)**3 if r < r0, else = 0\n\n\tQuartic:\n\n\trho(i) = A*(rij-r0)**4 if r < r0, else = 0\n\n\tVoter:\n\n\trho(i) = A*r**6*(exp(-beta*r) + 2**9*exp(-2*beta*r))\n\n\teVoter:\n\n\trho(i) = A*r**6*(exp(-beta*r) + 2**9*exp(-2*beta*r))*exp(-1/(rmax - r))\n\n\tMei-Davenport:\n\n\trho(i) = sum(l=0->5) (c_l/12)*(r/r0)**l\n\n\tIn the above, rmax is the cutoff for the potential from the manybody\n\toption that controls the range of the density.\n\n\tGlue:\n\n\tif r < r1\n\trho(i) = b1_3*(r-r1)**3 + b1_2*(r-r1)**2 + b1_1*(r-r1) + b1_0\n\n\tif r1 =< r < r2\n\trho(i) = b2_3*(r-r2)**3 + b2_2*(r-r2)**2 + b2_1*(r-r2) + b2_0\n\n\tif r2 =< r < rm\n\trho(i) = b3_3*(r-rm)**3 + b3_2*(r-rm)**2 + b3_1*(r-rm) + b3_0\n\n\tNote that the cut-offs are set by the manybody potential except\n\tfor the glue model where the maximum cutoff, rm, is a parameter\n\tof the model.\n\n\tBaskes:\n\n\trho(i) = A*exp(-beta((rij/r0)-1))\n\n\tVBO:\n\n\trho(i) = c*sigma*N*exp(-gamma/(1 - sqrt(r/delta)))\n\n\twhere N is a normalisation constant given by:\n\n\tN = exp(gamma/(1 - sqrt(r0/delta)))\n\n\tSpline: This is effectively one piece of a cubic spline.\n\n\trho(i) = A*(rij-r0)**3 + B*(rij-r0)**2 + C*(rij-r0) + D if rmin < r < r0, else = 0\n\n- See also: \tmanybody eam_functional scmaxsearch eam_alloy prt_eam meam_density\neam_functional"
  },
  "option-eam_functional": {
    "prefix": "option-eam_functional",
    "body": "eam_functional",
    "description": "- Format: \team_functional <square_root> <power n> <banerjea_smith n> <johnson/glue/foiles/mei-davenport/baskes/vbo/igarashi/spline>\n\tif square_root or power :\n\tatom1 A_1 <flag>\n\tatom2 A_2 <flag> etc...\n\tif banerjea_smith :\n\tatom1 F0_1 F1_1 rho0_1 <3*flags>\n\tatom2 F0_2 F1_2 rho0_2 <3*flags> etc...\n\tif johnson :\n\tatom1 F0_1 F1_1 rho0_1 alpha beta gamma <6*flags>\n\tatom2 F0_2 F1_2 rho0_2 alpha beta gamma <6*flags> etc...\n\tif glue :\n\tatom1 rho1 rho2\n\tc1_4 c1_3 c1_2 c1_1 c1_0\n\tc2_4 c2_3 c2_2 c2_1 c2_0\n\tc3_3 c3_2 c3_1 c3_0\n\tatom2 rho1 rho2\n\tc1_4 c1_3 c1_2 c1_1 c1_0\n\tc2_4 c2_3 c2_2 c2_1 c2_0\n\tc3_3 c3_2 c3_1 c3_0\n\tif foiles :\n\tatom1 F0_1 F1_1 F2_1 F3_1 <4*flags>\n\tatom2 F0_2 F1_2 F2_2 F3_2 <4*flags> etc...\n\tif mei-davenport :\n\tatom1 Ec_1 alpha_1 beta_1 gamma_1 delta_1 phi0_1 s_1_1 s_2_1 s_3_1 <9*flags>\n\tatom2 Ec_2 alpha_2 beta_2 gamma_2 delta_2 phi0_1 s_1_2 s_2_2 s_3_2 <9*flags> etc...\n\tif baskes :\n\tatom1 Ec_1 A_1 rho0_1 <2*flags>\n\tatom2 Ec_2 A_2 rho0_2 <2*flags> etc...\n\tif vbo :\n\tatom1 A_1 rn_1 <2*flags>\n\tatom2 A_2 rn_2 <2*flags> etc...\n\tif igarashi :\n\tatom1 A_1 B_1 <2*flags>\n\tatom2 A_2 B_2 <2*flags> etc...\n\tif spline :\n\tatom1 A_1 B_1 C_1 D_1 rho0_1 rho_max_1 <4 x flags>\n\tatom2 A_2 B_2 C_2 D_2 rho0_2 rho_max_2 <4 x flags>\nUnits \tA, B, C, D, AE0, F0, Ec, phi0 and F1 in eV, rho0/rho_max//alpha/beta/gamma/rn are dimensionless\n- Default: \tsquare_root, A = 1.0\n- Use: \tspecifies how the total energy contribution of an atom\n\tin the Embedded Atom Model depends on the density at that\n\tsite. The current possibilities are:\n\n\tSquare_root:\n\n\tE = - sum(i) A(i)*(rho(i))**1/2\n\n\tthis is the most common functional, as used in the Sutton-Chen potential\n\n\tPower:\n\n\tE = - sum(i) A(i)*(rho(i))**1/n\n\n\tthis is just a generalisation of the above case\n\n\tVBO:\n\n\tE = - sum(i) A(i)*(rho(i))**rn\n\n\tthis is a further generalisation of the power case\n\n\tBanerjea_smith:\n\n\tE = - sum(i) F0 [1-ln(r)/n]*r**1/n + F1*r\n\n\twhere r = rho(i)/rho0(i)\n\n\tthis is the functional of Banerjea and Smith (Phys. Rev. B,\n\t37, 6632 (1988)) - note that in this case that are atom\n\tdependent parameters also to be specified (F0, F1, rho0)\n\twhere rho0 is the electron density at equilibrium.\n\n\tJohnson:\n\n\tE = - sum(i) F0 [1-ln(x)]*x + F1*y\n\n\twhere x = (rho(i)/rho0(i))**(alpha/beta)\n\tand y = (rho(i)/rho0(i))**(gamma/beta)\n\n\tthis functional is similar to that of Banerjea & Smith and is due\n\tto Johnson (PRB, 39, 12554 (1989)).\n\n\tGlue:\n\n\tif rho < rho1\n\tE = c1_4*(rho-rho1)**4 + c1_3*(rho-rho1)**3 + c1_2*(rho-rho1)**2 +\n\tc1_1*(rho-rho1) + c1_0\n\n\tif rho1 =< rho < rho2\n\tE = c2_4*(rho-rho2)**4 + c2_3*(rho-rho2)**3 + c2_2*(rho-rho2)**2 +\n\tc2_1*(rho-rho2) + c2_0\n\n\tif rho2 =< rho\n\tE = c3_3*(rho-rho2)**3 + c3_2*(rho-rho2)**2 + c3_1*(rho-rho2) + c3_0\n\n\tthis is the functional from Ercolessi et al, Phil. Mag. A, 58, 213 (1988).\n\tNB: At present there are no fitting parameters since there are constraints\n\ton the coefficients to ensure a smooth and continuous function.\n\n\tFoiles:\n\n\tE = sum(i) F0*rho(i)**2 + F1*rho(i) + F2*(rho(i)**(5/3)/(F3 + rho(i)))\n\n\tMei-Davenport:\n\n\tE = sum(i) - Ec*[1-(alpha/beta)*ln(rho(i))]*rho(i)**(alpha/beta) +\n\tsum(m=1->3) 0.5*phi0*s_m*exp(-(sqrt(m)-1)*gamma)*\n\t[1+(sqrt(m)-1)*delta-sqrt(m)*delta*ln(rho(i))/beta]*\n\trho(i)**(sqrt(m)*gamma/beta)\n\n\tBaskes:\n\n\tE = - sum(i) AE0*x*ln(x)\n\n\twhere x = (rho(i)/rho0(i))\n\n\tthis functional is similar to that of Banerjea & Smith and Johnson, but\n\tis simplified to enable the parameters from the MEAM paper of Baskes to\n\tbe input directly. AE0 is the combination of E0 and A from the above paper.\n\n\tIgarashi:\n\n\tE = - sum(i) A(i)*(rho(i)*(1 + B(i)*rho(i))**1/2\n\n\tthis functional form was proposed in Igarashi et al, Phil. Mag. B, 63,\n\t603 (1991).\n\n\tSpline:\n\n\tif rho_max > rho > rho0:\n\n\tE = - sum(i) [A(i)*(rho(i)-rho0)**3 + B(i)*(rho(i)-rho0)**2 + C(i)*(rho(i)-rho0) + D(i)]\n\n\telse\n\n\tE = 0\n\n- See also: \team_density manybody scmaxsearch eam_alloy prt_eam\neam_potential_shift"
  },
  "option-eam_potential_shift": {
    "prefix": "option-eam_potential_shift",
    "body": "eam_potential_shift",
    "description": "- Format: \team_potential_shift <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <ener/grad> <kjmol/kcal/au> <scale14>\n\tatom1 atom2 g beta <rmin> rmax <2*flags>\nUnits \tbeta is in inverse Angstroms, g is nominally unit less as it is multiplied\n\tby a conversion constant to place it in eV\n- Default: \tNone\n- Use: \tSpecifies a two-body shift of the EAM potential energy component based on\n\tthe functional form of the Voter-Chen density. Needed to work with the\n\tembedding potential in the format used by Paradyn.\n\n\tThe form of the potential is\n\n\tE = 2.0*g*r**6*(exp(-beta*r) + 2**9*exp(-2*beta*r))\n\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tmanybody eam_functional eam_density\nedip_accuracy"
  },
  "option-edip_accuracy": {
    "prefix": "option-edip_accuracy",
    "body": "edip_accuracy",
    "description": "- Format: \tedip_accuracy accuracy1 accuracy2\nUnits \tNone\n- Default: \taccuracy1 = 0.000001, accuracy2 = 0.0000000001\n- Use: \tControls the truncation of the exponential terms in the interaction energies of\n\tEDIP. The parameter accuracy1 controls where the taper starts, while accuracy2\n\tcontrols where the taper ends. Therefore accuracy1 must be greater than accuracy2.\n\tAlthough no taper is formally required, this option can reduce the cost of EDIP\n\twith negligible effect on the accuracy.\n- See also: \tedip_coordination edip_twobody edip_threebody edip_zmax fastfd\nedip_coordination"
  },
  "option-edip_coordination": {
    "prefix": "option-edip_coordination",
    "body": "edip_coordination",
    "description": "- Format: \tedip_coordination\n\tspecies <core/shell> alpha flow fhigh <1 x flag>\n\n\tor\n\n\tedip_coordination pi\n\tspecies <core/shell> alpha flow fhigh Zdih Zrep c0 plow phigh <4 x flags>\nUnits \tflow, fhigh, plow, phigh, c0 in Angstroms\n- Default: \tNone\n- Use: \tSpecifies the parameters for the EDIP model coordination number. In the simplest\n\tform the coordination number is just a spherical term that is given by:\n\n\tZ = sum f(r_ij)\n\n\twhere f(r_ij) = 1 if r < flow, 0 if r > fhigh, and inbetween it is given by\n\texp(alpha/(1-r_ij**-3)).\n\n\tIf \"pi\" is specified as a sub-option then contributions for pi bonding are added.\n\n- See also: \tedip_twobody edip_threebody edip_zmax edip_accuracy fastfd\nedip_threebody"
  },
  "option-edip_threebody": {
    "prefix": "option-edip_threebody",
    "body": "edip_threebody",
    "description": "- Format: \tedip_threebody\n\tspecies1 <core/shel> species2 <core/shel> species3 <core/shell> &\n\tlambda0 lambda' Z0 gamma gamma' q <6 x flags>\n\tor\n\n\tedip_threebody modified\n\tspecies1 <core/shel> species2 <core/shel> species3 <core/shell> &\n\tlambda0 lambda' Z0 gamma gamma' q kq <7 x flags>\n\tor\n\n\tedip_threebody original\n\tspecies1 <core/shel> species2 <core/shel> species3 <core/shell> &\n\tlambda mu eta gamma gamma' q <6 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters for the EDIP model threebody contribution.\n\tHere the default form is that of Nigel Marks, whereas the original\n\tform follows the paper of Justo et al, PRB, 58, 2539 (1998).\n\tNB: Here the convention of N.A. Marks, J. Phys. Cond. Matter, 14,\n\t2901-2927 (2002) is followed, where lambda0 = lambda0*gammap**2/q\n\trelative to the form in the earlier PRB, 63, 035401 (2000) paper.\n\tNote that the implementation here (optionally) includes a small modification\n\tthat is not described in the papers in that there is an extra\n\tparameter, kq that can be included. When Zi < 2 then the form of h changes to be\n\tkq*(1 + cos(theta)) and so the extra value of kq is input.\n- See also: \tedip_twobody edip_coordination edip_zmax edip_accuracy fastfd\nedip_twobody"
  },
  "option-edip_twobody": {
    "prefix": "option-edip_twobody",
    "body": "edip_twobody",
    "description": "- Format: \tedip_twobody\n\tspecies1 <core/shel> species2 <core/shel> epsilon B p beta sigma a a' <7 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters for the EDIP model twobody contribution.\n\tThe functional form of the term is:\n\n\tU2(r,Z) = epsilon*[(B/r)**p - exp(-beta*Z**2)].exp(sigma/(r - a -a'*Z))\n\n\tNB In earlier versions the power p was not explicit given as it defaulted to the\n\tvalue used by Marks for carbon of 4 (Phys. Rev. B, 63, 035401 (2000)). Now the\n\tcode has been generalised so that a value can be input.\n- See also: \tedip_coordination edip_threebody edip_zmax edip_accuracy fastfd\nedip_zmax"
  },
  "option-edip_zmax": {
    "prefix": "option-edip_zmax",
    "body": "edip_zmax",
    "description": "- Format: \tedip_zmax Zmax\nUnits \tNone\n- Default: \t6.0\n- Use: \tIn the EDIP method, the interactions are truncated according to the following term;\n\n\texp(sigma/(r - a - a'*Z))\n\n\twhere a and a' are parameters. Here the cut-off is dependent on the coordination\n\tnumber, Z. While GULP iteratively tries to ensure that all atoms are found in the\n\tneighbour list based on the current cut-off, the Z value is approximated by the\n\tuncorrected value (i.e. no torsional corrections). In cases where discontinuities\n\tare found (should be rare) then the value of Zmax should be increased manually.\n- See also: \tedip_coordination edip_twobody edip_threebody edip_accuracy fastfd\neinstein"
  },
  "option-einstein": {
    "prefix": "option-einstein",
    "body": "einstein",
    "description": "- Format: \teinstein <cart>\n\tatomnumber x y z k\nUnits \tx/y/z in fractional, unless \"cart\" specified, in which case\n\tAngstroms; k in eV/Ang**2\n- Default: \tk = 0 for all atoms\n- Use: \tSpecifies an Einstein model for the system. Here the atoms\n\tare tied to lattice sites using a harmonic potential. In the\n\tinput it is necessary to specify the lattice site for the\n\tatom and the force constant.\n\tNote: This option must be used with a fixed unit cell.\n- See also: \tplane_lj\nelastic"
  },
  "option-elastic": {
    "prefix": "option-elastic",
    "body": "elastic",
    "description": "- Format: \telastic <n> <gpa>\n\ti j elastic constant E(i,j) <weight>\nUnits \tGPa\n- Default: \tno elastic constants to be fitted\n- Use: \tSubsection of observables, used for specifying experimental\n\telastic constants for fitting.\n\tOnly give unique elastic constants. Units are\n\tthe same as THBREL and as output in GULP.\n- See also: \tpiezoelectric sdlc hfdlc srefractive hfrefractive weight\n\tbornq young poisson\nelectronegativity"
  },
  "option-electronegativity": {
    "prefix": "option-electronegativity",
    "body": "electronegativity",
    "description": "- Format: \telectronegativity\n\t<Atomic_symbol/atomic_number> chi <mu> <Q0> <E0> <2 x flags for fitting>\n\n\tor\n\n\telectronegativity <qrange/qmin/qmax>\n\t<Atomic_symbol/atomic_number> chi <mu> <Q0> <E0> <qmin> <qmax> <2 x flags for fitting>\nUnits \tChi, mu, and E0 in eV, Q0, qmin, qmax in a.u.\n- Default: \tQ0 = 0.0, E0 = 0.0\n- Use: \tAllows the user to specify the parameters needed for the\n\telectronegativity equalisation method for determining\n\tcharges. Note that if the flags are not specified they\n\tare assumed to be zero.\n\tQ0 is the charge about which the electronegativity equations\n\tare quadratic. In most methods this is zero, but need not be.\n\tFor example, the EQeq method assigns values of Q0 not equal\n\tto zero.\n\tE0 is an additive constant for the energy of an atom. This is\n\tonly really needed when using multiple q ranges to ensure\n\tenergy matching.\n\tThe sub-options qrange, qmin, and qmax control whether the\n\tvalues apply for a given value of charge. By default the values\n\tapply to all values of charge (q). If qmin is specified then\n\tthey are only applied to charges larger than qmin, while if qmax\n\tis given the they are applied when q is less than qmax. When\n\tqrange is specified then the values apply for qmin =< q < qmax.\n\tNB: If no parameters are input then the default values will be\n\tused for all charge values. However, if parameters are input\n\tthen this will override the default values and the user must\n\tset parameters for all relevant ranges of charge.\n- See also: \teem qelectronegativity smelectronegativity noqeem external_potential\n\teembond\nelement"
  },
  "option-element": {
    "prefix": "option-element",
    "body": "element",
    "description": "- Format: \tword\n- Default: \tdata as in file eledata\n- Use: \tSection for changes in element properties.\n- See also: \tsymbol mass covalent ionic vdw nmr\nend_field"
  },
  "option-end_field": {
    "prefix": "option-end_field",
    "body": "end_field",
    "description": "- Format: \tend_field value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - default is time in picoseconds.\n- Default: \t0.0\n- Use: \tSpecifies an end time for any time-dependent field\n\tapplied to the simulation. Can be used to stop the\n\tfield being applied.\n- See also: \tmd production sample write temperature timestep\n\ttscale nolist equilibration external_force\n\ttd_external_force end_force td_field field delay_field\nend_force"
  },
  "option-end_force": {
    "prefix": "option-end_force",
    "body": "end_force",
    "description": "- Format: \tend_force value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - default is time in picoseconds.\n- Default: \t0.0\n- Use: \tSpecifies a time after which any external force is\n\tremoved from the simulation.\n- See also: \tmd production sample write temperature timestep\n\ttscale nolist equilibration external_force\n\ttd_external_force delay_force\nenergy"
  },
  "option-energy": {
    "prefix": "option-energy",
    "body": "energy",
    "description": "- Format: \tenergy_of_configuration <ev/kcal/au/kjmol-1> <weight>\n- Default: \tenergy in eV, weight = 1.0\n- Use: \tSubsection of observables, assigns energy to successive\n\tconfigurations for fitting.\n- See also: \tfenergy\nensemble"
  },
  "option-ensemble": {
    "prefix": "option-ensemble",
    "body": "ensemble",
    "description": "- Format: \tensemble <NVE/NVT qnose/NPT qnose qpress/NPH>\n- Default: \tNVE\n- Use: \tSelects the ensemble to be use in molecular dynamics.\n\tBy default the program uses constant number, volume\n\tand energy. However, the canonical ensemble can be\n\tchosen if constant temperature is prefered to constant\n\tenergy. If NVT is selected then the Nose-Hoover\n\tthermostat parameter must also be given. It is important\n\tto choose a suitable value such that the temperature\n\tfluctuations are minimised. For constant pressure,\n\tvariable cell shape MD, the NPT ensemble can be used\n\t(keyword \"conp\" must be present). In this case it is\n\tnecessary to supply the thermostat parameter and the\n\tbarostat parameter. Both again need tuning to get the\n\tbest performance for each system. NPT ensemble is\n\timplemented as a modified Nose-Hoover form based on\n\tMelchionna et al., Mol. Phys. 78 (1993) 533.\n- See also: \tmd integrator tau_barostat tau_thermostat\nentropy"
  },
  "option-entropy": {
    "prefix": "option-entropy",
    "body": "entropy",
    "description": "- Format: \tentropy\n\tvalue <weight> <j/Kmol>\nUnits \teV/(Kmol) (default) or J/(Kmol)\n- Default: \tEntropy not to be fitted\n- Use: \tSpecifies the experimental vibrational entropy for\n\tfitting. Remember that it is important to set the\n\ttemperature for the structure otherwise the entropy\n\twill be zero. Also you should ensure that\n\tsufficient K points are sampled to give an accurate\n\tvalue. Remember that the value should be per mole of\n\tprimitive unit cells, not just per mole when Z does\n\tnot equal 1.\n- See also: \tobservables cv elastic sdlc hfdlc bulk shear\n\tyoung poisson bornq weight\nepsilon/sigma"
  },
  "option-epsilon/sigma": {
    "prefix": "option-epsilon/sigma",
    "body": "epsilon/sigma",
    "description": "- Format: \tepsilon <kcal/kjmol> <mm3> <bond/x12/x13/x14/mol/o14/g14>\n\t<Atomic_symbol/atomic_number> epsilon sigma <2 x flags for fitting>\nUnits \tepsilon in eV and sigma in Angstroms\n- Use: \tSpecifies epsilon and sigma values for each species type to be\n\tused in combination rules to obtain Lennard-Jones potential\n\tparameters where specified.\n\tIf the sub-option \"mm3\" is specified then the epsilon and sigma values\n\tare applied to mm3buck potentials rather than Lennard-Jones.\n\tIf one of the bonding related sub-options is specified then the epsilon\n\tand sigma values are only applied to potentials with a matching bonding\n\tspecification. An example of where this is needed is CHARMM, which has\n\tdifferent values for 1-4 interactions as opposed to general VDW terms.\n- See also: \tlennard atomab mm3buck\nequatorial"
  },
  "option-equatorial": {
    "prefix": "option-equatorial",
    "body": "equatorial",
    "description": "- Format: \tequatorial <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K n beta r0 <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3)\n\t<rmin(2-3)> rmax(2-3) <3*flag>\nUnits \tK in eV, r0, rmin and rmax in Angstroms and beta in inverse Angstroms\n- Default: \tnone\n- Use: \tESFF equatorial three-body form :\n\n\tE(three) = (2K/n**2) * (1 - cos(n*theta)) + 2K*exp(-beta*(r13 - r0))\n\n\tHere r13 is the distance between the atoms 1-3 in the triad.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \taxilrod-teller angle stillinger-weber exponential bcross\n\turey-bradley murrell-mottram bacross three hydrogen-bond\n\tlin3 uff3 3coulomb bagcross\nequilibration"
  },
  "option-equilibration": {
    "prefix": "option-equilibration",
    "body": "equilibration",
    "description": "- Format: \tequilibration value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - if integer, then value is by default\n\ta multiple of the timestep or if non-integer then by\n\tdefault is the time in picoseconds.\n- Use: \tSpecifies the simulation time to be spent equilibrating\n\tthe kinetic and potential energy distributions prior to\n\tthe production phase of the molecular dynamics run.\n- See also: \tmd production sample write temperature timestep\n\ttscale nolist delay_force end_force momentum_correct\nerferfc"
  },
  "option-erferfc": {
    "prefix": "option-erferfc",
    "body": "erferfc",
    "description": "- Format: \terferfc <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <ener/grad> <type_of_bond>\n\tatom1 atom2 A alpha beta <rmin> rmax <3 x flags>\nUnits \tA in eV, alpha and beta in Angs\n- Default: \tnone\n- Use: \tSpecifies the parameters of an erferfc potential, which has the form:\n\n\tE_ij = A.erf(r/alpha).erfc(r/beta)/r\n\n- See also: \tqerfc reperfc erfpot\nerfpot"
  },
  "option-erfpot": {
    "prefix": "option-erfpot",
    "body": "erfpot",
    "description": "- Format: \terfpot <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <ener/grad> <type_of_bond>\n\tatom1 atom2 A alpha <rmin> rmax <2 x flags>\nUnits \tA in eV, alpha in Angs\n- Default: \tnone\n- Use: \tSpecifies the parameters of an erf potential, which has the form:\n\n\tE_ij = A.erf(r/alpha)/r\n\n- See also: \tqerfc reperfc erfpot\nerongi"
  },
  "option-erongi": {
    "prefix": "option-erongi",
    "body": "erongi",
    "description": "- Use: \tPart of ignore/erongi pair. All lines of input after\n\t\"ignore\" are treated as comments until the option\n\t\"erongi\" is found at the start of a line. Allows the\n\tuser to comment out parts of an input file. Note\n\tany parts commented out will not be passed through\n\tto a restart file.\n- See also: \tignore keyword include\newaldrealradius"
  },
  "option-ewaldrealradius": {
    "prefix": "option-ewaldrealradius",
    "body": "ewaldrealradius",
    "description": "- Format: \tewaldrealradius value\n- Default: \tnone\n- Use: \tNormally the Ewald sum real and reciprocal space radii are chosen\n\tautomatically to minimise the number of terms, subject to the value\n\tof the rspeed parameter. However, when using the spatial algorithm\n\tit is advantageous to control the real space extent of the Ewald\n\tsum to ensure that the system can be decomposed into sufficent regions.\n\tThe value specified fixes the real space cut-off and the reciprocal\n\tspace cut-off is calculated in order to achieve the target accuracy\n\tgiven by the accuracy option.\n- See also: \tnoexclude qwolf rspeed accuracy veck index_k\nexp2"
  },
  "option-exp2": {
    "prefix": "option-exp2",
    "body": "exp2",
    "description": "- Format: \texp2 <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K rho2 r12_0 rho3 r13_0 <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3)\n\t<rmin(2-3)> rmax(2-3) <5*flags>\nUnits \tK in eV, rho2/3 in Angstroms**-1, r12_0/r13_0/rmin/rmax in Angstroms\n- Use: \tExponentially decaying three-body potential with 2 exponentials only:\n\n\tE(three) = K*exp(-rho2*(r12-r12_0)).exp(-rho3*(r13-r13_0))\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \tthree-body angle axilrod-teller stillinger-weber bcross urey-bradley\n\tmurrell-mottram bacross hydrogen-bond equatorial uff3 3coulomb\n\texponential bagcross\nexponential_three_body"
  },
  "option-exponential_three_body": {
    "prefix": "option-exponential_three_body",
    "body": "exponential_three_body",
    "description": "- Format: \texponential <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K rho1 rho2 rho3 <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3)\n\t<rmin(2-3)> rmax(2-3) <4*flags>\nUnits \tK in eV, rho1/2/3 in Angstroms**-1\n- Use: \tExponentially decaying three-body potential:\n\n\tE(three) = K * exp(-rho1*r12).exp(-rho2*r13).exp(-rho3*r23)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \tthree-body angle axilrod-teller stillinger-weber bcross urey-bradley\n\tmurrell-mottram bacross hydrogen-bond equatorial uff3 3coulomb\n\texp2 bagcross\nexppowers"
  },
  "option-exppowers": {
    "prefix": "option-exppowers",
    "body": "exppowers",
    "description": "- Format: \texppowers <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tatom1 atom2 A B0 B1 B2 B3 <rmin> rmax <4*flags>\nUnits \tA in eV, B0 in appropriate power of Angstroms\n- Default: \tnone\n- Use: \tExp-powers potential - this potential has multiple powers of r in the\n\texponential form.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = A.exp(B0 + B1*r + B2*r**2 + B3*r**3)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tbuckingham\nexternal_force"
  },
  "option-external_force": {
    "prefix": "option-external_force",
    "body": "external_force",
    "description": "- Format: \texternal_force\n\tatomnumber force_X force_Y force_Z\nUnits \teV/Angstrom\n- Default: \t0.0 for all atoms and components\n- Use: \tSpecifies a constant external force for the atoms specified.\n\tNote that the atom number refers to the asymmetric unit and\n\tthat the user must ensure that the force doesn't violate the\n\tsymmetry of the system, otherwise any optimisation will fail.\n\tExample:\n\texternal_force\n\t1 0.2 0.0 0.0\n\t3 -0.2 0.0 0.0\n- See also: \ttd_external_force\nexternal_potential"
  },
  "option-external_potential": {
    "prefix": "option-external_potential",
    "body": "external_potential",
    "description": "- Format: \texternal_potential\n\tatomnumber V\nUnits \tV in eV/a.u.\n- Default: \t0.0 for all atoms and components\n- Use: \tSpecifies a constant external potential for the atoms specified.\n\tNote that the atom number refers to the asymmetric unit and\n\tthat the user must ensure that the potential doesn't violate the\n\tsymmetry of the system. NB: Because the potential doesn't depend\n\ton the geometry this option is not recommend for runs that involve\n\toptimisation or use energy derivatives. The main use is intended\n\tto be for QM/MM coupling with charge equilibration schemes.\n\n\tExample:\n\tpotential\n\t1 0.4\n\t3 -0.1\n- See also: \teem qeq sm\nextracutoff"
  },
  "option-extracutoff": {
    "prefix": "option-extracutoff",
    "body": "extracutoff",
    "description": "- Format: \textracutoff value\nUnits \tAngstroms\n- Default: \t0.0\n- Use: \tWhen using the storevectors algorithm, this option specifies the extra\n\tamount to be added to the global cutoff when deciding which vectors to\n\tstore. It allows for atoms to move across the boundary between updates.\n- See also: \tstorevectors resetvectors\nfactor"
  },
  "option-factor": {
    "prefix": "option-factor",
    "body": "factor",
    "description": "- Format: \tfactor theta\n- Default: \ttheta=0.9\n- Use: \tTemperature reduction factor. A larger factor implies a faster\n\tdecay of simulated temperature.\nfangle"
  },
  "option-fangle": {
    "prefix": "option-fangle",
    "body": "fangle",
    "description": "- Format: \tfangle <n>\n\ti j k theta <weight>\nUnits \tDegrees\n- Default: \tno bond angles to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tbond angles for fitting. Here i, j and k are the atom numbers\n\twhose bond angle is to be fitted and theta is the angle. The\n\tatom i is the pivot atom (i.e. the angle is j-i-k).\n\tNB For periodic systems the nearest image is taken.\n\n\tExample:\n\n\tfangle 1\n\t1 2 3 109.54\n\n\tNB This option is intended for use with relax fitting.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq monopoleq qreaxff fbond relax reaction\nfbond"
  },
  "option-fbond": {
    "prefix": "option-fbond",
    "body": "fbond",
    "description": "- Format: \tfbond <n>\n\ti j rij <weight>\nUnits \tAngstroms\n- Default: \tno bond lengths to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tbond lengths for fitting. Here i and j are the atom numbers\n\twhose bond is to be fitted and rij is the bond length.\n\tNB For periodic systems the nearest image is taken.\n\n\tExample:\n\n\tfbond 1\n\t1 2 0.96\n\n\tNB This option is intended for use with relax fitting.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq monopoleq qreaxff fangle relax reaction\nfc_supercell"
  },
  "option-fc_supercell": {
    "prefix": "option-fc_supercell",
    "body": "fc_supercell",
    "description": "- Format: \tfc_supercell na nb nc\n- Default: \tna = nb = nc = 0\n- Use: \tBuild force constants separately for cells beyond the standard\n\tunit cell. The number of cells either side of the central one\n\tis given by na, nb and nc in the respective directions. This will\n\tlead to a total of (2*na + 1)*(2*nb + 1)*(2*nc + 1) cells.\n\tThe default algorithm for phonon calculations in gulp is to compute\n\tanalytic force constants for each k point without storing force\n\tconstants between k points. This option triggers GULP to use an\n\talternative approach in which the unphased force constants are\n\tcalculated for images of the central cell and stored separately.\n\tThese are then later used to generate phonons as a function of k\n\tvector. This algorithm is potentially less expensive in CPU time\n\tthan the default, but has the potential to use a lot more memory.\n\tThis algorithm is particularly useful for force fields where\n\tanalytical second derivatives are not yet available.\n\n\tNB: For some neighbour list based forces (usually bondorder, EDIP,\n\tReaxFF) the finite difference calculation of force constants can\n\tcontain errors where images of an atom have a non-zero interaction\n\twith each other. In such cases, the solution is run with a supercell\n\tspecified and the ghostcell keyword that tells the code to compute\n\tthe force constants for the supercell, but to construct the phonons\n\tas though they were for the original smaller cell.\n- See also: \tkpoints dispersion shrink eigenvectors lower_symmetry\n\tproject_dos output nozeropt gamma_direction_of_approach omega\n\tdynamical_matrix meanke frequencies eckart box phonon\n\tnumerical msd ghostcell ghost_supercell threshold\nfcartesian"
  },
  "option-fcartesian": {
    "prefix": "option-fcartesian",
    "body": "fcartesian",
    "description": "- Format: \tfcartesian\n\tx1 y1 z1 <r1>\n\tx2 y2 z2 <r2>\n\t.. .. ..\n\txN yN zN <rN>\nUnits \tAngstroms\n- Default: \tNone\n- Use: \tSpecifies the coordinates of the final state for the nudged elastic\n\tband method. The number of coordinates must match the number\n\tof atoms in the initial structure. The radii of the ions\n\tcan be optionally given on the end of the line if a breathing\n\tshell model is being used. If not specified then they are\n\tassumed to be zero.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\trfractional ffractional rcell fcell neb fvectors\nfcell"
  },
  "option-fcell": {
    "prefix": "option-fcell",
    "body": "fcell",
    "description": "- Format: \tfcell\n\ta b c alpha beta gamma\nUnits \tAngstroms for a/b/c & degrees for alpha/beta/gamma\n- Default: \tNone\n- Use: \tSpecifies the final unit cell for the nudged elastic band method.\n\tThe number of cell parameters must match the dimensionality of the\n\tinitial system.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell neb fvectors\nfenergy"
  },
  "option-fenergy": {
    "prefix": "option-fenergy",
    "body": "fenergy",
    "description": "- Format: \tfree_energy_of_configuration <ev/kcal/au/kjmol-1> <weight>\n- Default: \tfree_energy in eV, weight = 1.0\n- Use: \tSubsection of observables, assigns free energy to successive\n\tconfigurations for fitting.\n- See also: \tenergy\nfermi-dirac"
  },
  "option-fermi-dirac": {
    "prefix": "option-fermi-dirac",
    "body": "fermi-dirac",
    "description": "- Format: \tfermi-dirac <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <ener/grad> <type_of_bond>\n\tatom1 atom2 a b r0 <rmin> rmax <3 x flags>\nUnits \ta in eV, b in Angs-1, r0 in Angs\n- Default: \tnone\n- Use: \tFermi-Dirac potential - optimisation flags for fitting.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = a/(1+exp(b(r-r0)))\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\nffractional"
  },
  "option-ffractional": {
    "prefix": "option-ffractional",
    "body": "ffractional",
    "description": "- Format: \tffractional\n\tx1 y1 z1 <r1>\n\tx2 y2 z2 <r2>\n\t.. .. ..\n\txN yN zN <rN>\nUnits \tFractional\n- Default: \tNone\n- Use: \tSpecifies the fractional coordinates of the final state for the\n\tnudged elastic band method. The number of coordinates must match\n\tthe number of atoms in the initial structure. The radii of the\n\tions can be optionally given on the end of the line if a breathing\n\tshell model is being used. If not specified then they are\n\tassumed to be zero.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional rcell fcell neb fvectors\nfield"
  },
  "option-field": {
    "prefix": "option-field",
    "body": "field",
    "description": "- Format: \tfield magnitude <direction>\nUnits \teV/(Ang.a.u.)\n- Use: \tApplies an electric field to a system, usually in a non-periodic direction.\n\tConsequently, this option should really only be used for molecules, polymers and\n\tsurfaces. The specification of the direction can either be given by the\n\trelevant axis (z, for a surface; y or z for a polymer; x, y or z for a\n\tmolecule) or in the case of a 0-D system a general vector may be specified\n\tas 3 numbers in Cartesian space. Examples of valid input lines are:\n\n\tSurface:\n\tfield 1.5 z\n\n\tPolymer:\n\tfield 1.5 y\n\n\tMolecule:\n\tfield 1.5 x\n\n\tOR\n\n\tfield 1.5 0.2 0.3 0.4\n\n\tIf the direction is not specified then the default is to apply the\n\tfield along the z axis.\n\n\tThe possibility of applying an electric field within 3-D boundary\n\tconditions is also allowed for, in which case the field direction\n\tcan also be set using a cell vector (a, b or c), as well as by a\n\tfractional or Cartesian vector:\n\n\tfield 1.5 b\n\n\tfield 1.5 0.2 0.3 0.4\n\n\tfield 1.5 cart 0.2 0.3 0.4\n\n\tNB Be very careful if you do use 3-D boundary conditions as there\n\tare many things that can go wrong and the physical interpretation\n\tis complex since the Ewald sum will counter any induced dipole.\n\tUnless you really know what you are doing, it is very strongly\n\tsuggested that you only apply an electric field in a non-periodic\n\tdirection. You should definite use the \"nomod\" keyword when working\n\twith 3-D systems and an electric field.\n\n\tNB: Symmetry will be automatically turned off if this option is used\n\tfor solids as the field will break the symmetry of the space group.\n\n\tBecause the absolute energy is undefined, the energy relative to the\n\tinitial state is used during minimisations. Note also that only one\n\tfield can be defined per configuration.\n\n\tNB: You must fix at least one atom in the direction of field application\n\totherwise the energy will head asymptotically for minus infinity!!!\n\n\tThe units of the electric field are eV/Ang per unit charge in atomic units.\n\tThis means an ion of charge +1.0 will experience a force equal to the electric\n\tfield input.\n\n\tNB: The use of an electric field is presently incompatible with the ReaxFF model\n\tand analytic second derivatives for other variable charge models.\n- See also: \ttd_field dipole delta_dipole initial_coordinates\nfinite"
  },
  "option-finite": {
    "prefix": "option-finite",
    "body": "finite",
    "description": "- Format: \tfinite <value>\n- Default: \t0.0001\nUnits \tnone (fractional)\n- Use: \tRequests that the first derivatives with respect to the energy (or\n\tfree energy if keyword \"free\" is present) are calculated numerically\n\tby central finite differences. If a value is specified after the\n\toption then this specifies the fractional change to be used as the\n\tstep size. Note that if the value is too large then the gradients\n\twill be inaccurate. However, if the value is too small then numerical\n\tnoise can lead to inaccuracies as well.\n\tThis option is largely only of use for checking analytical derivatives\n\tduring debugging and is intended for use with single point calculations.\n- See also: \tgradients\nfix_atom"
  },
  "option-fix_atom": {
    "prefix": "option-fix_atom",
    "body": "fix_atom",
    "description": "- Format: \tfix_atom <first/last/centre/none> <atom_no>\nUnits \tnone\n- Default: \tfirst (serial), last (parallel), centre (2-D)\n- Use: \tWhen optimising a structure using second derivatives it is necessary\n\tto fix one atom in order to stop translational invariance and prevent\n\tthe Hessian matrix from being singular. This option allows the user\n\tto specify which atom is fixed in several ways:\n\n\t1) Fix the first atom in a structure:\n\n\tfix_atom first\n\n\tor\n\n\tfix_atom 1\n\n\tThis has generally been the default for GULP for most cases.\n\n\t2) Fix the last atom in a structure:\n\n\tfix_atom last\n\n\tThis is now the default for parallel second derivatives since it\n\tallows for more efficient generation of the Hessian matrix by allowing\n\tthe same block cyclic distribution between the second derivatives and\n\tvariables for an otherwise unconstrained system. Note here that last\n\twill fix the last core if shells are present, since fixing a shell\n\twould not make sense in the context of electronic polarisation.\n\n\t3) Fix the most central atom:\n\n\tfix_atom centre\n\n\tFix the most central atom. For a molecule this would be in the middle,\n\twhile for a slab this is an atom furtherest from the surface.\n\n\t4) Fix a general atom number:\n\n\tfix_atom 5\n\n\tHere the atom number is given in the primitive cell\n\n\t5) Don't fix any atom:\n\n\tfix_atom none\n\n\tThis does what it says. However, this means that second derivatives should\n\tnot be used since the Hessian cannot be inverted.\n\n- See also: \toptimise gradient unfix unfreeze\nforceconstant"
  },
  "option-forceconstant": {
    "prefix": "option-forceconstant",
    "body": "forceconstant",
    "description": "- Format: \tforceconstant <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <type_of_bond>\n\tatom1 atom2 kL kT <rmin> rmax <2*flag>\nUnits \tkL and kT in eV*Angs**-2\n- Use: \tForce constant potential - includes the force constants between a pair\n\tof atoms, known as the longitudinal (kL) and transverse (kT) force\n\tconstants. This is useful for vibrational calculations, but note that\n\tthe energy and gradient are likely to be inconsistent.\n\tNB: Don't use this potential in an optimisation since it will go\n\thorribly wrong due to the above!\n\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\td2E/(da.db) = (kL - kT)*a.b/r^2 + delta_a.b*kT\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tharmonic\nfractional"
  },
  "option-fractional": {
    "prefix": "option-fractional",
    "body": "fractional",
    "description": "- Format: \tfractional\n\tat no. x y z <charge> <occupancy> <radius> <3 x optimisation flags>\n\tor\n\tat.sym. <species_type> x y z <charge> <occupancy> <radius> <3 x flags>\nUnits \tFractional and electrons, except for radius in Angstroms\n- Use: \tInternal coordinates and charges for all species in the unit cell.\n\tEither the atomic number or the symbol may be supplied, followed\n\tby the species type. If the species type is omitted then it is\n\tassumed to be a core. Individual charges may be supplied for each\n\tion or the charges for each type of species given using the\n\tspecies option. If the charges are given, then optionally site\n\toccupancies may also be specified. Similarly, if the charge and\n\toccupancy are given, then the radius of a breathing shell may\n\talso be present. Optimisation flags are only needed if cellonly,\n\tconv, bulk, conp or shell are not specified.\n- See also: \tcartesian ditto spacegroup cell\nfrequency"
  },
  "option-frequency": {
    "prefix": "option-frequency",
    "body": "frequency",
    "description": "- Format: \tfrequency <n>\n\tno. value <kpoint_number> <weight> (x n, on separate lines)\nUnits \tcm-1\n- Use: \tSubsection of observables, used for specifying frequencies for\n\tfitting to. The first number is the position of the mode required\n\tin order of increasing frequency. The third number is optionally\n\tthe k point number to fit at with reference to the k point list\n\tfor the present configuration.\n\te.g.\n\tfrequency 2\n\t1 0.0\n\t6 902.0 2\n- See also: \tobservables elastic phonon piezoelectric sdlc hfdlc weight mode\n\tfrqtol\nfrqtol"
  },
  "option-frqtol": {
    "prefix": "option-frqtol",
    "body": "frqtol",
    "description": "- Format: \tfrqtol value\nUnits \tcm-1\n- Default: \t0.5 cm-1\n- Use: \tWhen checking if there are imaginary modes through the use of the \"lower\"\n\tkeyword, the magnitude of the frequency is checked to see if it is smaller\n\tthan this tolerance.\n- See also: \tobservables elastic phonon piezoelectric sdlc hfdlc weight mode\n\tfrequency\nftol"
  },
  "option-ftol": {
    "prefix": "option-ftol",
    "body": "ftol",
    "description": "- Format: \tftol <opt/fit> real value\nUnits \tfractional\n- Default: \t0.00001 for both fitting and optimisation\n- Use: \tFunction tolerance for optimisation/fitting.\n\tValue may appear on same line as option or on the following line.\n\tIf ftol > 1.0 => ftol=10**(-ftol)\n\tIf opt/fit is not supplied then value is applied to both.\n- See also: \tgdcrit gtol gmax xtol\nfvectors"
  },
  "option-fvectors": {
    "prefix": "option-fvectors",
    "body": "fvectors",
    "description": "- Format: \tfvectors <au>\n\tx y z for vector 1 for 3D\n\tx y z for vector 2 for 3D\n\tx y z for vector 3 for 3D\n\n\tor\n\n\tx y z for vector 1 for 2D\n\tx y z for vector 2 for 2D\n\n\tor\n\n\tx y z for vector 1 for 1D\nUnits \tAngstroms\n- Default: \tNone\n- Use: \tSpecifies the final unit cell for the nudged elastic band method\n\tusing the cell vectors. The number of vectors must match the\n\tdimensionality of the system.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell neb fcell\ng3coulomb"
  },
  "option-g3coulomb": {
    "prefix": "option-g3coulomb",
    "body": "g3coulomb",
    "description": "- Format: \tg3coulomb <intra/inter> <bond> <nbeq/nbne nbond>\n\tatom1 atom2 atom3 A gamma <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 &\n\t<2 x flags>\nUnits \tA in a.u., gamma in Ang**3, distances in Angstroms\n- Default: \trmin12 = rmin13 = rmin23 = 0.0\n- Use: \tCoulomb subtraction between atoms that are connected by a three-body term:\n\n\tE(three) = - A/(rij**3 + gamma)**(1/3)\n\n\tThis potential is useful when subtracting the Coulomb term used in\n\tReaxFF between fixed charges in order to mix a molecular mechanics\n\tforce field with this form of reactive model.\n\tHere the term gamma represents 1/(gammai*gammaj)**3 where the gammai\n\tand gammaj are terms from the ReaxFF force field. The A term is the\n\tproduct of the two charges, A = q1*q2, in atomic units. The whole\n\tterm is then converted internally from units of e2/Ang to eV.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2 and 1-3 are bonded.\n\n- See also: \tgcoulomb 3coulomb\ngamma_angular_steps"
  },
  "option-gamma_angular_steps": {
    "prefix": "option-gamma_angular_steps",
    "body": "gamma_angular_steps",
    "description": "- Format: \tgamma_angular_steps Nsteps\nUnits \tnone\n- Default: \t0\n- Use: \tSpecifies the number of angular points for theta and phi to\n\tbe used in averaging the nonanalytic correction to the\n\tdynamical matrix over all possible approach directions.\n\tThis leads to the polycrystalline powder average of the\n\tgamma point frequencies due to the LO/TO splittings in all\n\tdirections. Note: the absolute magnitude does not matter -\n\tonly the direction.\n- See also: \tphonon nononanal gamma_direction_of_approach\ngamma_direction_of_approach"
  },
  "option-gamma_direction_of_approach": {
    "prefix": "option-gamma_direction_of_approach",
    "body": "gamma_direction_of_approach",
    "description": "- Format: \tgamma_direction_of_approach Kx Ky Kz\nUnits \tfractional\n- Default: \t1.0 1.0 1.0\n- Use: \tSpecifies the direction of approach to the gamma point for the\n\tcalculation of the nonanalytic correction to the dynamical\n\tmatrix due to the LO/TO splitting resulting from the electric\n\tfield in the crystal. This option allows the frequencies to be\n\tcalculated for a particular crystal orientation. Only used if\n\tgamma_angular_steps is set to zero. Note that the value is also\n\tignored if a point is part of a dispersion curve, where the\n\tdirection of the curve is taken.\n\tNB: Specification of this direction triggers the calculation of\n\tthe non-analytic correction for a single k point.\n- See also: \tphonon nononanal gamma_angular_steps\ngastdamping"
  },
  "option-gastdamping": {
    "prefix": "option-gastdamping",
    "body": "gastdamping",
    "description": "- Format: \tgastdamping <original/fixed/accelerate> damping_factor\nUnits \tNone\n- Default: \tdamping_factor = 0.5, original\n- Use: \tControls the damping procedure during iterative solution\n\tof the Gasteiger scheme. Here the damping factor is the\n\tfraction of the old and new electronativities that are\n\tused to propagate the charges. A small value of the damping\n\tfactor implies slow, but stable, convergence whereas a\n\tlarge value can lead to fast convergence or oscillation.\n\tIn the original Gasteiger method the damping factor is\n\tset to 1/2 and raised to the power of the iteration number.\n\tThis means that the calculation becomes more damped as it\n\tprogresses to guarantee convergence. The option to use\n\teither a fixed damping or accelerated damping is provided.\n\tHowever, this will yield different results from the original\n\tGasteiger method.\n- See also: \teem gasteiger gastiter qeq gastparam gasttol noqeem\n\teembond\ngastiter"
  },
  "option-gastiter": {
    "prefix": "option-gastiter",
    "body": "gastiter",
    "description": "- Format: \tgastiter maximum_number_iterations\nUnits \tNone\n- Default: \t50\n- Use: \tSets the maximum number of iterations that are allowed\n\tduring the Gasteiger charge scheme.\n- See also: \teem gasteiger gasttol qeq gastparam gastdamping noqeem\n\teembond\ngastparam"
  },
  "option-gastparam": {
    "prefix": "option-gastparam",
    "body": "gastparam",
    "description": "- Format: \tgastparam species A B C <Q0> <4*flags>\nUnits \tA is in eV, B in eV/e, C in eV/e^2, Q0 in atomic units\n- Default: \tAs per original paper, Tetrahedron, 36, 3219-3288 (1980), Q0=0\n- Use: \tSets a species specific set of parameters for use in a\n\tGasteiger charge calculation. For example to set the values\n\tfor carbon type 4 with A = 7.98, B = 9.18 and C = 1.88, the\n\tinput would be:\n\n\tgastparam C4 7.98 9.18 1.88\n\n\tQ0 is the initial charge for the species, which is usually\n\tzero. Note that the Gasteiger algorithm is designed to guarantee\n\tconvergence, but to a state that depends on the initial\n\tcharges and so Q0 is used to initialise each charge solution\n\trather than the values from the previous iteration.\n- See also: \teem gasteiger gasttol qeq gastiter gastdamping noqeem\n\teembond\ngasttol"
  },
  "option-gasttol": {
    "prefix": "option-gasttol",
    "body": "gasttol",
    "description": "- Format: \tgasttol tolerance\nUnits \tElectrons\n- Default: \t0.000001\n- Use: \tSets the tolerance on the change in the charges between\n\titerations of the Gasteiger scheme. The value is set here\n\tfor consistency with the original paper, which used 0.001\n\tof an electron, but more converged values can be obtained\n\tby lowering the tolerance\n- See also: \teem gasteiger gastiter qeq gastparam gastdamping noqeem\n\teembond\ngcmcexistingmolecules"
  },
  "option-gcmcexistingmolecules": {
    "prefix": "option-gcmcexistingmolecules",
    "body": "gcmcexistingmolecules",
    "description": "- Format: \tgcmcexistingmolecules mol1 mol2 mol3 ...etc....\n\tnatmol1 atom1_1 atom1_2 atom1_3.... atom1_natmol1\n\tnatmol2 atom2_1 atom2_2 atom2_3.... atom2_natmol2\n\tnatmol3 atom3_1 atom3_2 atom3_3.... atom3_natmol3\n\tetc...\n- Default: \tNo existing GCMC molecules in existing structure\nUnits \tNone\n- Use: \tAllows molecules in the current structure that are related to GCMC\n\tmolecules to be identified. The purpose of this option is to facilitate\n\trestarts of GCMC runs. For example, if a system contains 3 molecules\n\twhere molecule numbers 2 and 3 were inserted by GCMC, while molecule 1\n\tis a fixed framework into which the molecules are inserted then the\n\tinput would be:\n\n\tgcmcexistingmolecules 2 3\n\t2 5 6\n\t2 7 8\n\n\tNote that lines 2 and 3 identify that there are 2 atoms in molecule\n\t2 numbered 5 & 6, while molecule 3 also has 2 atoms that are numbers\n\t7 & 8 in the input for this structure.\n\n\tWhere there are many molecules a range can also be specified as follows:\n\n\tgcmcexistingmolecules 4 to 8\n\n- See also: \tmccreate mcdestroy montecarlo gcmcspecies gcmcmolecules\ngcmcmolecule"
  },
  "option-gcmcmolecule": {
    "prefix": "option-gcmcmolecule",
    "body": "gcmcmolecule",
    "description": "- Format: \tgcmcmolecule <number_of_atoms> <au>\n\tAtomicSymbol <core/shell> x y z ( x number of atoms)\n- Default: \tNone\nUnits \tCoordinates in Angstroms\n- Use: \tSpecifies the coordinates for molecules that can be created\n\tduring a GCMC calculation trial step. The molecule will be\n\tinserted using the specified geometry at a random position\n\tand with a random orientation. Only used in GCMC calculations.\n\tNote that specifying the number of atoms is optional.\nExample \tgcmcmolecule\n\tN core 0.0 0.0 -0.6\n\tN core 0.0 0.0 0.6\n- See also: \tmccreate mcdestroy montecarlo gcmcspecies gcmcexistingmolecules\ngcmcspecies"
  },
  "option-gcmcspecies": {
    "prefix": "option-gcmcspecies",
    "body": "gcmcspecies",
    "description": "- Format: \tgcmcspecies <number_of_species>\n\tAtomicSymbol <core/shell> x <number_of_species>\n- Default: \tNone\nUnits \tNone\n- Use: \tSpecifies the species that can under go destruction/creation\n\toperations in a trial MC step. Only used in GCMC calculations.\n\tNote that specifying the number of species is optional.\nExample \tgcmcspecies 2\n\tH core\n\tO core\n- See also: \tmccreate mcdestroy montecarlo gcmcmolecule\ngcoulomb"
  },
  "option-gcoulomb": {
    "prefix": "option-gcoulomb",
    "body": "gcoulomb",
    "description": "- Format: \tgcoulomb <intra/inter> <bond/x12/x13/x14/o14/g14> <scale14>\n\tatom1 atom2 A gamma <rmin> rmax <flag>\nUnits \tA in a.u., gamma in Ang**3, distances in Angstroms\n- Default: \trmin = 0.0\n- Use: \tCoulomb subtraction potential of ReaxFF form with gamma. This\n\tpotential is useful when mixing fixed charges in a ReaxFF calculation\n\twith a molecular mechanics force field between the fixed charges\n\tsince it allows the ReaxFF charge term to be removed.\n\n\tE = - A/(rij**3 + gamma)**(1/3)\n\n\tHere the term gamma represents 1/(gammai*gammaj)**3 where the gammai\n\tand gammaj are terms from the ReaxFF force field. The A term is the\n\tproduct of the two charges, A = q1*q2, in atomic units. The whole\n\tterm is then converted internally from units of e2/Ang to eV.\n\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction - this can also be achieved through the command molmec.\n\to14 => only act between atoms which are 1-4, i.e. separated by\n\t3 bonds\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\n- See also: \tmolmec g3coulomb\ngdcrit"
  },
  "option-gdcrit": {
    "prefix": "option-gdcrit",
    "body": "gdcrit",
    "description": "- Default: \t4.0\n- Use: \tOptimisation of defects involves a force balance\n\tmethod, rather than direct minimisation of the\n\tenergy. The method is implemented in GULP such that\n\tinitially the energy is minimised until the gradient\n\tnorm is sufficiently small, at which point the step\n\tlength is based on -(H-1).g and no line search is\n\tused (where H = second derivative matrix and g =\n\tgradient vector). The criterion for switching\n\tbetween these minimisation methods is given by\n\tgdcrit/nvar, where nvar is the number of variables.\n- See also: \tdefect\ngeneral"
  },
  "option-general": {
    "prefix": "option-general",
    "body": "general",
    "description": "- Format: \tgeneral <m> <n> <ener/grad> <intr/inte> <bon/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 A rho C <rmin> rmax <3*flags>\nUnits \tA in eV*Angs**m, rho in Angs, C in eV*Angs**n\n- Default: \tm=0 n=6\n- Use: \tGeneral potential - optimisation flags for fitting (0/1).\n\tThis potential is a combination of a Buckingham and Lennard-Jones.\n\tOn the first line, general may be followed by m and n, which\n\tare the powers of r (12 6 => L-J potential). Rho=0.0 results in the\n\texponential term being removed. The words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance. atom1 and atom2 may be specified either by atomic number or\n\tsymbol, which in the latter case can be followed by a species type.\n\tIf no species type is given then type is assumed to be core.\n\n\tE = A.exp(-r/rho)/r**m - C/r**n <-E(rmax) <+Grad correction term>>\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\n- See also: \tc6 zbl\ngenetic"
  },
  "option-genetic": {
    "prefix": "option-genetic",
    "body": "genetic",
    "description": "- Use: \tStart of genetic algorithm options section, closed by \"end\"\n- See also: \ttournament crossover mutation discrete\n\tconfigurations best maximum minimum dmaximum dminimum\ngexp"
  },
  "option-gexp": {
    "prefix": "option-gexp",
    "body": "gexp",
    "description": "- Default: \tUse tournament probability.\n- Use: \tPart of ga options section. If specified then probability of\n\tsuccess for a given configuration is weighted exponentially\n\twith respect to how good the configuration is compared with the\n\tother configurations within the present population.\n- See also: \ttournament\nghost_supercell"
  },
  "option-ghost_supercell": {
    "prefix": "option-ghost_supercell",
    "body": "ghost_supercell",
    "description": "- Format: \tghost_supercell (ncells in x) (ncells in y) (ncells in z)\n- Default: \t1 1 1 (i.e. no underlying supercell)\n- Use: \tTells GULP that the structure was generated by the supercell option\n\tand so there is an underlying smaller unit cell. This is used for\n\tcalculations where force constants between different cell images\n\tare needed. Main use is currently in generating files for ShengBTE,\n\tor for finite difference calculation of phonons with neighbour list\n\tbased potentials.\n- See also: \tsupercell ghostcell fc_supercell\ngmax"
  },
  "option-gmax": {
    "prefix": "option-gmax",
    "body": "gmax",
    "description": "- Format: \tgmax <opt/fit> real value\nUnits \tfractional\n- Default: \t0.001 for opt / 0.001 for fit\n- Use: \tMaximum allowed individual gradient for optimisation/fitting.\n\tValue may appear on same line as option or on the following line.\n\tIf gmax > 1.0 => gmax=10**(-gmax)\n\tIf opt/fit is not supplied then value is applied to both.\n- See also: \tgdcrit gtol ftol xtol\ngradients"
  },
  "option-gradients": {
    "prefix": "option-gradients",
    "body": "gradients",
    "description": "- Format: \tgradients <units>\n\tatom_no. x y z <weight>\nUnits \teV <eV/Angs or au/Angs or au>\n- Default: \tall fitted gradients are zero\n- Use: \tSubsection of observables, used for specifying the x, y and z\n\tcomponents of the derivatives on the atom number given for\n\tThe atom number should refer to the order of the atoms\n\tin the asymmetric unit. Derivatives should be symmetry adapted\n\tif symmetry is being used (i.e. weighted by the number of\n\tsymmetry related atoms of the type).\n\tCartesian gradients may be supplied by specifying units.\n- See also: \tobservables elastic sdlc hfdlc piezo energy stress\ngrid"
  },
  "option-grid": {
    "prefix": "option-grid",
    "body": "grid",
    "description": "- Format: \tgrid min <max> <iter>\n- Default: \t64 by 64 by 64 fixed grid (i.e. min=max=6).\n- Use: \tPart of ga options section. Allows the grid size to change after\n\titer (default=20) iterations from (2^min)^3 to (2^min+1)^3 to a\n\tmaximum number of grid points of (2^max)^3.\n\tNote that when optimisation stuck within a local minimum and this\n\toption word is used then grid size will begin changing again.\n- See also: \tdiscrete\ngrimme_c6"
  },
  "option-grimme_c6": {
    "prefix": "option-grimme_c6",
    "body": "grimme_c6",
    "description": "- Format: \tgrimme_c6 <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 C6 d r0 <rmin> rmax <3*flags>\nUnits \tC6 in eV*Angs**6, r0 in Angs, d is unitless\n- Default: \ts_6 = 1, d = 20\n- Use: \tSpecifies potential parameters for the Grimme form of damped C6 term\n\t(J. Comput. Chem., 27, 1787 (2006)). The energy is of the form:\n\n\tE = - C6*fdmp(r)/r**6\n\n\twhere the damping function, fdmp is given by:\n\n\tfdmp(r) = 1/[1 + exp(-d(r/r0 - 1))]\n\n\tNB: Here the s6 parameter of Grimme is subsumed into the C6 terms.\n\n- See also: \tdamped_dispersion becke_johnson_c6\ngtol"
  },
  "option-gtol": {
    "prefix": "option-gtol",
    "body": "gtol",
    "description": "- Format: \tgtol <opt/fit> real value\nUnits \tfractional\n- Default: \t0.0001 for opt / 0.0001 for fit\n- Use: \tGradient tolerance for optimisation/fitting.\n\tValue may appear on same line as option or on the following line.\n\tIf gtol > 1.0 => gtol=10**(-gtol)\n\tIf opt/fit is not supplied then value is applied to both.\n- See also: \tgdcrit gmax ftol xtol\nharmonic"
  },
  "option-harmonic": {
    "prefix": "option-harmonic",
    "body": "harmonic",
    "description": "- Format: \tharmonic <k3> <k4> <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tatom1 atom2 k2 <k3> <k4> r0 <coul> <rmin> rmax <2-4*flags>\nUnits \tk2 in eV*Angs**-2, r0 in Angs, coul in none, k3 in eV*Angs**-3\n\tk4 in eV*Angs**-4\n- Default:s \tk3 = k4 = 0.0, coul = 0.0\n- Use: \tHarmonic potential - optimisation flags for fitting.\n\tcoul = 1.0 => Coulomb subtracted\n\tcoul = 0.0 => not Coulomb subtracted\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = 1/2 K2*(r-r0)**2 + 1/6 K3*(r-r0)**3 + 1/24 K4*(r-r0)**4\n\t-coul*qi*qj/r\n\n\tk3 and k4 terms can be included as follows:\n\n\tharm k3\n\tatom1 atom2 k2 k3 r0 <coul> <rmin> rmax <3*flags>\n\n\tharm k4\n\tatom1 atom2 k2 k4 r0 <coul> <rmin> rmax <3*flags>\n\n\tharm k3 k4\n\tatom1 atom2 k2 k3 k4 r0 <coul> <rmin> rmax <4*flags>\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tspring squaredharmonic forceconstant mm3stretch\nhfdlc"
  },
  "option-hfdlc": {
    "prefix": "option-hfdlc",
    "body": "hfdlc",
    "description": "- Format: \thfdlc <n>\n\ti j dielectric constand hfe(i,j) <weight>\nUnits \tnone\n- Default: \tno high frequency dielectric constants to be fitted\n- Use: \tSubsection of observables, used for specifying experimental\n\thigh frequency dielectric constants for fitting.\n\tOnly give unique high frequency dielectric constants.\n- See also: \telastic piezoelectric sdlc weight srefractive hfrefractive\n\tbornq young poisson shear voigt bulk omega\nhfrefractive_index"
  },
  "option-hfrefractive_index": {
    "prefix": "option-hfrefractive_index",
    "body": "hfrefractive_index",
    "description": "- Format: \ti high_frequency_refractive_index(i) <weight>\nUnits \tNone\n- Default: \tNo high frequency refractive indices to be fitted\n- Use: \tSpecifies exptl high frequency refractive indices for fitting\n\talong principal axes.\n- See also: \telastic piezoelectric sdlc hfdlc srefractive weight\nhigh-fq dielectric"
  },
  "option-high-fq dielectric": {
    "prefix": "option-high-fq dielectric",
    "body": "high-fq dielectric",
    "description": "- Format: \thfdlc <n>\n\ti j dielectric constant hfe(i,j) <weight>\nUnits \tnone\n- Default: \tno dielectric constants to be fitted\n- Use: \tSubsection of observables, used for specifying experimental\n\thigh frequency dielectric constants for fitting.\n\tOnly give unique high frequency dielectric constants.\n- See also: \telastic piezoelectric sdlc weight srefractive hfrefractive\nhydrogen-bond"
  },
  "option-hydrogen-bond": {
    "prefix": "option-hydrogen-bond",
    "body": "hydrogen-bond",
    "description": "- Format: \thydrogen-bond <intra/inter> <kcal/kjmol> <m> <n> <p> <taper> <dreiding>\n\tatom1 atom2 atom3 A B <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <2*flags>\n\tor if taper is specified:\n\tatom1 atom2 atom3 A B <theta_min theta_max> <rmin12> rmax12 <rmin13> rmax13\n\t<rmin23> rmax23 <2*flags>\nUnits \tA in eV*Ang**m, B in eV*Ang**n\n- Default:s \tm = 12, n = 10, p = 4\n- Use: \tSpecifies a three-body hydrogen bond potential of form:\n\n\tIf theta > 90 degrees :\n\n\tE(three) = (A/(r**m) - B/(r**n))*(cos(theta))**p\n\n\tIf theta =< 90 degrees :\n\n\tE(three) = 0.0\n\n\twhere r is the distance between atoms 2 and 3, and theta is the angle\n\tbetween the 1-2 and 1-3 vectors.\n\n\tIf the dreiding sub-option is specified then the rule that the\n\tpotential will only be applied when H is bonded to one of the following\n\tdonor atoms N, O, F, S, Cl, Br, I is used.\n\n\tNote that theta_min and theta_max are only input if the \"taper\" sub-option\n\tis specified.\n- See also: \tthree-body angle exponential axilrod-teller stillinger bcross\n\turey-bradley murrell-mottram bacross equatorial lin3 uff3 3coulomb\n\tbagcross\nigauss"
  },
  "option-igauss": {
    "prefix": "option-igauss",
    "body": "igauss",
    "description": "- Format: \tigauss <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 A b r0 <rmin> rmax <3*flags>\nUnits \tA in eV, b in Angs**-2, r0, rmin and rmax in Angs\n- Default: \tnone\n- Use: \tThis option specifies the use of an inverted Gaussian potential\n\tbetween two atoms. The form of the energy is:\n\n\tE = - A.exp(-b(r-r0)**2)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\nignore"
  },
  "option-ignore": {
    "prefix": "option-ignore",
    "body": "ignore",
    "description": "- Use: \tPart of ignore/erongi pair. All lines of input after\n\t\"ignore\" are treated as comments until the option\n\t\"erongi\" is found at the start of a line. Allows the\n\tuser to comment out parts of an input file. Note\n\tany parts commented out will not be passed through\n\tto a restart file.\n- See also: \terongi keyword include\nimpurity"
  },
  "option-impurity": {
    "prefix": "option-impurity",
    "body": "impurity",
    "description": "- Format: \timpurity symbol <core/shel> <symbol> <cart/frac> x y z <fix>\n- Use: \tCreate an impurity (combined vacancy and interstitial) in a\n\tdefect calculation. The symbol for the impurity ion must be\n\tgiven first, optionally followed by a core/shell specification.\n\tIf the type is not given then both will be added if appropriate.\n\tThe position of the impurity can be specified in two ways:\n\t(a) atom symbol - replace the specified atom with the impurity.\n\tTakes the nearest image to the defect centre of the first\n\tatom of this type to be specified in the asymmetric unit.\n\te.g. impurity Mg2 Ca\n\t(b) coordinates - any species within a given tolerance of the\n\tspecified coordinates is to be replaced and the impurity\n\tis then placed at those coordinates. By default x y and z\n\tare taken to be fractional, unless \"cart\" is specified,\n\tin which case the image nearest the defect centre is taken.\n\te.g. impurity Mg2 0.5 0.5 0.5\n\timpurity Mg2 core cart 1.2 1.2 1.2\n\tIf \"fix\" is specified, then the impurity will be held fixed\n\tduring the defect calculation. Partial fixing can also be achieved\n\tby specifying the directions to be fixed as well;\n\te.g. impurity Mg2 core 1.2 1.2 1.2 fix xy\n\twould fix the Mg atom in the x and y directions. Allowed values\n\tare - x, y, z, xy, xz, yz and xyz.\n- See also: \tdefect vacancy interstitial size centre region_1\ninclude"
  },
  "option-include": {
    "prefix": "option-include",
    "body": "include",
    "description": "- Format: \tinclude filename\n- Use: \tIncludes a separate file into the GULP input. This allows common input\n\tfor a series of runs to be placed in one file and then read into multiple\n\tinputs.\n- See also: \tkeyword ignore erongi\nindex_k"
  },
  "option-index_k": {
    "prefix": "option-index_k",
    "body": "index_k",
    "description": "- Format: \tindex_k <integer_value>\nUnits \tnone\n- Default: \t60\n- Use: \tThis specifies the limit on the looping indices for reciprocal lattice\n\tvectors. If an error message appears that says that there are too many\n\treciprocal lattice vectors then it means that this value has been\n\texceeded. While the value can be increased, this may indicate that the\n\tunit cell of your system is becoming too small and thereby causing the\n\tvolume of reciprocal space to become too large.\n- See also: \trspeed veck accuracy ewaldrealradius\ninitial_coordinates"
  },
  "option-initial_coordinates": {
    "prefix": "option-initial_coordinates",
    "body": "initial_coordinates",
    "description": "- Format: \tinitial_coordinates\n\tx1 y1 z1\n\tx2 y2 z2\n\t.....\n\txN yN zN\nUnits \tAngstroms\n- Use: \tSpecifies the initial Cartesian coordinates of the atoms. Used for\n\trestarting calculations that specify an electric field or the\n\tdelta_dipole form of dipole energy.\n- See also: \tmd absolute_coordinates\nintconserved"
  },
  "option-intconserved": {
    "prefix": "option-intconserved",
    "body": "intconserved",
    "description": "- Format: \tintconserved pr_cons\nUnits \teV\n- Default: \t0.0\n- Use: \tSpecifies the integral of the conserved quantity so far for use in an MD run\n\tfor correct restarting.\n- See also: \tmd integrator conserved\nintegrator"
  },
  "option-integrator": {
    "prefix": "option-integrator",
    "body": "integrator",
    "description": "- Format: \tintegrator <gear/velocity verlet/leapfrog verlet/stochastic> <iter>\n- Default: \tstochastic (note this is a change from earlier versions)\n- Use: \tSpecifies the integration algorithm to be used in molecular\n\tdynamics as being the Gear 5th order or either of the\n\tvelocity or leapfrog methods of Verlet. Currently the Gear\n\talgorithm is only available in the NVE ensemble.\n\tDetails of the stochastic integrator can be found in G. Bussi\n\tet al, J. Chem. Phys., 130, 074101 (2009).\n- See also: \tmd tau_barostat tau_thermostat p_isotropic p_flexible\ninter"
  },
  "option-inter": {
    "prefix": "option-inter",
    "body": "inter",
    "description": "- Default: \tboth\n- Use: \tAll subsequent potentials to be treated as\n\tintermolecular when molecule option is active.\n- See also: \tmolecule molq molmec intra both 14_scale\ninterstitial"
  },
  "option-interstitial": {
    "prefix": "option-interstitial",
    "body": "interstitial",
    "description": "- Format: \tinterstitial symbol <core/shel> <cart/frac/bond> x y z <fix>\n- Use: \tCreates an interstitial in a defect calculation. The symbol\n\tfor the interstitial species must be given and optionally\n\tfollowed by the specification of core or shell. If core or\n\tshell is not specified then both will be added if appropriate.\n\tThe coordinates for the interstitial must be given and by\n\tdefault are assumed to be fractional unless \"cart\" has been\n\tspecified. If fractional coordinates are used then the image\n\tnearest to the defect centre will be used.\n\te.g. interstitial Mg2 0.25 0.25 0.25\n\tinterstitial O1 shel cart 1.2 0.6 0.6\n\tAlternatively the command \"bond\" may be used in place of frac or\n\tcart in which case the interstitial is added at the covalent\n\tbond length from an atom which is specified by either a symbol\n\tor the coordinates of the ion in the defective region 1.\n\tThe program will attempt to place the bond to maximise the\n\tdistance to any other atoms bonded to the specified centre.\n\te.g. interstitial H bond O2\n\tinterstitial H1 core bond 0.1 0.4 0.24\n\tinterstitial H bond 1.2 3.4 2.7\n\tIf \"fix\" is specified, then the interstitial will be held fixed\n\tduring the defect calculation. Partial fixing can also be achieved\n\tby specifying the directions to be fixed as well;\n\te.g. interstitial H 1.2 3.4 2.7 fix xy\n\twould fix the H atom in the x and y directions. Allowed values\n\tare - x, y, z, xy, xz, yz and xyz.\n- See also: \tdefect vacancy impurity size centre region_1\nintra"
  },
  "option-intra": {
    "prefix": "option-intra",
    "body": "intra",
    "description": "- Default: \tboth\n- Use: \tAll subsequent potentials to be treated as\n\tintramolecular when molecule option is active.\n- See also: \tmolecule molq molmec inter both and 14_scale\ninversion"
  },
  "option-inversion": {
    "prefix": "option-inversion",
    "body": "inversion",
    "description": "- Format: \tinversion <squared> <intra/inter/bond/mol> <only3> <kcal/kjmol>\n\tatom1 atom2 atom3 atom4 k <k0> rmax(1-2) rmax(1-3) rmax(1-4) <1 x flag>\nUnits \tk in eV, k0 in degrees\n- Default: \tnone\n- Use: \tOut of plane energy - energy penalty for atom 1 lying\n\tout of the plane of atoms 2, 3 and 4. This form uses the\n\tDreiding planar expression:\n\n\tE = k.(1 - cos(phi))\n\n\twhere phi is the angle between the plane of the centre atom and two\n\tothers with the bond from the centre atom to the third atom.\n\tNote that because phi depends on which of the 3 different angles is\n\tchosen, GULP computes the contribution for all 3 cases and takes the\n\taverage.\n\tIf the sub-option \"squared\" is specified then the modified form given\n\tbelow is used:\n\n\tE = 1/2 (k/sin(k0)**2).(cos(phi) - cos(k0))**2\n\n\tand k0 must be input.\n\tIf the only3 sub-option is specified then the potential applies where\n\tan atom has exactly 3 bonds present.\n- See also: \ttorsion ryckaert torangle torharm torexp xoutofplane outofplane\nionic"
  },
  "option-ionic": {
    "prefix": "option-ionic",
    "body": "ionic",
    "description": "- Format: \tionic at.no. <radius>\nUnits \tAngstroms\n- Default: \tvalue for most common oxidation state normally in octahedral\n\tenvironment\n- Use: \tAllows ionic radii to be changed.\n\tTo be used in breathing shell model eventually.\n\tCommand is part of element section.\n- See also: \telement\niterations"
  },
  "option-iterations": {
    "prefix": "option-iterations",
    "body": "iterations",
    "description": "- Format: \titerations n <gradient_norm> <noextrapolate> <order_of_extrapolation>\n- Default: \tn = 100, gradient_norm = 1.0D-8, order of extrapolation = 8\n- Use: \tSpecifies that shell model molecular dynamics shall be performed with\n\tmassless shells. This is the default for molecular dynamics if shells\n\tare present. The shell positions are optimised in every time step for\n\tn iterations or until the specified gradient norm for the shells only\n\tis reached. Convergence of the shell gradients is crucial for the\n\tconservation of the momentum of the system.\n\tBy default shell extrapolation using rational function interpolation\n\tis turned on, using a function of order 8. If \"noextrapolate\" is\n\tspecified then this is turned off. Extrapolation usually greatly\n\treduces the number of cycles for optimisation.\n- See also: \tshellmass sopt md\nkeyword"
  },
  "option-keyword": {
    "prefix": "option-keyword",
    "body": "keyword",
    "description": "- Format: \tkeyword <list of keywords>\n- Use: \tallows keywords to be specified anywhere in an input file\n\tinstead of just on the top line.\n\n\te.g.\n\tkeyword opti conp prop\n\n- See also: \tinclude ignore erongi\nkim_model"
  },
  "option-kim_model": {
    "prefix": "option-kim_model",
    "body": "kim_model",
    "description": "- Format: \tkim_model <number_of_models>\n\tname_of_model1\n\tname_of_model2\n\t:\n\tname_of_modelN\n\tNB: To allow for the use of long model names this is given\n\ton the line after the option.\nUnits \tnone\n- Default: \tNo KIM model is to be used, number_of_models = 1\n- Use: \tThis option allows the user to select models from\n\tthe OpenKIM project for use with GULP. Note that the\n\tcode must have been compiled with the -DKIM option in DEFS.\n\tSee OpenKIM documentation for more details.\n\n\tIf using multiple models then the number must be specified\n\tand then each model name will be read from a separate line.\n\tBy default a single model name is expected.\n\n\tNB: From version 5.2 of GULP onwards only OpenKIM version\n\t2.0 is supported.\n\tNB: At present KIM will only support a single type of each\n\telement and so species types are ignored when being passed\n\tto KIM.\n\tNB: If using KIM models then it is not currently possible\n\tto compute the attachment energy and so this will not be\n\toutput.\nkpoints"
  },
  "option-kpoints": {
    "prefix": "option-kpoints",
    "body": "kpoints",
    "description": "- Format: \tx y z <weight>\nUnits \tx,y,z are fractions of reciprocal lattice vectors\n- Default: \tweight=1.0\n- Use: \tSpecifies the k points to be used in the phonon calculation / free\n\tenergy calculation explicitly.\n- See also: \tphonon dispersion shrink kfull msd\nlbfgs_order"
  },
  "option-lbfgs_order": {
    "prefix": "option-lbfgs_order",
    "body": "lbfgs_order",
    "description": "- Format: \tlbfgs_order <integer_value>\nUnits \tNone\n- Default: \t10\n- Use: \tSpecifies the order of the limited memory BFGS algorithm. The\n\tlarger the value the more memory will be used, but the more\n\trapid the convergence will be. Designed for use with large\n\tsystems where the full Hessian cannot be stored.\n- See also: \tnumdiag dfp positive conjugate unit lbfgs\nlennard"
  },
  "option-lennard": {
    "prefix": "option-lennard",
    "body": "lennard",
    "description": "- Format: \tlennard <epsilon> <zero> <esff> <combine/geometric/product> <m> <n> <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <type_of_bond>\n\t<kcal/kjmol> <ener/grad> <all> <scale14>\n\tatom1 atom2 (A B/epsilon sigma) <rmin> rmax <2*flags>\n\n\tIf combination rules are specified then the format is:\n\tatom1 atom2 <rmin> rmax\n\n\tIf combination rules and \"all\" are specified then the format is:\n\t<rmin> rmax\n\nUnits \tA in ev*Angs**m, B in ev*Angs**n, epsilon in eV, sigma in Angs\n- Default: \tm=12, n=6\n- Use: \tLennard-Jones potential - optimisation flags for fitting.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = A/r**m - B/r**n\n\n\tThe exponents are by default 12 and 6, but these can be changed\n\tby specifying values after the option word lennard. By specifying\n\tepsilon after lennard this means that the input is in terms of\n\tepsilon and sigma instead of A and B.\n\n\tE = epsilon*(c1*(sigma/r)**m - c2*(sigma/r)**n)\n\n\tSpecifying \"zero\" allows the user to chose between sigma defined\n\tas the potential energy minimum distance (default) or the distance\n\tat which the potential energy goes to zero.\n\n\tr = sigma => E = epsilon\n\n\tc1 = (n/(m-n))\n\tc2 = (m/(m-n))\n\n\tr = sigma => E = zero\n\n\tc1 = (n/(m-n))*(m/n)**(m/(m-n))\n\tc2 = (m/(m-n))*(m/n)**(n/(m-n))\n\n\tIf combine is specified as well as epsilon, then combination rules\n\tare used to obtain the epsilon and sigma parameters based on the\n\tvalues for individual species. The combination rules are as follows:\n\n\tepsilon = 2*sqrt(e1*e2)(s1**3.s2**3)/(s1**6+s2**6)\n\tsigma = ((s1**6+s2**6)/2)**1/6\n\n\twhere e1, e2, s1 and s2 are the atom related parameters.\n\n\tAlternatively, if geometric combination rules are specified then\n\tthis becomes:\n\n\tepsilon = sqrt(e1*e2)\n\tsigma = (s1+s2)/2\n\n\tAs a further alternative, if product combination rules are specified\n\tthen this becomes:\n\n\tepsilon = sqrt(e1*e2)\n\tsigma = sqrt(s1*s2)\n\n\tIf combine is specified for a standard lennard-jones potential\n\tthen the species values given in the \"atomab\" command are used\n\tto obtain potential parameters using the following rules:\n\n\tAij = sqrt(Ai.Aj)\n\tBij = sqrt(Bi.Bj)\n\n\tIf esff is specified then this implies that the ESFF combination\n\trules will be used to calculate the potential parameters. This\n\tautomatically implies \"combine\" and that the functional form is\n\t9/6. The parameters are then obtained from epsilon and sigma as\n\tfollows:\n\n\tAij = Ai.Bj + Aj.Bi\n\tBij = 3 * Bi.Bj\n\n\twhere Ai = sqrt(epsilon)*sigma**6\n\tBi = sqrt(epsilon)*sigma**3\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\n\tIf \"all\" is specified as a sub-option, then Lennard-Jones potentials\n\twill be automatically created and added for all combinations of A/B\n\tor epsilon/sigma, as appropriate. NB: This will be done based on the\n\tvalues that have been specified up to that point and so be sure to get\n\tthe order right! In this case, the line following should only have the\n\trmin and rmax to be used for all the potentials.\n\n\te.g.\n\tlennard 12 6 combine all\n\t0.0 12.0\n\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tepsilon atomab c6 buffered_lj\nlibrary"
  },
  "option-library": {
    "prefix": "option-library",
    "body": "library",
    "description": "- Format: \tlibrary name_of_library <nodump>\n- Use: \tAllows the user to access libraries of existing interatomic\n\tpotentials. If the word \"nodump\" is included then all the\n\tpotentials selected from the library will be excluded\n\tfrom the dumpfile, otherwise they are included and the\n\tlibrary call removed.\n\tNB If including a keyword line in the library file then this\n\tshould precede the options to guarantee correct processing\n- See also: \tlibff libdump preserve_Q\nlin3"
  },
  "option-lin3": {
    "prefix": "option-lin3",
    "body": "lin3",
    "description": "- Format: \tlin3 <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K isign n <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3)\n\t<rmin(2-3)> rmax(2-3) <flag>\nUnits \tK in eV, rmin and rmax in Angstroms\n- Default: \tnone\n- Use: \tESFF linear three-body form :\n\n\tE(three) = K * (1 + isign*cos(n*theta))\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \taxilrod-teller angle stillinger-weber exponential bcross\n\turey-bradley murrell-mottram bacross three hydrogen-bond equatorial\n\tuff3 3coulomb bagcross\nline"
  },
  "option-line": {
    "prefix": "option-line",
    "body": "line",
    "description": "- Format: \tinteger number\n- Default: \t10\n- Use: \tChanges the maximum number of points in the line minimisation.\n\tNumber may appear on same line as command or the following line.\nljbuffered"
  },
  "option-ljbuffered": {
    "prefix": "option-ljbuffered",
    "body": "ljbuffered",
    "description": "- Format: \tljbuffered <m> <n><intra/inter> <bond/x12/x13/x14/o14/g14/mol> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 A B r0 <rmin> rmax <3*flags>\nUnits \tA in eV*Angs**m, B in eV*Angs**n, r0 in Angs\n- Default: \tm = 12, n = 6, r0 = 0.0\n- Use: \tBuffered Lennard-Jones potential, where r0 is added to the distance.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = A/(r + r0)**m - B/(r + r0)**n\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\nlorentzian_tolerance"
  },
  "option-lorentzian_tolerance": {
    "prefix": "option-lorentzian_tolerance",
    "body": "lorentzian_tolerance",
    "description": "- Default: \t0.01\n- Use: \tThis option controls the drop tolerance for the Lorentzian\n\tbroadening that is used during a thermal conductivity\n\tcalculation. If the Lorentzian is below the input threshold\n\tthen it is set to zero.\n\n\te.g. lorent 0.001\n\n- See also: \tphonon thermalconductivity broaden_dos\nlowest_mode"
  },
  "option-lowest_mode": {
    "prefix": "option-lowest_mode",
    "body": "lowest_mode",
    "description": "- Format: \tlowest_mode minimum_mode_number <maximum_mode_number>\nUnits \tNone\n- Use: \tSets the lowest mode and optionally the highest mode\n\tnumber to be used in the calculation of the free energy.\n\tAllows the user to select a band of frequencies whose\n\tvalue is to be used in the calculation of the vibrational\n\tcomponent of the free energy.\n\n\te.g. lowest 4 9\n\n- See also: \tfree zsisa\nmanybody"
  },
  "option-manybody": {
    "prefix": "option-manybody",
    "body": "manybody",
    "description": "- Format: \tmanybody\n\tatom1 atom2 <taper_range> <rmin> rmax\n- Default:s \trmin = 0, taper_range = 0\n- Use: \tSpecifies that a manybody potential should act between this\n\tpair of atoms. This implies that the density of each atom\n\tat the other will be calculated. The energy is subsequently\n\tcalculated as a function of the total density at each site.\n\tThis option is used as part of the Embedded Atom Model for\n\tmetals and is based on the ideas of Finnis-Sinclair and\n\tsubsequently other workers, such as Sutton-Chen.\n\n\tThe densities at each site are determined by the \"eam_density\"\n\toption and the functional dependance on the total density\n\tby \"eam_functional\".\n\n\tNote that although for simplicity the manybody potential\n\tappears as part of the two-body potentials, it is infact\n\tmany body at short-range, but tends to an effective pair\n\tpotential at long range. Also note that this potential type\n\tis NOT compatible with <intra/inter/molmec> directives.\n\n\tThe density can be smoothly tapered to zero over a distance\n\twhich is input using the taper_range. Here the taper applies\n\tfrom (rmax - taper_range) to rmax. In most MEAM potentials\n\tthe typical range used is 0.1 Angstroms.\n\n\tThe form of the taper used for the density is chosen to be\n\tconsistent with the MEAM literature:\n\n\tfcut(x) = 1, for x >= 1\n\t= 0, for x =< 0\n\t= [1 - (1-x)**4]**2, for 0 < x < 1\n\n\twhere x = (rmax - r)/taperrange\n\n- See also: \team_density eam_functional scmaxsearch noquicksearch\nmarvin"
  },
  "option-marvin": {
    "prefix": "option-marvin",
    "body": "marvin",
    "description": "- Use: \tAllows a section of text to be inserted into a marvin input file\n\tby surrounding text by \"marvin\" before the first line and \"end\"\n\tafter the last line.\n- See also: \toutput\nmass"
  },
  "option-mass": {
    "prefix": "option-mass",
    "body": "mass",
    "description": "- Format: \tmass symbol <mass>\nUnits \tatomic units\n- Default: \tas per periodic table\n- Use: \tAllows atomic masses to be changed. Note that species symbols can\n\talso be used for the mass to set different masses for different\n\tspecies of the same element:\n\n\telement\n\tmass O1 16.0\n\tmass O2 17.0\n\tend\n\n\tor the older form of using the atomic number can be used:\n\n\telement\n\tmass 8 16.0\n\tend\n\n\tCommand is part of element section.\n- See also: \telement\nmaths"
  },
  "option-maths": {
    "prefix": "option-maths",
    "body": "maths",
    "description": "- Format: \tmaths <eispack/lapack> <nodivide>\n- Default: \tlapack with divide and conquer\n- Use: \tSelects whether to use the Eispack or Lapack maths libraries\n\tfor finding the eigenvectors/eigenvalues of the dynamical\n\tmatrix. When compiled from source the Eispack library appears\n\tto be significantly faster than straight Lapack, but if an\n\toptimised maths library is linked instead of lapack.o/blas.o\n\tthen this may not be the case. However, the divide and conquer\n\tform of Lapack is faster than Eispack and so this is now the\n\tdefault. There is the chance of some loss of precision, and so\n\tthe other options are there for validation purposes.\n- See also: \tphonon matrix_format blocksize\nmatrix_format"
  },
  "option-matrix_format": {
    "prefix": "option-matrix_format",
    "body": "matrix_format",
    "description": "- Format: \tmatrix_format <hessian/cosmo> <triangular/twodimensional>\n- Default: \ttriangular in serial; twodimensional in parallel\n- Use: \tThe Hessian matrix and the COSMO A matrix are symmetric matrices and\n\ttherefore can be stored and used in either triangular or two-dimensional\n\tform. For serial runs either format can be used with the more compact\n\ttriangular form being the default. In parallel then the two-dimensional\n\tform must be used for compatibility with the parallel maths libraries used.\n\tThis option is mainly for debugging and checking purposes.\n- See also: \thessian cosmo\nmaxcyc"
  },
  "option-maxcyc": {
    "prefix": "option-maxcyc",
    "body": "maxcyc",
    "description": "- Format: \tmaxcyc <opt/fit> <integer value>\nUnits \tnone\n- Default: \t1000 for optimisation\n\t500*(no. parameters) for fitting\n- Use: \tMaximum number of function calls.\n\tValue may appear on same line as option or on the following line.\n\tIf opt/fit is not supplied then value is applied to both.\n- See also: \tstepmx optimise\nmaximise"
  },
  "option-maximise": {
    "prefix": "option-maximise",
    "body": "maximise",
    "description": "- Format: \tmaximise <mode/order> n\n\tsecondary word, either \"mode\" or \"order\" followed by integer number\n- Use: \tControls the action of the rfo optimiser for transition state\n\tcalculations.\n\tmode n => find transition state along mode number <n> of Hessian\n\torder m => find transition state of order <m>\n\tUse of mode implies that the order must be one.\n- See also: \toptimise rfo transition_state\nmaximum"
  },
  "option-maximum": {
    "prefix": "option-maximum",
    "body": "maximum",
    "description": "- Format: \tmaximum <no._to_set>=N\n\t<variables_to_be_set>xN\n\t<maximum_value>xN\n- Default: \tTwice initial value.\n- Use: \tPart of genetic options section. Specifies the maximum allowed\n\tvalue of a given parameter.\n- See also: \tgenetic\nmcchemicalpotential"
  },
  "option-mcchemicalpotential": {
    "prefix": "option-mcchemicalpotential",
    "body": "mcchemicalpotential",
    "description": "- Format: \tmcchemicalpotential chemical_potential\n- Default: \t0.0\nUnits \teV\n- Use: \tSpecifies the target chemical potential of the system for\n\ta Grand Canonical Monte Carlo run. Controls the probability\n\tfor creation and destruction moves being accepted.\nExample \tmcchemicalpotential -1.00\n- See also: \tmccreate mcdestroy mctrial montecarlo gcmcspecies mcvolume\nmccreate"
  },
  "option-mccreate": {
    "prefix": "option-mccreate",
    "body": "mccreate",
    "description": "- Format: \tmccreate probability\n- Default: \t0.0\nUnits \tNone\n- Use: \tSpecifies the relative probability of an atom being created\n\tduring a Monte Carlo simulation. Note all probabilities are\n\trenormalised at run time. A value of zero means that atoms\n\twill not be created.\nExample \tmccreate 0.25\n- See also: \tmcdestroy mcmove mcrotate mctrial montecarlo mcswap\nmcdestroy"
  },
  "option-mcdestroy": {
    "prefix": "option-mcdestroy",
    "body": "mcdestroy",
    "description": "- Format: \tmcdestroy probability\n- Default: \t0.0\nUnits \tNone\n- Use: \tSpecifies the relative probability of an atom being destroyed\n\tduring a Monte Carlo simulation. Note all probabilities are\n\trenormalised at run time. A value of zero means that atoms\n\twill not be destroyed. Note when an atom in a molecule is\n\tdestroyed, then so is the whole molecule.\nExample \tmcdestroy 0.25\n- See also: \tmccreate mcmove mcrotate mcstrain mctrial montecarlo mcswap\nmclowest"
  },
  "option-mclowest": {
    "prefix": "option-mclowest",
    "body": "mclowest",
    "description": "- Format: \tmclowest lowest_energy\n- Default: \tNone\nUnits \tlowest_energy in eV\n- Use: \tSpecifies the running lowest value of the energy encountered\n\tso far in the run. This value is only for restarting purposes.\nExample \tmclowest -1140.6883129\n- See also: \tmcstep mctrial montecarlo mcmeans\nmcmaxdisplacement"
  },
  "option-mcmaxdisplacement": {
    "prefix": "option-mcmaxdisplacement",
    "body": "mcmaxdisplacement",
    "description": "- Format: \tmcmaxdisplacement <maxdisplacement> <target ratio <frequency>>\n- Default: \t0.05 / no target ratio\nUnits \tAngstroms\n- Use: \tSpecifies the maximum Cartesian displacement that can be applied\n\tin a translation trial step. If the \"target\" suboption is used\n\tthen the maximum displacement is gradually adjusted to try to\n\tachieve the specified acceptance ratio for translation. The\n\tfrequency of adjustment can also be specified.\nExamples \tmcmaxdisplacement 0.1\n\tmcmaxdisplacement 0.05 target 0.5 20\n- See also: \tmcmove montecarlo\nmcmaxrotation"
  },
  "option-mcmaxrotation": {
    "prefix": "option-mcmaxrotation",
    "body": "mcmaxrotation",
    "description": "- Format: \tmcmaxrotation <maxrotation> <target ratio <frequency>>\n- Default: \t180 / no target ratio\nUnits \tDegrees\n- Use: \tSpecifies the maximum angle of rotation that can be applied\n\tin a trial step. If the \"target\" suboption is used\n\tthen the maximum rotation is gradually adjusted to try to\n\tachieve the specified acceptance ratio for rotation. The\n\tfrequency of adjustment can also be specified.\nExamples \tmcmaxrotation 90\n\tmcmaxrotation 180 target 0.5 20\n- See also: \tmcrotate montecarlo\nmcmaxstrain"
  },
  "option-mcmaxstrain": {
    "prefix": "option-mcmaxstrain",
    "body": "mcmaxstrain",
    "description": "- Format: \tmcmaxstrain <maxstrain> <target ratio <frequency>>\n- Default: \t0.1 / no target ratio\nUnits \tDimensionless\n- Use: \tSpecifies the maximum strain that can be applied in a strain\n\ttrial step. Note that a strain step of more than 1.0 is not allowed\n\tsince this would allow the cell to go to zero in a single step.\n\tSmall values are more sensible. If the \"target\" suboption is used\n\tthen the maximum strain is gradually adjusted to try to\n\tachieve the specified acceptance ratio for strain. The\n\tfrequency of adjustment can also be specified.\nExamples \tmcmaxstrain 0.01\n\tmcmaxstrain 0.15 target 0.5 30\n- See also: \tmcstrain montecarlo\nmcmeans"
  },
  "option-mcmeans": {
    "prefix": "option-mcmeans",
    "body": "mcmeans",
    "description": "- Format: \tmcmeans mean_energy mean_number_of_atoms\n- Default: \tNone\nUnits \tmean_energy in eV\n- Use: \tSpecifies the running mean of the energy and number of\n\tatoms. This must be consistent with the number of MC\n\tsteps so far given by mcstep and is used to restart a\n\tMonte Carlo job.\nExample \tmcmeans -3.45155 4.059\n- See also: \tmcstep mctrial montecarlo mclowest\nmcmove"
  },
  "option-mcmove": {
    "prefix": "option-mcmove",
    "body": "mcmove",
    "description": "- Format: \tmcmove probability\n- Default: \t1.0\nUnits \tNone\n- Use: \tSpecifies the relative probability of an atom being translated\n\tduring a Monte Carlo simulation. Note all probabilities are\n\trenormalised at run time. A value of zero means that atoms\n\twill not be translated. When an atom in a molecule is chosen\n\tfor translation, then the whole molecule is translated.\nExample \tmcmove 0.25\n- See also: \tmccreate mcdestroy mcrotate mctrial montecarlo mcstrain mcswap\nmcoutfreq"
  },
  "option-mcoutfreq": {
    "prefix": "option-mcoutfreq",
    "body": "mcoutfreq",
    "description": "- Format: \tmcoutfreq\n- Default: \t100\nUnits \tNone\n- Use: \tSpecifies the frequency for printing the running averages to\n\tthe output. The value is specified as the number of trial\n\toperations between outputs.\nExample \tmcoutfreq 1\n- See also: \tmcsample montecarlo\nmcrotate"
  },
  "option-mcrotate": {
    "prefix": "option-mcrotate",
    "body": "mcrotate",
    "description": "- Format: \tmcrotate <atom/line/centre> probability\n- Default: \t0.0 / centre\nUnits \tNone\n- Use: \tSpecifies the relative probability of a molecule being rotated\n\tduring a Monte Carlo simulation. Note all probabilities are\n\trenormalised at run time. A value of zero means that molecules\n\twill not be rotated.\n\tThe sub-options atom, line and centre control the point about\n\twhich the molecule will be rotated, and in the case of line the\n\taxis direction. For the default mode, centre, the molecule is\n\trotated about the centre of the molecule based on the average\n\tcoordinate. For atom, a random atom from within the molecule\n\tis chosen and then the rotation attempted about this. For line,\n\ttwo atoms are chosen at random and the rotation attempted about\n\tthis axis. If more than one word is specified then all types of\n\trotation specified will be tried according to a random choice.\nExample \tmcrotate 0.25\n- See also: \tmccreate mcdestroy mcmove mctrial mcmaxrotation montecarlo\n\tmcstrain mcswap\nmcsample"
  },
  "option-mcsample": {
    "prefix": "option-mcsample",
    "body": "mcsample",
    "description": "- Format: \tmcsample <frequency> <filename> <lowest>\n- Default: \t10 / gulp.gmc\nUnits \tNone\n- Use: \tSpecifies the frequency for outputting configuration data to\n\ta binary file for post-run analysis. The value is specified\n\tas the number of accepted operations between writes. The\n\tfilename can be anything with up to 60 characters. The\n\textension \".gmc\" is recommend as a convention.\n\n\tThe format of the file is as follows. Each configuration is\n\twritten as follows:\n\n\twrite(31)numat\n\twrite(31)energy\n\twrite(31)(atomicno(i),i=1,numat)\n\twrite(31)(atomictype(i),i=1,numat)\n\twrite(31)(xcoordinate(i),i=1,numat)\n\twrite(31)(ycoordinate(i),i=1,numat)\n\twrite(31)(zcoordinate(i),i=1,numat)\n\n\twhere the variables are as follows :\n\n\tinteger(i4) numat = total number of atoms\n\tinteger(i4) atomicno = atomic number of atom (1-maxele)\n\tinteger(i4) atomictype = atomic type of atom (0-9999)\n\treal(dp) energy = total energy of system (eV)\n\treal(dp) xcoordinate = Cartesian coord in X direction (Angs)\n\treal(dp) ycoordinate = Cartesian coord in Y direction (Angs)\n\treal(dp) zcoordinate = Cartesian coord in Z direction (Angs)\n\n\tand the datatypes are given by :\n\n\tinteger, parameter :: i4 = selected_int_kind(9)\n\tinteger, parameter :: dp = kind(1.0d0)\n\nExample \tmcsample 5 montesamples.gmc\n- See also: \tmontecarlo mcoutfreq\nmcstep"
  },
  "option-mcstep": {
    "prefix": "option-mcstep",
    "body": "mcstep",
    "description": "- Format: \tmcstep first_step number_of_accepted_steps_so_far\n- Default: \t1\nUnits \tNone\n- Use: \tSpecifies the first step for a Monte Carlo restart and the\n\tnumber of accepted steps so far. The former number must\n\tbe consistent with the mean properties given and the second\n\tone must obviously be smaller than the first.\nExample \tmcstep 50 24\n- See also: \tmcmeans mctrial montecarlo mclowest\nmcstrain"
  },
  "option-mcstrain": {
    "prefix": "option-mcstrain",
    "body": "mcstrain",
    "description": "- Format: \tmcstrain probability\n- Default: \t0.0\nUnits \tNone\n- Use: \tSpecifies the relative probability of the cell being strained\n\tduring a Monte Carlo simulation. Note all probabilities are\n\trenormalised at run time. A value of zero means that the cell\n\twill not be strained.\nExample \tmcstrain 0.25\n- See also: \tmccreate mcdestroy mcrotate mctrial montecarlo mcmove\n\tmcmaxstrain mcswap\nmcswap"
  },
  "option-mcswap": {
    "prefix": "option-mcswap",
    "body": "mcswap",
    "description": "- Format: \tmcswap <any/only> probability <npair> <species list>\n- Default: \t0.0 / any / 1 pair\nUnits \tNone\n- Use: \tSpecifies the relative probability of ions being swapped during\n\ta Monte Carlo simulation. Note all probabilities are renormalised\n\tat run time. A value of zero means that no swapping will be attempted.\n\tThe suboptions control what species can be switched. If any is specified\n\tthen all atoms can be swapped. However, if only is specified a list of\n\tspecies that can be swapped must be given. Note: Only swaps between\n\tdifferent species will be considered since otherwise the energy is\n\tinvariant. Furthermore, swaps involving atoms in molecules are not\n\tallowed. Swapping involving species with shells should also be avoided\n\tfor now since the core/shell pair may get split.\n\tnpair specifies the number of pairs of atoms to be swapped as part of\n\ta single attempted move. By default only 1 pair will be swapped.\n\tMultiple mcswap options are allowed so that different groups of atoms\n\tcan be swapped in the same structure.\nExample \tmcswap 0.25\n\tmcswap only 0.25 2 Mg Ca\n- See also: \tmccreate mcdestroy mcrotate mctrial montecarlo mcmove\n\tmcmaxstrain mcstrain\nmctrial"
  },
  "option-mctrial": {
    "prefix": "option-mctrial",
    "body": "mctrial",
    "description": "- Format: \tmctrial number_of_trials\n- Default: \t0\nUnits \tNone\n- Use: \tSpecifies the total number of attempted trial operations in a\n\tMonte Carlo simulation.\n- See also: \tmontecarlo mccreate mcdestroy mcmove mcrotate mcstep mcswap\nmcvolume"
  },
  "option-mcvolume": {
    "prefix": "option-mcvolume",
    "body": "mcvolume",
    "description": "- Format: \tmcvolume volume\n- Default: \tunit cell volume\nUnits \tAngstroms**3\n- Use: \tSpecifies the volume that is used in a Grand Canonical Monte\n\tCarlo calculation to determine the creation/destruction\n\tprobability. If not specified, the volume of the unit cell is\n\tused.\n- See also: \tmontecarlo mcchemicalpotential\nmdarchive"
  },
  "option-mdarchive": {
    "prefix": "option-mdarchive",
    "body": "mdarchive",
    "description": "- Format: \tmdarchive <unique> file_name\n- Use: \tSpecifies name of archive file for molecular dynamics run. This file\n\tis in MSI's archive file format and can be read by Insight II.\n\tIf this option is given the current structure is written to the\n\tspecified file with the frequency specified using 'write'. Note\n\tit is also necessary to specify the \"output arc\" option to trigger\n\tthe writing of an arc file.\n\tIf the \"unique\" sub-option is specified then the atom symbols will\n\tbe appended with the atom number (within what is allowed by the\n\tarchive file format) to create different labels for analysis.\n- See also: \tmd write output\nmdmaxtemp"
  },
  "option-mdmaxtemp": {
    "prefix": "option-mdmaxtemp",
    "body": "mdmaxtemp",
    "description": "- Format: \tmdmaxtemp scale_factor\n- Default: \t100.0\n- Use: \tThis option allows MD runs where the temperature is exploding\n\tfor one reason or another to be trapped and terminated. When\n\tthe temperature exceeds the target temperature by a factor of\n\tgreater than the number specified then the run will stop.\n\tIf this occurs then common causes are that the timestep is\n\ttoo long, the structure was in a high energy state to start with\n\tand the potential can't be dissipated fast enough, the thermostat\n\tparameter is unsuitable, or that there are discontinuities or\n\tother flaws in the potential energy surface input. Another common\n\tcause is that the system size being used is too small leading to\n\tlarge fluctuations in the ensemble averages.\n- See also: \tmd temperature mdmaxvolchange\nmdmaxvolume"
  },
  "option-mdmaxvolume": {
    "prefix": "option-mdmaxvolume",
    "body": "mdmaxvolume",
    "description": "- Format: \tmdmaxvolume scale_factor\n- Default: \t100.0\n- Use: \tThis option allows MD runs where the unit cell volume is exploding\n\tfor one reason or another to be trapped and terminated. When\n\tthe volume exceeds the initial volume by a factor of\n\tgreater than the number specified then the run will stop.\n\tIf this occurs then common causes are that the timestep is\n\ttoo long, the structure was in a high energy state to start with\n\tand the potential can't be dissipated fast enough, the barostat\n\tparameter is unsuitable, or that there are discontinuities or\n\tother flaws in the potential energy surface input. Another common\n\tcause is that the system size being used is too small leading to\n\tlarge fluctuations in the ensemble averages.\n- See also: \tmd temperature mdmaxtemp\nmeam_density"
  },
  "option-meam_density": {
    "prefix": "option-meam_density",
    "body": "meam_density",
    "description": "- Format: \tmeam_density order <power n/fpower/exponential n/gaussian n/cubic/quadratic/quartic/voter/glue/evoter/mei-davenport/baskes/vbo>\n\tatom1 <atom2> C (power law) <1 x flag >\n\tatom1 <atom2> C rn (fractional power law) <2 x flag >\n\tatom1 <atom2> A B r0 (exponential) <3 x flags>\n\tatom1 <atom2> A B r0 (gaussian) <3 x flags>\n\tatom1 <atom2> A r0 (quadratic) <2 x flags>\n\tatom1 <atom2> A r0 (cubic) <2 x flags>\n\tatom1 <atom2> A r0 (quartic) <2 x flags>\n\tatom1 <atom2> A beta (voter) <2 x flags>\n\tatom1 <atom2> A beta (evoter) <2 x flags>\n\tatom1 <atom2> c0 c1 c2 c3 c4 c5 r0 (mei-davenport) <7 x flags>\n\tatom1 <atom2> A beta r0 (baskes) <3 x flags>\n\tatom1 <atom2> c sigma gamma r0 delta (vbo) <5 x flags>\n\tatom1 <atom2> A B C D rmin r0 (spline) <4 x flags>\n\n\tif order > 0 then there will be addition lines of the following form for each higher order\n\n\tC (power law) <1 x flag >\n\tA B r0 (exponential) <3 x flags>\n\tA B r0 (gaussian) <3 x flags>\n\tA r0 (quadratic) <2 x flags>\n\tA r0 (cubic) <2 x flags>\n\tA r0 (quartic) <2 x flags>\n\tA beta (voter) <2 x flags>\n\tA beta (evoter) <2 x flags>\n\tc0 c1 c2 c3 c4 c5 r0 (mei-davenport) <7 x flags>\n\tA beta r0 (baskes) <3 x flags>\n\tc sigma gamma r0 delta (vbo) <5 x flags>\n\n\tNB: The maximum value of order is currently 3\n\nUnits \tDistances in Angstrom\n- Default:s \torder = 3\n- Use: \tspecifies the density due a given atom1 at another\n\tatomic centre (atom2) in the Modified Embedded Atom Model (MEAM).\n\tThis density is only calculated for pairs of atoms\n\twhere the \"manybody\" potential has been specified\n\tso that the user can control which atoms are part\n\tof the EAM.\n\tWhere no atom2 is specified then the density is applied to\n\tall atoms allowed by the manybody potential, regardless of\n\tspecies type.\n\n\tIn the MEAM formalism the density is a sum of contributions over\n\ta number of orders:\n\n\trho_tot(i)**2 = sum(order = 0->3) t_order*rho_order(i)**2\n\n\twhere t is a coefficient for each order.\n\n\tThe radial component of the density can take one of several functional forms:\n\n\tPower Law:\n\n\trho(i) = C*rij**(-n)\n\n\te.g. meam_density 3 power 6\n\tNi core 729.7\n\t429.2\n\t219.5\n\t106.2\n\n\tFractional power Law:\n\n\trho(i) = C*rij**(-rn)\n\n\te.g. meam_density 3 fpower\n\tNi core 729.7 6.1\n\t429.2\n\t219.5\n\t106.2\n\n\tExponential:\n\n\trho(i) = A*(rij**n)*exp(-B(rij-r0))\n\n\te.g. meam_density 0 exponential 0\n\tNi core 500.0 4.0 3.52\n\n\tGaussian:\n\n\trho(i) = A*(rij**n)*exp(-B(rij-r0)**2)\n\n\te.g. meam_density 1 gaussian 2\n\tNi core 400.0 3.0 3.52\n\t200.0 1.5 1.46\n\n\tQuadratic:\n\n\trho(i) = A*(rij-r0)**2 if r < r0, else = 0\n\n\tCubic:\n\n\trho(i) = A*(rij-r0)**3 if r < r0, else = 0\n\n\tQuartic:\n\n\trho(i) = A*(rij-r0)**4 if r < r0, else = 0\n\n\tVoter:\n\n\trho(i) = A*r**6*(exp(-beta*r) + 2**9*exp(-2*beta*r))\n\n\teVoter:\n\n\trho(i) = A*r**6*(exp(-beta*r) + 2**9*exp(-2*beta*r))*exp(-1/(rmax - r))\n\n\tMei-Davenport:\n\n\trho(i) = sum(l=0->5) (c_l/12)*(r/r0)**l\n\n\tBaskes:\n\n\trho(i) = A*exp(-beta((rij/r0)-1))\n\n\te.g. meam_density 1 baskes\n\tN core 1.0 4.0 1.10\n\t1.0 4.0 1.10\n\n\tNB: This form is a re-working of the exponential form for convenience for MEAM.\n\n\tIn the above, rmax is the cutoff for the potential from the manybody\n\toption that controls the range of the density.\n\n\tVBO:\n\n\trho(i) = c*sigma*N*exp(-gamma/(1 - sqrt(r/delta)))\n\n\twhere N is a normalisation constant given by:\n\n\tN = exp(gamma/(1 - sqrt(r0/delta)))\n\n\tNote that the cut-offs are set by the manybody potential.\n\n\tSpline: This is effectively one piece of a cubic spline.\n\n\trho(i) = A*(rij-r0)**3 + B*(rij-r0)**2 + C*(rij-r0) + D if rmin < r < r0, else = 0\n\n- See also: \tmanybody meam_functional scmaxsearch eam_alloy prt_eam eam_density baskes meam_screening\n\tmeam_rhotype\nmeam_functional"
  },
  "option-meam_functional": {
    "prefix": "option-meam_functional",
    "body": "meam_functional",
    "description": "- Format: \tmeam_functional order <square_root/power n/banerjea_smith n/johnson/glue/foiles/mei-davenport/baskes/vbo/spline>\n\n\tif square_root or power :\n\tatom1 A_1 <1*flag>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 A_2 <1*flag> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif banerjea_smith :\n\tatom1 F0_1 F1_1 rho0_1 <3*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 F0_2 F1_2 rho0_2 <3*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif johnson :\n\tatom1 F0_1 F1_1 rho0_1 alpha beta gamma <6*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 F0_2 F1_2 rho0_2 alpha beta gamma <6*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif glue :\n\tatom1 rho1 rho2\n\tc1_4 c1_3 c1_2 c1_1 c1_0\n\tc2_4 c2_3 c2_2 c2_1 c2_0\n\tc3_3 c3_2 c3_1 c3_0\n\tt_0 ... t_order <order+1*flags>\n\tatom2 rho1 rho2\n\tc1_4 c1_3 c1_2 c1_1 c1_0\n\tc2_4 c2_3 c2_2 c2_1 c2_0\n\tc3_3 c3_2 c3_1 c3_0\n\tt_0 ... t_order <order+1*flags>\n\n\tif foiles :\n\tatom1 F0_1 F1_1 F2_1 F3_1 <4*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 F0_2 F1_2 F2_2 F3_2 <4*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif mei-davenport :\n\tatom1 Ec_1 alpha_1 beta_1 gamma_1 delta_1 phi0_1 s_1_1 s_2_1 s_3_1 <9*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 Ec_2 alpha_2 beta_2 gamma_2 delta_2 phi0_1 s_1_2 s_2_2 s_3_2 <9*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif baskes :\n\tatom1 Ec_1 A_1 rho0_1 <3*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 Ec_2 A_2 rho0_2 <3*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif vbo :\n\tatom1 A_1 rn_1 <2*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 A_2 rn_2 <2*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif igarashi :\n\tatom1 A_1 B_1 <2*flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 A_2 B_2 <2*flags> etc...\n\tt_0 ... t_order <order+1*flags>\n\n\tif spline :\n\tatom1 A_1 B_1 C_1 D_1 rho0_1 rho_max_1 <4 x flags>\n\tt_0 ... t_order <order+1*flags>\n\tatom2 A_2 B_2 C_2 D_2 rho0_2 rho_max_2 <4 x flags>\n\tt_0 ... t_order <order+1*flags>\n\nUnits \tA, B, C, D, AE0, F0, Ec, phi0 and F1 in eV, rho0/rho_max/alpha/beta/gamma/t0... are dimensionless\n- Default: \tsquare_root, A = 1.0, order = 3\n- Use: \tSpecifies how the total energy contribution of an atom in the\n\tModified Embedded Atom Model depends on the density components at that\n\tsite. The current possibilities are:\n\n\tSquare_root:\n\n\tE = - sum(i) A(i)*(rho(i))**1/2\n\n\tthis is the most common functional, as used in the Sutton-Chen\n\tpotential\n\n\tPower:\n\n\tE = - sum(i) A(i)*(rho(i))**1/n\n\n\tthis is just a generalisation of the above case\n\n\tVBO:\n\n\tE = - sum(i) A(i)*(rho(i))**rn\n\n\tthis is a further generalisation of the power case\n\n\tBanerjea_smith:\n\n\tE = - sum(i) F0 [1-ln(r)/n]*r**1/n + F1*r\n\n\twhere r = rho(i)/rho0(i)\n\n\tthis is the functional of Banerjea and Smith (Phys. Rev. B,\n\t37, 6632 (1988)) - note that in this case that are atom\n\tdependent parameters also to be specified (F0, F1, rho0)\n\twhere rho0 is the electron density at equilibrium.\n\n\tJohnson:\n\n\tE = - sum(i) F0 [1-ln(x)]*x + F1*y\n\n\twhere x = (rho(i)/rho0(i))**(alpha/beta)\n\tand y = (rho(i)/rho0(i))**(gamma/beta)\n\n\tthis functional is similar to that of Banerjea & Smith and is due\n\tto Johnson (PRB, 39, 12554 (1989)).\n\n\tGlue:\n\n\tif rho < rho1\n\tE = c1_4*(rho-rho1)**4 + c1_3*(rho-rho1)**3 + c1_2*(rho-rho1)**2 +\n\tc1_1*(rho-rho1) + c1_0\n\n\tif rho1 =< rho < rho2\n\tE = c2_4*(rho-rho2)**4 + c2_3*(rho-rho2)**3 + c2_2*(rho-rho2)**2 +\n\tc2_1*(rho-rho2) + c2_0\n\n\tif rho2 =< rho\n\tE = c3_3*(rho-rho2)**3 + c3_2*(rho-rho2)**2 + c3_1*(rho-rho2) + c3_0\n\n\tthis is the functional from Ercolessi et al, Phil. Mag. A, 58, 213 (1988).\n\tNB: At present there are no fitting parameters since there are constraints\n\ton the coefficients to ensure a smooth and continuous function.\n\n\tFoiles:\n\n\tE = sum(i) F0*rho(i)**2 + F1*rho(i) + F2*(rho(i)**(5/3)/(F3 + rho(i)))\n\n\tMei-Davenport:\n\n\tE = sum(i) - Ec*[1-(alpha/beta)*ln(rho(i))]*rho(i)**(alpha/beta) +\n\tsum(m=1->3) 0.5*phi0*s_m*exp(-(sqrt(m)-1)*gamma)*\n\t[1+(sqrt(m)-1)*delta-sqrt(m)*delta*ln(rho(i))/beta]*\n\trho(i)**(sqrt(m)*gamma/beta)\n\n\tBaskes:\n\n\tE = sum(i) A*Ec*x*ln(x)\n\n\twhere x = (rho(i)/rho0(i))\n\n\tthis functional is similar to that of Banerjea & Smith and Johnson, but\n\tis simplified to enable the parameters from the MEAM paper of Baskes to\n\tbe input directly.\n\n\tThe value of order species the maximum order of the MEAM functional. Usually\n\tMEAM involves components from order 0 to 3 and values outside this range are\n\tnot currently permitted.\n\n\tFor all functionals, the values of t_0, t_1, ... t_order are the coefficients\n\tfor the density contribution of each order.\n\n\tIgarashi:\n\n\tE = - sum(i) A(i)*(rho(i)*(1 + B(i)*rho(i))**1/2\n\n\tthis functional form was proposed in Igarashi et al, Phil. Mag. B, 63,\n\t603 (1991).\n\n\tSpline:\n\n\tif rho_max > rho > rho0:\n\n\tE = - sum(i) [A(i)*(rho(i)-rho0)**3 + B(i)*(rho(i)-rho0)**2 + C(i)*(rho(i)-rho0) + D(i)]\n\n\telse\n\n\tE = 0\n\n- See also: \tmeam_density manybody scmaxsearch eam_alloy prt_eam baskes meam_screening\n\tmeam_rhotype\nmeam_rhotype"
  },
  "option-meam_rhotype": {
    "prefix": "option-meam_rhotype",
    "body": "meam_rhotype",
    "description": "- Format: \tmeam_rhotype <t21/t24> <sum/exponential/exphalf>\nUnits \tnone\n- Default: \tt24, exponential\n- Use: \tThere are several different formulations of MEAM that have evolved according\n\tto both the number of angular momentum terms and the way that they are\n\tcombined. They can largely be broken down into the first, nearest-neighbour\n\tform (1NN), and the revised second nearest neighhbour form (2NN).\n\tIn the original formulation there were 21 components of the density\n\twhile later forms adopt 24 (3 extra terms for the order = 3 case). Which form\n\tis used can be selected using the sub-options:\n\n\tt21 = 1NN 21 term expression\n\tt24 = 2NN 24 term expression\n\n\tThere are also two different ways that the total density, rho, can be assembled\n\tfrom the component density orders, rho_i. In the original version, 1NN, a simple\n\tsum of the densities squared, square rooted, was used and this can be selected\n\tby the sub-option, \"sum\":\n\n\trho = sqrt[ sum (i=0->order) (t_i*rho_i**2) ]\n\n\tIn later versions of the methodology (2NN) then a different form was proposed to\n\tavoid issues with the density becoming negative;\n\n\trho = rho_0*G(gamma)\n\n\twhere;\n\n\tG(gamma) = 2/(1 + exp(-gamma))\n\n\tand;\n\n\tgamma = [ sum (i=1->order) (t_i*(rho_i/rho_0)**2) ]\n\n\tThis second form, \"exponential\", is the default choice unless \"sum\" is given.\n\tThere is also an alternative form of exponential that some papers have used\n\tthat can be selected by \"exphalf\":\n\n\tG(gamma) = exp(gamma/2)\n\n- See also: \tmeam_density manybody scmaxsearch eam_alloy prt_eam baskes meam_screening\n\tmeam_functional\nmeam_screening"
  },
  "option-meam_screening": {
    "prefix": "option-meam_screening",
    "body": "meam_screening",
    "description": "- Format: \tmeam_screening\n\tatom1 <atom2 atom3> Cmin Cmax\nUnits \tnone\n- Default: \tNo screening (i.e. simple radial cut-offs applied), atom2 = atom3 = atom1\n- Use: \tControls the truncation of the MEAM density by applying a screening function to\n\tthe pairwise density between two atoms. For a pair of atoms, i-j, the screening\n\tfunction is given by:\n\n\tS_ij = Product(k=1,N,k.ne.i,k.ne.j) S_ikj\n\n\twhere S_ikj is given by the construct described in M.I. Baskes, Mater. Chem. Phys.,\n\t50, 152-158 (1997):\n\n\tS_ikj = f_e(x)\n\n\tf_e(x) = 1 ; x >= 1\n\t= [1 - (1-x)**4]**2 ; 1 > x > 0\n\t= 0 ; x =< 1\n\n\tx = (C - Cmin)/(Cmax - Cmin)\n\n\tC = [2(X_ik + X_jk) - (X_ik - X_jk)**2 - 1]/[1 - (X_ik - X_jk)**2]\n\n\twhere X_ik = (r_ik/r_ij)**2 and X_jk = (r_jk/r_ij)**2\n\n\tIf only a single atom type is input then this is taken to be the\n\tself term. However, when atom2 and atom3 are given then the term\n\tbecomes specific to a trio of atoms with the first atom being the\n\tone that is doing the screening. Note that the order of atoms 2\n\tand 3 does not make any difference.\n\n\tNB: Analytic second derivatives are currently not available when\n\tscreening is turned on.\n\tNB: Prior to version 4.3 there was only a single screening factor\n\tfor all atoms where as it is now species specific.\n- See also: \tmeam_density meam_functional meam_rhotype\nmei-davenport"
  },
  "option-mei-davenport": {
    "prefix": "option-mei-davenport",
    "body": "mei-davenport",
    "description": "- Format: \tmei-davenport <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 phi0 delta gamma r0 <rmin> rmax <4*flags>\nUnits \tphi0 in eV, r0 in Angs and delta & gamma are dimensionless.\n- Default: \tnone\n- Use: \tSpecifies the parameters for the two-body component of the Mei-Davenport\n\tpotential (PRB, 46, 21 (1992)):\n\n\tE_ij = - phi0*(1 + delta*(r/r0 - 1))*exp(-gamma*(r/r0 - 1))\n\n- See also: \team_density eam_functional\nmincell"
  },
  "option-mincell": {
    "prefix": "option-mincell",
    "body": "mincell",
    "description": "- Format: \tmincell minimum_cell_parameter <au>\nUnits \tAngstroms\n- Default: \t0.5 Angstroms\n- Use: \tStops an optimisation if the cell parameter falls below the\n\tspecified allowed value. This prevents the memory rapidly\n\tincreasing due to the number of reciprocal lattice vectors\n\ttending to infinity as the cell parameter(s) go to zero.\n- See also: \trspeed optimise\nminimum"
  },
  "option-minimum": {
    "prefix": "option-minimum",
    "body": "minimum",
    "description": "- Format: \tminimum <no._to_set>=N\n\t<variables_to_be_set>xN\n\t<minimum_value>xN\n- Default: \t0.0\n- Use: \tPart of genetic options section. Specifies the minimum value\n\tallowed in the fitting procedure.\n- See also: \tgenetic\nmm3angle"
  },
  "option-mm3angle": {
    "prefix": "option-mm3angle",
    "body": "mm3angle",
    "description": "- Format: \tmm3angle <nbeq/nbne nbond> <intra/inter> <bond/mol> <kcal/kjmol/degree>\n\tatom1 atom2 atom3 k2 theta0 A B C D E <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3) &\n\t<rmin(2-3)> rmax(2-3) <7 flags>\nUnits \tk2 in eVrad**-2, B in rad**-1, C in rad**-2, D in rad**-3, E in rad**-4\n\tA is unitless, theta0 in degrees, rmin & rmax in Angs\n- Default: \tA = 0.021914, B = 0.014, C = 5.6, D = 7.0, E = 9.0\n- Use: \tThree-body angle bending potential about atom1 in MM3 form. k2 is the force\n\tconstant and theta0 the equilibrium angle. The other constants control the\n\thigher order angular terms. Optional flags are for fitting. Atom 1 is\n\tthe middle atom of the triad about which the force acts.\n\n\tE(three) = (A*k2*(theta-theta0)^2)*[1-B*(theta-theta0) + C*10^-5*(theta-theta0)^2\n\t- D*10^-7*(theta-theta0)^3 + E*10^-10*(theta-theta0)^4]\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2 and 1-3 are bonded.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\tThe order of the bond type options matches the order of the pivot atom\n\t- end atom pairs. For example, if a potential acts for the triad\n\tS - C - O, where the C-S bond is a regular bond and the C-O is an\n\texocyclic double bond then the input would look like:\n\n\tmm3angle bond single regular double exocyclic\n\tC core S core O core ...... etc\n\n\tConditions can also be placed on a potential to check the number of bonds\n\tassociated with the pivot atom (e.g. if a potential is designed for a 90\n\tdegree angle it might be necessary to check that the number of bonds is\n\tfour or six for square planar or octahedral). The conditions are placed\n\tusing one or more instances of \"nbeq\" or \"nbne\" followed by an integer.\n\tHere \"nbeq\" imples no. of bonds must equal and \"nbne\" number of bonds must\n\tnot equal. Hence, \"nbeq 4\" would require the pivot to have 4 bonds. When\n\tmultiple terms are used, the logic of nbeq is concatenated with \"or\", whereas\n\tthat of nbne is joined by \"and\". Therefore \"nbne 4 nbne 6\" would apply to\n\tan atom with 3 bonds, but not one with 4 or 6.\n\n\tNB It's important to specify the first bond as being of \"regular\" type so\n\tthat the \"exocyclic\" attribute is correctly assigned to the second bond\n\tsince the first term is assumed to apply to the first bond, whereas the\n\tsecond applies to the second bond.\n\n- See also: \taxilrod-teller angle stillinger-weber exponential bcross uff3\n\turey-bradley murrell-mottram bacross lin3 hydrogen-bond equatorial\n\t3coulomb exp2 bagcross three\nmm3buck"
  },
  "option-mm3buck": {
    "prefix": "option-mm3buck",
    "body": "mm3buck",
    "description": "- Format: \tmm3buck <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond> <all>\n\tatom1 atom2 A B C epsilon rv <rmin> rmax <5*flags>\n\n\tor\n\n\tmm3buck combine <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tatom1 atom2 A B C <rmin> rmax <3*flags>\n\n\tor\n\n\tmm3buck combine all <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tA B C <rmin> rmax <3*flags>\nUnits \tA, B and C are unitless, epsilon in eV, rv in Angs\n\tIf kcal is given : epsilon in kcal, rv in Angs\n\tIf kjmol is given: epsilon in kJmol-1, rv in Angs\n- Default: \tnone\n- Use: \tMM3 form of Buckingham potential\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = epsilon*[A.exp(-B*r/rv) - C*(rv/r)**6]\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n\tIf \"combine\" is given as a sub-option then combination rules are used\n\tto compute the epsilon/sigma values based on the atomic values:\n\n\tepsilon = sqrt(e1*e2)\n\tsigma = (s1+s2)/2\n\n\tIf \"all\" is specified as a sub-option, then mm3buck potentials\n\twill be automatically created and added for all combinations of\n\tepsilon/sigma. NB: This will be done based on the values that\n\thave been specified up to that point and so be sure to get the\n\torder right! In this case, the line following should only have\n\tthe rmin and rmax to be used for all the potentials.\n\n- See also: \tc6 buckingham epsilon slater\nmm3stretch"
  },
  "option-mm3stretch": {
    "prefix": "option-mm3stretch",
    "body": "mm3stretch",
    "description": "- Format: \tmm3stretch <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 k2 r0 <A B C> <coul> <rmin> rmax <5*flags>\nUnits \tk2 in eV*Angs**-2, r0 in Angs, A and coul are unitless, B and C in Angs**-1\n- Default:s \tcoul = 0.0, A = 71.94, B = 2.55, C = 7/12\n- Use: \tMM3 bond stretching potential\n\tcoul = 1.0 => Coulomb subtracted\n\tcoul = 0.0 => not Coulomb subtracted\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = A*(K2*(r-r0)**2)*[1 - B*(r-r0)*(1 - C*B*(r-r0))]\n\n\tFor MM3 the values of A, B and C are constants equal to the default values.\n\n\tNB: The second B in the equation (to give B^2 in the quartic term) is missing\n\tin the original MM3 paper, but is added in the later literature.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tspring squaredharmonic forceconstant harm\nmode"
  },
  "option-mode": {
    "prefix": "option-mode",
    "body": "mode",
    "description": "- Format: \tmode\n\tvalue <kpoint_number> <weight>\n\te1x e1y e1z\n\te2x e2y e2z\n\t: : :\n\teNx eNy eNz\nUnits \tcm-1\n- Use: \tSubsection of observables, used for specifying vibrational modes for\n\tfitting to. This option differs from frequency in that instead of\n\tsupplying the mode number the eigenvectors for the modes are given.\n\tGULP will then project all modes on to the eigenvectors and fit the\n\tmode frequency with maximal overlap. This is mainly useful for fitting\n\tab initio vibrational data. Here e1x denotes the x vibrational eigenvector\n\tcomponent for atom 1, etc, up to the Nth atom. In the output of fitting\n\tthe overlap with the mode is given in the comparison of initial and final\n\tvalues.\n\tThe second number after the frequency is optionally the k point number\n\tto fit at with reference to the k point list for the present\n\tconfiguration. Only currently implemented for real eigenvectors at\n\tpresent and so only the gamma point should be used.\n\tNB: The number of atoms whose eigenvectors are input corresponds to the\n\tnumber of fully occupied core sites (as only these have vibrations).\n\tCare must be taken when using shells or sites with multiple partial\n\toccupancies.\n\tNB: It is NOT recommended to use this option with relaxed fitting.\n\tThis is because optimisation will cause the frame of reference for the\n\tsystem to change and so the projection may not be valid.\n\tNB: It is important that the order of the atoms in the eigenvector list\n\tmatches that the GULP uses after the input is read in. Note that GULP\n\tcan sometimes change the order of the input atoms, though since usually\n\tthis only involves placing cores at the start and shells at the end\n\tthen this wouldn't alter the ordering of core eigenvector atoms.\n- See also: \tobservables elastic phonon piezoelectric sdlc hfdlc weight frequency\nmode2a"
  },
  "option-mode2a": {
    "prefix": "option-mode2a",
    "body": "mode2a",
    "description": "- Default: \t1\n- Use: \tThe displacements in region 2a can be calculated by a number of\n\tdifferent approximations to the force acting on the region 2a\n\tions. Five modes are available at the moment for this purpose:\n\t1 => use electrostatic force of region 1 screened by dielectric\n\tconstant\n\t2 => use electrostatic force of region 1 screened by dielectric\n\tconstant, but neglecting contribution to derivatives of\n\tregion 1\n\t3 => use electrostatic force of defects screened by dielectric\n\tconstant\n\t4 => use electrostatic force of defects screened by dielectric\n\tconstant, but neglecting contribution to derivatives of\n\tregion 1\n\t5 => consider interaction of region 2a only with defects\n\n\tBy default the program uses method 4 for charged defects as this\n\toffers the best compromise between accuracy and computational effort.\n\tIt is recommended that a comparison is made with mode2a=1 as a check.\n\tFor optimisation the most efficient approach could be to optimise\n\tfirst with a higher mode and then restart in mode 1.\n- See also: \tdefect centre region_1 move_2a_to_1 noanisotropic_2b\n\tvacancy interstitial impurity noanisotropic gdcrit\n\tbulk_noopt\nmomentum_correct"
  },
  "option-momentum_correct": {
    "prefix": "option-momentum_correct",
    "body": "momentum_correct",
    "description": "- Format: \tmomentum_correct natom_equilibration <natom_production>\n- Default: \tAll moving atoms to be corrected during both phases\nUnits \tNone\n- Use: \tBy default linear momentum is removed during both equilibration\n\tand production. This option allows the user to restrict the\n\tcorrection to a subset of atoms that come first in the input\n\tdeck, either during equilibration or production, or both.\n\tFor example, if the system consists of 100 atoms and all atoms\n\tshould have their momenta corrected during equilibration, but\n\tonly the first 10 atoms need to be corrected during production\n\tthen the input would be:\n\n\tmomentum_correct 100 10\n\n- See also: \tmd timestep equilibration production temperature\n\ttscale write nolist delay_force end_force sample\nmonopoleq"
  },
  "option-monopoleq": {
    "prefix": "option-monopoleq",
    "body": "monopoleq",
    "description": "- Format: \tmonopoleq <n>\n\ti Qi <weight>\nUnits \tatomic units\n- Default: \tno monopole charges to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tcharges for fitting. Note that i is the\n\tatom number in the unit cell, not the asymmetric unit.\n\n\tExample:\n\n\tmonopoleq 1\n\t1 1.95\n\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq qreaxff\nmorse"
  },
  "option-morse": {
    "prefix": "option-morse",
    "body": "morse",
    "description": "- Format: \tmorse <intra/inter> <bond/x12/x13/x14/o14/g14> <kcal/kjmol> <zero> <scale14> <etaper> <ener/grad> <type_of_bond>\n\tatom1 atom2 De a r0 <coul> <rmin> rmax <3*flags>\nUnits \tDe in eV, a in Angs-1, r0 in Angs, coul in none\n- Default: \tcoul = 0.0\n- Use: \tMorse potential - optimisation flags for fitting.\n\tcoul = 1.0 => Coulomb subtracted.\n\tcoul = 0.0 => not Coulomb subtracted.\n\tThe format of the data assumes that rmin is the least important\n\tentry. I.e., if one of the optional parameters, coul or rmin,\n\tis missing it is assumed that coul is present and rmin\n\tis set to zero.\n\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = De.((1-exp(-a(r-r0)))**2 - 1.0) - coul.qi.qj/r\n\n\tIf \"etaper\" is specified then the potential is scaled by:\n\n\texp(-1/(rmax-r))\n\n\tto ensure that the potential (excluding the Coulomb subtraction)\n\tgoes to zero at the cutoff. In this case, the energy/gradient\n\toptions cannot be used.\n\tNote that the potential can also be written as:\n\n\tE = De.(exp(-2a(r-r0)) - 2exp(-a(r-r0))) - coul.qi.qj/r\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\tThe words energy or gradient may be given on the first line resulting\n\tin energy or gradient offsets being applied such that the specified\n\tquantity goes to zero at the cutoff distance.\n\n\tIf the \"zero\" sub-option is specified then the energy of the potential\n\tis calculated relative to zero at the minimum rather than at dissociation.\n\nmove_2a_to_1"
  },
  "option-move_2a_to_1": {
    "prefix": "option-move_2a_to_1",
    "body": "move_2a_to_1",
    "description": "- Format: \tmove_2a_to_1 <radius>\nUnits \tAngstroms\n- Default: \tnone\n- Use: \tAt the end of a defect calculation, region 2a ions within the\n\tspecified radius will be moved into region 1 for the dumpfile\n\tat their relaxed positions. This enables a better set of\n\tstarting positions to be input for a restart with a larger\n\tregion 1 as the ions will be approximately optimised to start\n\twith. If no radius is specified then all region 2a ions will\n\tbe moved. The radius value must not be less than the region 1\n\tradius and not greater than the region 2a value.\n- See also: \tdefect centre size region_1 vacancy interstitial\n\timpurity bulk_noopt\nmurrell-mottram"
  },
  "option-murrell-mottram": {
    "prefix": "option-murrell-mottram",
    "body": "murrell-mottram",
    "description": "- Format: \tmurrell-mottram <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K rho r012 r013 r023 <rmin(1-2)> rmax(1-2) <rmin(1-3)>\n\trmax(1-3) <rmin(2-3)> rmax(2-3) <5*flags>\n\tc0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 <11*flags>\nUnits \tK in eV, r012,r013,r023,rmin,rmax in Angstroms\n- Use: \tSpecifies the Murrell-Mottram three-body potential;\n\n\tE(three) = K.P(Q1,Q2,Q3).exp(-rho.Q1)\n\n\tP(Q1,Q2,Q3) = c0 + c1.Q1 + c2.Q1**2 + c3(Q2**2 + Q3**2) + c4.Q1**3 +\n\tc5.Q1(Q2**2 + Q3**2) + c6(Q3**3 - 3.Q3.Q2**2) +\n\tc7.Q1**4 + c8.Q1**2.(Q2**2+Q3**2) + c9.(Q2**2+Q3**2)**2\n\t+ c10.Q1(Q3**3 - 3.Q3.Q2**2)\n\n\tR1 = (r12-r012)/r012 R2 = (r13-r013)/r013 R3 = (r23-r023)/r023\n\n\tQ1 = (R1+R2+R3)/sqrt(3) Q2 = (R2-R3)/sqrt(2) Q3 = (2*R1-R2-R3)/sqrt(6)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \tthree-body angle axilrod-teller stillinger-weber bcross urey-bradley\n\texponential bacross hydrogen-bond equatorial uff3 3coulomb\n\tbagcross\nmutation"
  },
  "option-mutation": {
    "prefix": "option-mutation",
    "body": "mutation",
    "description": "- Format: \tmutation initial <final> <stepsize>\n- Default: \t1/(sum of discretisation values) <initial> <0.0>\n- Use: \tPart of ga options section. Specifies the mutation probability\n\tThe higher the value, the more likely it is that mutations will\n\toccur. If <initial> value is less than <final> value then after\n\t20 iterations tournament is incremented by <stepsize>. If the optimisation\n\tis stuck in a local minimum then either (i) if stepsize non-zero tournament\n\tis reset to <initial> OR (ii) grid fixed then mutation rate changed.\n- See also: \tgenetic anneal grid\nname"
  },
  "option-name": {
    "prefix": "option-name",
    "body": "name",
    "description": "- Default: \tnone\n- Use: \tAllows you to associate a one-word name with a particular\n\tstructure which is then displayed in the input banner for\n\tthat structure. Helps in indentification when working\n\twith multiple structures in the same input file.\n\tThis option must precede the geometry specification for\n\ta structure to avoid ambiguity in cases of multiple\n\tstructures.\n\n\tExample:\n\n\tname alumina\n\nnebiterations"
  },
  "option-nebiterations": {
    "prefix": "option-nebiterations",
    "body": "nebiterations",
    "description": "- Format: \tnebiterations <maximum_number>\n- Default: \t1000\n- Use: \tSpecifies the maximum number of iterations for minimization\n\tof the force norm during the nudged elastic band run.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom neb rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnebrandom"
  },
  "option-nebrandom": {
    "prefix": "option-nebrandom",
    "body": "nebrandom",
    "description": "- Format: \tnebrandom <random_weight>\n- Default: \t0.0\nUnits \tAngstroms\n- Use: \tIn the case where the initial pathway in the nudged elastic\n\tband (formed by linear interpolation between the initial and\n\tfinal state) lies along a high symmetry direction it can be\n\tnecessary to displace the replicas from the symmetric path.\n\tIf this option is set to a non-zero value then a random\n\tdisplacement is applied to the initial coordinates of each\n\treplica. The input value is used to scale a random number\n\tbetween 0 and 1.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent neb nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnebreplica"
  },
  "option-nebreplica": {
    "prefix": "option-nebreplica",
    "body": "nebreplica",
    "description": "- Format: \tnebreplica <nreplica>\n- Default: \tNone\n- Use: \tSpecifics the number of replicas to be used during a nudged elastic\n\tband run, including the initial and final structure. Must be\n\tgreater than 2 and controls how accurately the reaction path is\n\tdiscretised.\n- See also: \tneb nebspring nebtolerance nodneb\n\tnebtangent nebrandom nebiterations rcartesian fcartesian\n\trfractional ffractional rcell fcell fvectors\nnebspring"
  },
  "option-nebspring": {
    "prefix": "option-nebspring",
    "body": "nebspring",
    "description": "- Format: \tnebspring <vary> <maxspring> <minspring>\n- Default: \tmaxspring = 1.0 - no varying\nUnits \teV/Angstroms**2\n- Use: \tSpecifies the spring constant between the replicas in the nudged\n\telastic band method. For a single spring value between all\n\treplicas the input would be;\n\n\tnebspring 10.0\n\n\tFor a spring constant that varies between 10.0 and 1.0 the input\n\twould be;\n\n\tnebspring vary 10.0 1.0\n\n- See also: \tneb nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnebtangent"
  },
  "option-nebtangent": {
    "prefix": "option-nebtangent",
    "body": "nebtangent",
    "description": "- Format: \tnebtangent <option_number>\n- Default: \t3\n- Use: \tSpecifies how the tangent to the reaction path is to be defined\n\tin a nudged elastic band run. The following are valid options:\n\n\t1 => central finite difference between replicas\n\t2 => bisect vectors\n\t3 => new algorithm favouring higher energy replica neighbour\n\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica neb nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnebtolerance"
  },
  "option-nebtolerance": {
    "prefix": "option-nebtolerance",
    "body": "nebtolerance",
    "description": "- Format: \tnebtolerance <tolerance_value>\n- Default: \t0.001\n- Use: \tSpecifies the convergence criteria for a nudged elastic band\n\trun in terms of the residual force norm.\n- See also: \tnebspring neb nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional rcell fcell fvectors\nnmr"
  },
  "option-nmr": {
    "prefix": "option-nmr",
    "body": "nmr",
    "description": "- Format: \tnmr symbol chemical_shift_reference mean_shift fq\nUnits \tppm for chemical_shift_reference and mean_shift, unitless for fq\n- Default: \tNone\n- Use: \tAllows species specific parameters to be set for use in the\n\tcalculation of NMR chemical shifts within the Pacha method.\n\n\telement\n\tnmr C2 185.4 155.95 1.0\n\tend\n\n\tCommand is part of element section.\n- See also: \telement\nnobond"
  },
  "option-nobond": {
    "prefix": "option-nobond",
    "body": "nobond",
    "description": "- Format: \tnobond species1 species2\n- Use: \tExcludes bond formation between two species during molecule search.\n- See also: \tmolecule molq molmec bond connect noautobond bondtype\nobservables"
  },
  "option-observables": {
    "prefix": "option-observables",
    "body": "observables",
    "description": "- Format: \tkeyword\n- Default: \tonly derivatives marked for optimisation\n- Use: \tSpecifies fitting observables other than structure which use\n\tderivatives.\n- See also: \telastic hfdlc sdlc energy bulk_modulus shear_modulus weight\n\tgradients hfrefractive_index srefractive_index piezoelectric\n\tfrequency gradient potential entropy bornq monopoleq cv\n\tstress qreaxff fbond fangle reaction young poisson coordno\n\tsqomega volume fenergy\nodirection"
  },
  "option-odirection": {
    "prefix": "option-odirection",
    "body": "odirection",
    "description": "- Format: \todirection <frac> x_in y_in z_in x_out y_out z_out\nUnits \tdimensionless\n- Default: \tno directions\n- Use: \tIf the frequency dependent properties are required for a\n\tparticular in/out direction combination then this option\n\tspecifies the 2 directions.\n\n\tNOTE : This option only applies to a gamma point calculation\n\n\tBy default the directions are assumed to be in Cartesian space\n\tunless the \"frac\" sub-option is given in which case they will\n\tbe taken relative to the crystal axes.\n- See also: \tphonon omega omega_damping\nomega"
  },
  "option-omega": {
    "prefix": "option-omega",
    "body": "omega",
    "description": "- Format: \tomega frequency frequency_step no_of_steps\nUnits \tcm-1\n- Default: \tfrequency = frequency_step = 0.0 no_of_steps = 0\n- Use: \tSpecifies that frequency dependent properties be calculated\n\tover a given range. \"frequency\" represents the initial frequency\n\twhile \"frequency_step\" is the interval between calculations.\n\n\tExample:\n\n\tomega 500.0 100.0 5\n\n\tthe above would calculate properties at a frequencies of 500,\n\t600, 700, 800, 900 and 1000 cm-1. A no_of_steps = 0 implies a\n\tcalculation at a single frequency.\n\n\tIn the output of the frequency dependent dielectric constant\n\tthe first line contains the real part of the dielectric\n\tfunction and the second one the complex part.\n\n\tNOTE : This option only applies to a gamma point calculation\n\n- See also: \tphonon odirection omega_damping\nomega_af"
  },
  "option-omega_af": {
    "prefix": "option-omega_af",
    "body": "omega_af",
    "description": "- Format: \tomega_af <rads> frequency <B> <v_s> <v_p>\nUnits \tcm-1 for frequency, s/km**2 for B, m/s for v_s and v_p\n\tIf \"rads\" is specified as a sub-option then B is in 10^14 rads**2/s\n\tand frequency is in 10^12 rads/s.\n- Default: \t0.0\n- Use: \tSpecifies the minimum frequency to be used in a thermal conductivity\n\tcalculation in the Allen-Feldman contribution. If this option is\n\tincluded then the contribution from propagating modes will be added\n\tbased on integrating the result for the Debye model from 0 to omega_af.\n\tThis relies on finding an approximation to the phonon lifetime as a\n\tfunction of frequency based on the expression:\n\n\ttau = B*omega**-2\n\n\tfrom which the propagating contribution to the thermal conductivity\n\tcan be estimated by;\n\n\tkappa_pr = 4*pi*k_B*(c**3)*B*omega_af*(2/v_s + 1/v_p)/3\n\n\twhere k_B is Boltzmann's constant, c is the speed of light, omega_af\n\tis the frequency boundary between the propagating and Allen-Feldman\n\tcontributions and v_s/v_p are the velocities of the propagating\n\ts- and p-waves, respectively.\n\tThis expression for B/omega_af in rads is:\n\n\tkappa_pr = [k_B*B*omega_af/(2*pi**2)]*(2/v_s + 1/v_p)/3\n\n\tIf no value of v_s/v_p is input then these are approximated by the s- and\n\tp-wave velocities calculated in the properties according to the Reuss\n\tdefinition. If no value of B is input, then this is computed based\n\ton a simple approximation. Here the maximum peak in the Allen-Feldman\n\tmode diffusivity below omega_af is found and then this is used to\n\tdetermine the value of B via a one point fit using;\n\n\tD_pr(omega) = (1/3)*v_s**2*B*omega**-2\n\n\twhere D_pr(omega) is the mode diffusivity at the frequency of the\n\tmaximum, omega, below the cutoff. If there are no modes below the\n\tvalue of omega_af specified then the propagating contribution can\n\tonly be computed if B is input manually. A more accurate value of\n\tB could be found by fitting the low frequency Allen-Feldman region\n\toutside of GULP and then using this as input.\n- See also: \tthermalconductivity broaden_dos temperature lorentzian_tolerance\nomega_damping"
  },
  "option-omega_damping": {
    "prefix": "option-omega_damping",
    "body": "omega_damping",
    "description": "- Format: \tomega_damping damping_factor\nUnits \tcm-1\n- Default: \t5.0 cm-1\n- Use: \tApplies a damping factor to the frequency dependent optical\n\tproperties. This broads the peaks and prevents a singularity.\n\tNote that the value is constrained to be greater than 1 x 10^-6\n\tto ensure numerical stability.\n- See also: \tomega odirection phonon\norigin"
  },
  "option-origin": {
    "prefix": "option-origin",
    "body": "origin",
    "description": "- Format: \torigin 1/2 or x y z or ix iy iz\nUnits \tnone\n- Default: \torigin 1\n- Use: \tAllows the space group origin to be changed, either by selecting the\n\tsecond setting in international tables by giving 2 on it's own, or\n\tspecifying the desired origin shift either as three fractional\n\tcoordinates or as three integers which represent 24 times the shift\n\t- e.g. a shift of 1/3 1/3 2/3 would be 8 8 16 thus avoiding precision\n\tproblems with recurring decimals.\noutofplane"
  },
  "option-outofplane": {
    "prefix": "option-outofplane",
    "body": "outofplane",
    "description": "- Format: \toutofplane <inter/intra> <bond> <only3> <kcal/kjmol>\n\tatom1 atom2 atom3 atom4 k <k4> <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3) <rmin(1-4)> rmax(1-4) <1-2 x flag>\nUnits \tk in eV*Angs**-2, k4 in eV*Angs**-4\n- Default: \trmin values = 0, k4 = 0\n- Use: \tOut of plane energy - harmonic energy penalty for atom 1 lying\n\tout of the plane of atoms 2, 3 and 4. Used for ring systems\n\twhich should be planar:\n\n\tE = k.d**2 + k4.d**4, where d=distance to the plane\n\n\tIf the only3 sub-option is specified then the potential applies where an atom has exactly\n\t3 bonds present.\n- See also: \ttorsion ryckaert torangle torharm torexp xoutofplane inversion xangleangle\noutput"
  },
  "option-output": {
    "prefix": "option-output",
    "body": "output",
    "description": "- Format: \toutput <filetype> <filename>\n- Default: \tno output files\n- Use: \tWrite files suitable for other programs.\n\tAvailable filetypes are marvin, thbrel, xtl, xr, cssr, arc\n\txyz, trajectory, history, fdf, drv, frc, cif, str, pressure\n\tosc, phonon, pdf, qbo, cosmo, lammps, lammps_pots, dcd, eig\n\tcml, inertia, kpt, castep_phonon, shengBTE, dipole, xsf :\n\n\tmarvin - generates a file suitable for input to Marvin for\n\tsurface calculations. Index of surface plane needs to be\n\tadded first, though this may be passed through GULP to the\n\tmarvin input but using the \"marvin\" option. If the file\n\textension \".mvn\" is not given by the user it will be added\n\tby the program.\n\te.g. output marvin alumina produces alumina.mvn\n\tIf a file for Marvin2 is required, then use the sub-option\n\tmarvin2 instead.\n\te.g. output marvin2 alumina\n\n\tthbrel - converts the final bulk structure into a file format\n\tsuitable for the THBREL suite of programs. Not all features\n\tare readily transferable between the programs so no guarantee\n\tis made that the input file is perfect and for similar reasons\n\tboth programs may not always yield the same results unless the\n\tuser is careful to make sure the files are equivalent. If a\n\tphonon run has been requested then the output is modified for\n\tTHBPHON instead of THBREL.\n\n\txtl - this is only applicable to crystal structures with a\n\tsingle structure per file. Produces a .xtl file for input\n\tinto the BIOSYM software, though use of the archive file is\n\tbetter unless symmetry is present. If the filename input is\n\tnot already terminated with \".xtl\" then this will be added\n\tby the program.\n\te.g. output xtl alumina produces alumina.xtl\n\n\txr - this will output a modified CSSR file suitable for\n\tinput into the Oxford Materials graphical interface\n\tprogram Crysalis. The file will have the extension \".xr\"\n\tadded. At the moment this is only applicable to 3D\n\tsystems.\n\te.g. output xr alumina produces alumina.xr\n\n\tcssr - this will output a CSSR file suitable for input\n\tinto the MSI graphical interface Cerius2. The file will\n\thave the extension \".cssr\" added. At the moment this\n\tis only applicable to 3D systems.\n\te.g. output cssr alumina produces alumina.cssr\n\n\tarc - alternatively known as a \".car\" file. This option produces\n\tarchive files suitable for input into the BIOSYM Insight software\n\tand will handle bulk, cluster and defect calculations, all with\n\tmultiple structures. The username should input a root name,\n\te.g. output arc alumina\n\tThe program will then produce archive file names with either\n\t\"_3D\", \"_defe\", or \"_0D\" appended to distinguish the files\n\tresulting from a particular section of the run. If multiple\n\tstructures are present then an underscore followed by the\n\tstructure number will be added, all followed by \".arc\".\n\te.g. if the above input for alumina contained two bulk structures\n\tthen the files produced would be \"alumina_bulk_1.arc\" and\n\t\"alumina_bulk_2.arc\".\n\tIf the word \"movie\" is specified then all structures during an\n\toptimisation will be included in the arcfile, rather than just\n\tthe final one, so that the optimisation may be viewed.\n\te.g. output movie arc alumina\n\tNote : for MD runs the name of the archive file is set by\n\t\"mdarchive\" to avoid overwriting the optimisation archive\n\tfile if present. Also in the case of MD the file is only\n\twritten during the production phase.\n\tIt is also possible to specify a frequency for the output:\n\te.g. output movie 5 arc alumina\n\tThis would output an archive file frame every 5 steps during the\n\tmovie. The default is to output at every step.\n\tNB: The residue field has now been changed to contain the molecule\n\tnumber, rather than the atom number or a dummy string.\n\n\txyz - this will output an xyz file suitable for\n\tinput into programs such as Molden and with slight\n\tmodification Unichem. The file will have the extension \".xyz\"\n\tAt the moment this is only applicable to non-periodic\n\tsystems. When called with a periodic case just the Cartesian\n\tcoordinates will be output, without the unit cell.\n\te.g. output xyz cluster produces cluster.xyz\n\tIf the word \"movie\" is specified then all structures during an\n\toptimisation will be included in the xyz file, rather than just\n\tthe final one, so that the optimisation may be viewed.\n\te.g. output movie xyz cluster\n\n\ttrajectory - this is a binary file which stores the coordinates\n\tand velocities from a molecular dynamics run, as well as some\n\tof the system properties. This file is used by the Cerius interface\n\tto generate a .trj file for analysis in Cerius. Note that this\n\tfile is only written during the production phase by default.\n\te.g. output trajectory alumina\n\tFor this sub-option the further option \"ascii\" may be specified\n\tin order to obtain an ASCII format trajectory file. Note that\n\tthis is less efficient for disk space usage!\n\te.g. output trajectory ascii alumina\n\tFurthermore, the sub-option \"equil\" may be added to force writing\n\tduring the equilibration phase of the simulation.\n\tThe default extension for this file type is .trg\n\n\thistory - this is a text file in the DLPOLY HISTORY file format\n\tcontaining the structure and velocities sampled from a MD run.\n\tThis file can be used for post-MD analysis using the same\n\tprograms as for DLPOLY such as \"After\".\n\n\tfdf - this is a text file in the Flexible Data Format of Alberto\n\tGarcia and Jose M. Soler. This file can then form the basis of\n\tan input deck for the program SIESTA.\n\n\tdrv - this is a text file containing the energy and appropriate\n\tderivatives calculated by GULP at the last function evaluation.\n\tThis can be used for QM/MM schemes. Note that if freezing is\n\tbeing used then second derivatives may not be output since not\n\tall derivatives may be calculated. To turn off freezing then\n\tspecify the keyword \"noexclude\".\n\n\tfrc - this is a text file containing the energy and appropriate\n\tforce constants for cores only calculated by GULP during a phonon\n\tcalculation. This can be used for QM/MM schemes, such as in the\n\tprogram QMPOT. A phonon calculation must be specified otherwise\n\tno file will be output. NB: Force constant matrices can also be\n\toutput in a format suitable for ShengBTE and Phonopy using the\n\toutput shengbte option.\n\n\tcif - this is only applicable to crystal structures with a\n\tsingle structure per file. Produces a .cif file for input\n\tinto a variety of programs. If the filename input is\n\tnot already terminated with \".cif\" then this will be added\n\tby the program. Note that at present the files are output\n\tin P1 regardless of symmetry for simplicity.\n\te.g. output cif alumina produces alumina.cif\n\tStrictly speak a cif file is only valid for 3-D systems, but\n\tfiles can be output from GULP for 0-D, 1-D and 2-D with the\n\taddition of a dummy cell parameter. This value can be set\n\tfrom the option:\n\te.g. output cif 12.0 surface\n\twill create a 3-D cif file with a dummy lattice parameter of\n\t12 Angstroms for directions that are non-periodic. The default\n\tdummy lattice parameter is 0 which implies that a cif file\n\tshouldn't be written for the wrong periodicity.\n\n\tstr - this is a file in the CRYSTAL98 format, suitable for\n\treading by DLV. If the filename input is not already\n\tterminated with \".str\" then this will be added. If multiple\n\tstructures are specified then the filename will be modified\n\tso that a separate file can be written for each structure.\n\n\tphonon - this option leads to the density of states from a\n\tphonon calculation and any dispersion curve points being\n\toutput to the files <filename>.dens and <filename>.disp,\n\trespectively, in a format suitable for input into a curve\n\tplotting program. If the sub-option \"ir\" is specified then\n\tthe density of states will be weighted by the IR intensities\n\te.g. output phonon ir alumina\n\n\tfrequency - this option produces a list of frequencies over all\n\tk points for use in an analysis program. A typical application\n\tmight be in the calculation of the Gruneisen parameter by\n\tdifferencing of the frequencies with respect to the cell volume.\n\tThe file can either be output in binary format (to maintain\n\tprecision - the default):\n\te.g. output freq binary <filename> <ndecimal>\n\tor as ordinary text:\n\te.g. output freq text <filename> <ndecimal>\n\tHere the optional value of ndecimal specifies how many decimal\n\tplaces you get (up to a maximum of 12 since going further than\n\tthis would be non-sensical in double precision!).\n\n\tpressure - this option outputs a file containing the pressure\n\ttensor during a molecular dynamics run, both instanteously and\n\tas an average. File is output as <filename>.pre using units of\n\tGPa.\n\n\tosc - this is a text file containing the oscillator strengths\n\tfor the phonon modes so that the frequency dependent data can\n\tbe handled in post processing. In this file the frequencies\n\tare in wavenumbers, while the oscillator strengths are in cm^-2\n\n\tpdf - this option sets the name for the .wid and .pdf files\n\tcreated by the pdf keyword. The .wid file can be suppressed by\n\tthe nowidth keyword.\n\n\tcosmo - this outputs a COSMO file in the Accelrys format for\n\tvisualisation of information relating to solvation an the\n\tsolvent accessible surface\n\n\tlammps - this outputs a LAMMPS input files for a system based on\n\tthe information available to GULP. This includes a .lmp file\n\tcontaining the structure and bonding information. If followed by\n\t\"var\" then variable names will be used in the output.\n\n\tlammps_pots - this outputs a LAMMPS file containing a tabulation\n\tof any twobody potentials. There are 3 addition pieces of information\n\tthat can be provided which are the start of the range, r0, the end\n\tof the range, rend, and the number of points, np.\n\te.g. output lammps_pots 0.1 9.0 1000 myfile\n\tThis would create a table from 0.1 to 9.0 Angstroms with 1000 points\n\tand write it to a file called myfile.\n\n\tcml - this is a Chemical Markup Language output file which\n\tcontains all the important information about the calculation\n\tin an XML format. This output is suitable for various database\n\ttools and for data transfer between CML-enabled applications.\n\n\teig - this outputs the eigenvectors for each K point as a file.\n\n\tqbo - this file contains the charges and bond orders, as appropriate,\n\tfor a potential model.\n\te.g. output qbo myfile\n\tThe above command would produce a file myfile.qbo containing the\n\tcharges and bond orders for the final configuration. If the\n\tvalues for all structures are required then the sub-option \"append\"\n\tcan be used:\n\te.g. output qbo append myfile\n\n\tdcd - this file contains the coordinates from an MD trajectory and\n\tcan be used by programs such as VMD for analysis and visualisation.\n\n\tinertia - output information on the moment of inertia tensor for\n\tmolecules at the final structure for each configuration\n\n\tcastep_phonon - this file contains the phonon information from multiple\n\tK points in the same format as used for the program CASTEP. The default\n\textension for this is \".csp\":\n\te.g. output castep_phon myfile.csp\n\n\tkpt - this file list the k points within the asymmetric unit of the\n\tBrillouin zone along with the symmetry unique images of the k point.\n\n\tshengBTE - this causes the files needed to perform a ShengBTE run to be\n\toutput. This usually comprises the files CONTROL, FORCE_CONSTANTS_2ND,\n\tFORCE_CONSTANTS_3RD that contain the system information and control\n\tparameters, the second order force constants, and the third order force\n\tconstants, respectively. Note that the FORCE_CONSTANTS_2ND file is also\n\tsuitable for use with Phonopy.\n\tNB: Since the calculation of the third order force constants is\n\tpotentially expensive expect this option to substantially increase\n\tthe computational cost of a run!!! The use of the keyword nod3 allows\n\tthe ShengBTE output to be restricted to second derivatives only.\n\tNB: The option \"threshold\" controls the minimum size for force constants\n\tto be output as non-zero\n\n\tdipole - this causes GULP to output a text file that contains the\n\tdipole of the system for each time step of a molecular dynamics run.\n\tIf the delta_dipole keyword is specifed then the dipole is computed\n\trelative to the initial value. The units of the dipoles for this file\n\tare Debye and the format has the current time in ps follow by the\n\tthree Cartesian components in the order x, y and z.\n\n\txsf - output a file in XCrySDen format. When performing MD it is possible\n\tto output either a single XSF file or a sequence of files for single\n\tframes with a number appended to differentiate them. The format is:\n\n\toutput xsf <seq/sym> myfile\n\n\twhere seq (sequential) is optional but if specified will result in multiple\n\tfiles being output during molecular dynamics. Here myfile is the root name\n\tfor the file. For example;\n\n\toutput xsf seq myfile\n\n\twould produce myfile000001.xsf, myfile000002.xsf, etc. If \"sym\" is specified\n\tthen atomic symbols are used instead of atomic numbers in the files. This\n\tis relevant if using Aenet which expects symbols, whereas XCrySDen specifies\n\tatomic numbers for the format.\n- See also: \tmarvin dump ghost_supercell num3 numerical shopt threshold nod3\np_flexible"
  },
  "option-p_flexible": {
    "prefix": "option-p_flexible",
    "body": "p_flexible",
    "description": "- Format: \tp_flexible\n\tp_flx(1,1) p_flx(2,1) p_flx(3,1)\n\tp_flx(1,2) p_flx(2,2) p_flx(3,2)\n\tp_flx(1,3) p_flx(2,3) p_flx(3,3)\n- Use: \tUsed only for restarting a molecular dynamics simulation with the\n\tstochastic integrator. Not intended for user input.\n- See also: \tintegrator\np_isotropic"
  },
  "option-p_isotropic": {
    "prefix": "option-p_isotropic",
    "body": "p_isotropic",
    "description": "- Format: \tp_isotropic <value>\n- Use: \tUsed only for restarting a molecular dynamics simulation with the\n\tstochastic integrator. Not intended for user input.\n- See also: \tintegrator\nparallel"
  },
  "option-parallel": {
    "prefix": "option-parallel",
    "body": "parallel",
    "description": "- Format: \tparallel <avoid_communication>\nUnits \tnone\n- Default: \tUse communication.\n- Use: \tThis option controls various settings that relate to the\n\tparallel algorithms used, where choices exist.\n\n\tavoid_communication - if specified then communication is\n\tminimised by recalculating on each node for some parts of\n\tthe code.\n\n- See also: \tmaths matrix_format blocksize\npcell"
  },
  "option-pcell": {
    "prefix": "option-pcell",
    "body": "pcell",
    "description": "- Format: \tpcell <angs/au>\n\ta <1 x optimisation flag>\nUnits \tAngstrom (default) or au for a\n- Use: \tPolymer unit cell. Either \"pvector\" or \"pcell\"\n\tmust be given for a polymer. For optimisations or fitting,\n\tflags must be set unless cellonly, conp or conv are specified.\n- See also: \tpvector twist\npdf"
  },
  "option-pdf": {
    "prefix": "option-pdf",
    "body": "pdf",
    "description": "- Format: \tpdf <all>\n\t<further options>\n\tend\n- Use: \tOpens pdf input block. This is used for the input of options used by pdf\n\tcalculations. Specifically, it should be used for the pdf options\n\trmax, rbins, wmax, wmin, units.\n\tThe block is opened with the word pdf and all further options read are\n\ttreated as pdf-related until the word end.\n\tWhen working with multiple configurations, one pdf input block is needed\n\tper configuration, unless the option all is given, when the options act on all\n\tconfigurations. This allows PDF output to be comparable between configurations.\n- See also: \tPDFcut PDFkeep nowidth nofreq rmax rbins wmax wmin units bbar siginc\npfinite"
  },
  "option-pfinite": {
    "prefix": "option-pfinite",
    "body": "pfinite",
    "description": "- Format: \tpfinite delta\n- Default: \t0.00001\nUnits \tAngstroms\n- Use: \tSets the finite difference intervals to be used for the numerical\n\tevaluation of phonons by central finite differencing of the\n\tanalytic first derivatives.\n- See also: \tnumerical sfinite\npfractional"
  },
  "option-pfractional": {
    "prefix": "option-pfractional",
    "body": "pfractional",
    "description": "- Format: \tpfractional <region <n> <qm/mm> <rigid <xyz>>> <nonrigid>\n\tat.sym. <species_type> x y z <charge> <occupancy> <radius> <3 x flags>\nUnits \tFractional for x Angstroms for y and z, and electrons, radius in\n\tAngstroms\n- Use: \tInternal coordinates and charges for all species in the polymer cell.\n\tEither the atomic number or the symbol may be supplied, followed\n\tby the species type. If the species type is omitted then it is\n\tassumed to be a core. Individual charges may be supplied for each\n\tion or the charges for each type of species given using the\n\tspecies option. If the charges are given, then optionally site\n\toccupancies may also be specified. Similarly, if the charge and\n\toccupancy are given, then the radius of a breathing shell may\n\talso be present. Optimisation flags are only needed if cellonly,\n\tconv, bulk, conp or shell are not specified.\n- See also: \tpcell\npiezoelectric"
  },
  "option-piezoelectric": {
    "prefix": "option-piezoelectric",
    "body": "piezoelectric",
    "description": "- Format: \tpiezoelectric <n> <stress/strain>\n\ti <x/y/z> piezoelectric constant p(i,alpha) <weight>\nUnits \tC/m**2 for piezoelectric strain constants\n\t10**-9 C/N for piezoelectric stress constants\n- Default: \tno piezoelectric constants to be fitted - constants are strains\n- Use: \tSubsection of observables, used for specifying values of\n\tpiezoelectric stress and strain constants for fitting.\n\tUnits are the same as output from the program and it is\n\tonly necessary to give unique piezoelectric constants.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive bornq\n\tyoung poisson shear voigt bulk\nplane_lj"
  },
  "option-plane_lj": {
    "prefix": "option-plane_lj",
    "body": "plane_lj",
    "description": "- Format: \tplane_lj m n\n\tatom1 plane zcoord A B rmin rmax <2xflags>\nUnits \tzcoord, rmin and rmax in Angstroms, A & B in\n\teV/Angstroms**m and eV/Angstroms**n, respectively.\n- Default: \tm = 10, n = 4\n- Use: \tSpecifies a Lennard-Jones potential between atom1 and a plane.\n\tBecause the method is only applicable to 2-D systems the plane\n\tis assumed to be parallel to xy. The absolute position in z\n\tis given by zcoord. For example to include an integrated L-J\n\t12-6 potential (which would give m=10 and n=4) that acts on carbon\n\tpositioned at -0.75 Ang the input would look like:\n\n\tplane_lj 10 4\n\tC core -0.75 1000.0 14.0 0.0 12.0\n\n- See also: \tlennard einstein\nplumed_input"
  },
  "option-plumed_input": {
    "prefix": "option-plumed_input",
    "body": "plumed_input",
    "description": "- Format: \tplumed_input <plumed_file_name>\nUnits \tnone\n- Default: \tplumed_file_name = plumed.dat\n- Use: \tBy specifying this option GULP tried to use the plumed\n\tplug-in with the input for this coming from an external\n\tfile.\n- See also: \tmd plumed_log\nplumed_log"
  },
  "option-plumed_log": {
    "prefix": "option-plumed_log",
    "body": "plumed_log",
    "description": "- Format: \tplumed_log <plumed_log_name>\nUnits \tnone\n- Default: \tplumed_log_name = plumed.log\n- Use: \tSpecifies the name for the log file from Plumed\n- See also: \tmd plumed_input\npointsperatom"
  },
  "option-pointsperatom": {
    "prefix": "option-pointsperatom",
    "body": "pointsperatom",
    "description": "- Format: \tpointsperatom <no. of points per atom>\n- Default: \t1082 (for dodecahedron) / (974 for octahedron)\nUnits \tNone\n- Use: \tSpecifies the number of points per atom for the basic\n\tsphere used to construct the solvent-accessible surface\n\tin a COSMO calculation. The value must conform to the\n\tfollowing formula :\n\n\tDodecahedron\n\n\tpointsperatom = 10*(3**k)*(4**l)+2\n\n\tOctahedron\n\n\tpointsperatom = 4*(3**k)*(4**l)+2\n\n\twhere k and l are integers. The larger the value of\n\tthis parameter, the more precise and expensive the\n\tcalculation will be.\n- See also: \tcosmo segmentsperatom solventepsilon solventradius\n\tsolventrmax vdw cosmoshape rangeforsmooth\npoisson_ratio"
  },
  "option-poisson_ratio": {
    "prefix": "option-poisson_ratio",
    "body": "poisson_ratio",
    "description": "- Format: \tpoisson_ratio <n>\n\t<xy/xz/yz> poissons_ratio <weight>\nUnits \tDimensionless\n- Default: \tno Poissons ratios to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tPoisson's ratios for fitting.\nExample \tTo fit a Poisson's ratio of 0.23 for the x-z component\n\twith a weight of 0.01:\n\n\tpoisson 1\n\txz 0.23 0.01\n\n\tNB: The Poisson ratios are computed assuming that the\n\tmaterial is linear elastic orthotropic.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive bornq\n\tpiezoelectric young shear voigt bulk\npolarisability"
  },
  "option-polarisability": {
    "prefix": "option-polarisability",
    "body": "polarisability",
    "description": "- Format: \tpolarisability\n\tatom_symbol <core/shell> dipolar_polarisability\nUnits \tdipolar_polarisability in Angs**3\n- Default: \tPolarisability is equal to zero, except for shell contribution\n- Use: \tAllows the inclusion of point ion polarisability in a calculation.\n\tAt the moment this is non-self consistent, i.e. induced moments on\n\tdifferent centres do not interact.\npolynomial"
  },
  "option-polynomial": {
    "prefix": "option-polynomial",
    "body": "polynomial",
    "description": "- Format: \tpolynomial <harmonic> <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tnorder\n\tatom1 atom2 (norder+1)*coeff <r0> <rmin> rmax <(norder+1)*flags>\n\torder of coefficients = lowest to highest\nUnits \teV and Angstroms\n- Default: \tr0 = 0\n- Use: \tPolynomial potential, order = 1-8:\n\n\tE = c0 + c1*(r-r0) + c2*(r-r0)**2 + ... + cn*(r-r0)**n\n\n\tIf sub-option harmonic is specified, then the polynomial is premultiplied\n\tby a harmonic term:\n\n\tE = (r - r0)**2 * (c0 + c1*r + c2*r**2 + ... + cn*r**n) for r < r0\n\n\tE = 0 for r > r0\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\npotential"
  },
  "option-potential": {
    "prefix": "option-potential",
    "body": "potential",
    "description": "- Format: \tpotential <reverse> <au>\n\tx y z V <weight>\n\n\tIf \"reverse\" is specified then order is:\n\tV x y z <weight>\n\nUnits \tV is in eV per electron charge in a.u., x, y and z are\n\tthe fractional coordinates of the site for a 3D system\n\tor the cartesian coordinates for an isolated molecule.\n- Use: \tSpecifies the electrostatic potential at a given point\n\tin space for use in fitting of electrostatic potential\n\tsurfaces as a means of deriving charges. This option is\n\ta sub-option of the observables section.\n- See also: \tzero_potential potsites pot potgrid\npotential_interpolation"
  },
  "option-potential_interpolation": {
    "prefix": "option-potential_interpolation",
    "body": "potential_interpolation",
    "description": "- Format: \tpotential_interpolation number_of_points\nUnits \tNone\n- Default: \tDo not use interpolation\n- Use: \tRequests that linear interpolation of potentials is used to\n\taccelerate the calculation where possible at the expense of\n\tnumerical precision. The larger the number of points the greater\n\twill be the precision (values of 100,000 & larger are typical).\n\tCurrently this technique is only used in MD.\npotgrid"
  },
  "option-potgrid": {
    "prefix": "option-potgrid",
    "body": "potgrid",
    "description": "- Format: \tpotgrid <xmin xmax ymin ymax zmin zmax> nx ny nz\nUnits \tfractional (3D) / fractional/Angstroms (2D) / Angstroms (cluster)\n- Use: \tCalculates the electrostatic potential at a grid of points. The\n\tlimits of the grid are given by xmin,xmax,ymin,ymax,zmin and zmax\n\tin fractional units for a periodic system and in cartesian coordinates\n\tfor a cluster. These values can be omitted for a periodic system,\n\tin which case they default to 0 for the minimum and 1 for the\n\tmaximum (ie the whole unit cell). The integer values nx, ny, nz\n\tcontrol how many points are calculated in each direction. The\n\tnumber of points will be one greater than the number input. For\n\texample, a value of nx=5 will generate 6 points at 0.0, 0.2, 0.4,\n\t0.6, 0.8 and 1.0.\n\tNB: If symmetry is turned off using the \"nosym\" option then the\n\tfractional range will apply to the new cell that is generated.\n- See also: \tpot potential potsites\npotsites"
  },
  "option-potsites": {
    "prefix": "option-potsites",
    "body": "potsites",
    "description": "- Format: \tpotsites <cart> <au>\n\tx1 y1 z1\n\tx2 y2 z2\n\tetc.....\nUnits \tfractional/Cartesian as appropriate to dimensionality\n- Default: \tnone\n- Use: \tAllows the user to specify points in space at which the electrostatic\n\tpotential should be calculated. Note that it is necessary to also\n\tspecify the \"pot\" keyword to trigger the calculation of the potential.\n\tNB: If the potential sites are specified using fractional coordinates\n\tfor a centred cell (e.g. hexagonal) then they will be transformed to\n\tthe primitive setting automatically for consistency. In other words\n\tthe fractional coordinates are taken to be in the same frame of reference\n\tas for the atomic coordinates input.\n\tNB: If symmetry is turned off using the \"nosym\" option then the\n\tfractional coordinates will be transformed as per the atomic fractional\n\tcoordinates.\n- See also: \tpot potential potgrid\npressure"
  },
  "option-pressure": {
    "prefix": "option-pressure",
    "body": "pressure",
    "description": "- Format: \tpressure value_of_pressure <GPa/kPa/MPa/Pa/atm/Nm-2/kbar>\nUnits \tGigapascals, kilopascals, megapascals, pascals, atmospheres, kbar (Default = GPa)\n- Default: \t0 GPa\n- Use: \tSpecifies pressure to be applied to structure. Causes energy to be\n\treplaced by enthalpy in calculations.\nprint"
  },
  "option-print": {
    "prefix": "option-print",
    "body": "print",
    "description": "- Format: \tn = integer no.\n- Use: \tPrints out current parameters during fitting whenever cycle number is\n\texactly divisable by n.\n- See also: \tdump\nproduction"
  },
  "option-production": {
    "prefix": "option-production",
    "body": "production",
    "description": "- Format: \tproduction value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - if integer, then value is by default\n\ta multiple of the timestep or if non-integer then by\n\tdefault is the time in picoseconds.\n- Use: \tSpecifies the simulation time to be spent collecting\n\tproduction data for subsequent analysis.\n- See also: \tmd equilibration sample write temperature timestep\n\ttscale nolist delay_force end_force momentum_correct\nproject_dos"
  },
  "option-project_dos": {
    "prefix": "option-project_dos",
    "body": "project_dos",
    "description": "- Format: \tproject_dos <n>\n\tFor each <n> there should be a line listing the atoms in the\n\tasymmetric unit onto which to project the density of states, or\n\talternatively atomic symbols and types may be given.\n- Use: \tProjects the phonon density of states onto given sets of atoms.\n\tNote that this requires the explicit calculation of the eigenvectors\n\tfor each k point. Atoms for projection must be cores and not\n\tshells as the shells have no component in the DOS. Projections\n\twill also be output to the .dens file if requested.\n\n\tExamples:\n\n\tTo project on to atoms 4, 7 and 10:\n\n\tproject_dos 1\n\t4 7 10\n\n\tTo project on to all species C1 and O3:\n\n\tproject_dos 1\n\tC1 O3\n\n- See also: \tphonon eigenvectors output\npvector"
  },
  "option-pvector": {
    "prefix": "option-pvector",
    "body": "pvector",
    "description": "- Format: \tpvector <angs/au>\n\tx for vector\n\t<1 x optimisation flags>\nUnits \tAngstrom (default) or au\n- Use: \tSpecifies the cartesian component of the polymer vector.\n\tEither \"pvector\" or \"pcell\" must be included for a polymer.\n\tStrain optimsation flags appear on last line.\n- See also: \tpcell\nqelectronegativity"
  },
  "option-qelectronegativity": {
    "prefix": "option-qelectronegativity",
    "body": "qelectronegativity",
    "description": "- Format: \tqelectronegativity\n\t<Atomic_symbol/atomic_number> chi <mu> <radius> <Q0> <E0> <3 x flags for fitting>\n\n\tor\n\n\tqelectronegativity <qrange/qmin/qmax>\n\t<Atomic_symbol/atomic_number> chi <mu> <radius> <Q0> <E0> <qmin> <qmax> <3 x flags for fitting>\nUnits \tChi, mu, and E0 in eV, radius in Ang, Q0, qmin, qmax in a.u.\n- Default: \tQ0 = 0.0, E0 = 0.0\n- Use: \tAllows the user to specify the parameters needed for the\n\tQEq electronegativity equalisation method for determining\n\tcharges. Note that if the flags are not specified they\n\tare assumed to be zero.\n\tQ0 is the charge about which the electronegativity equations\n\tare quadratic. In most methods this is zero, but need not be.\n\tFor example, the EQeq method assigns values of Q0 not equal\n\tto zero.\n\tE0 is an additive constant for the energy of an atom. This is\n\tonly really needed when using multiple q ranges to ensure\n\tenergy matching.\n\tThe sub-options qrange, qmin, and qmax control whether the\n\tvalues apply for a given value of charge. By default the values\n\tapply to all values of charge (q). If qmin is specified then\n\tthey are only applied to charges larger than qmin, while if qmax\n\tis given the they are applied when q is less than qmax. When\n\tqrange is specified then the values apply for qmin =< q < qmax.\n\tNB: If no parameters are input then the default values will be\n\tused for all charge values. However, if parameters are input\n\tthen this will override the default values and the user must\n\tset parameters for all relevant ranges of charge.\n- See also: \teem electronegativity qeq smelectronegativity noqeem external_potential\n\teembond\nqeqiter"
  },
  "option-qeqiter": {
    "prefix": "option-qeqiter",
    "body": "qeqiter",
    "description": "- Format: \tqeqiter maximum_number_iterations\nUnits \tNone\n- Default: \t20\n- Use: \tSets the maximum number of iterations that are allowed\n\tduring the QEq electronegativity equalisation scheme.\n\tOnly applies to systems where hydrogen is present.\n- See also: \teem qeq qeqtol qeqradius dcharge noqeem\nqeqradius"
  },
  "option-qeqradius": {
    "prefix": "option-qeqradius",
    "body": "qeqradius",
    "description": "- Format: \tqeqradius radius\nUnits \tAngstroms\n- Default: \t15.0\n- Use: \tSets the maximum radius for the calculation of the\n\tCoulomb term using the formula for two Slater s\n\ttype orbitals in the QEq electronegativity equalisation\n\tscheme. Beyond this radius the terms are calculated\n\tusing just the inverse distance. Generally the default\n\tvalue should be large enough for convergence. However,\n\tthe user may wish to try smaller values to achieve a\n\tfaster calculation. Note that failure to achieve\n\tsatisfactory convergence in an optimisation may be\n\tdue to this value being too small.\n- See also: \teem qeq qeqiter qeqtol dcharge noqeem\nqeqtol"
  },
  "option-qeqtol": {
    "prefix": "option-qeqtol",
    "body": "qeqtol",
    "description": "- Format: \tqeqtol tolerance\nUnits \tElectrons\n- Default: \t0.000001\n- Use: \tSets the tolerance on the change in the charges between\n\titerations of the QEq electronegativity equalisation\n\tscheme. This only applies to systems which contain\n\thydrogen.\n- See also: \teem qeq qeqiter qeqradius dcharge noqeem\nqerfc"
  },
  "option-qerfc": {
    "prefix": "option-qerfc",
    "body": "qerfc",
    "description": "- Format: \tqerfc <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <au/nm/pm> <ener/grad> <type_of_bond>\n\tatom1 atom2 rho rmax <1*flag>\nUnits \trho and rmax in Angstroms\n- Default: \tnone\n- Use: \tScreened Coulomb interaction using the complementary error function.\n\n\tE = [qi.qj/r].erfc(r/rho)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\tNOTE : The keyword \"noelectrostatics\" should be included when using\n\tthis potential to turn off the normal Ewald sum, otherwise the\n\tCoulomb interaction will be double counted.\n- See also: \tnoelectrostatics\nqgrid"
  },
  "option-qgrid": {
    "prefix": "option-qgrid",
    "body": "qgrid",
    "description": "- Format: \tqgrid nqx nqy nqz\nUnits \tnone\n- Default: \tnqx = nqy = nqz = 24\n- Use: \tSpecifies the grid dimensions for use in SPME. It is important that the\n\tuser checks that the energy is converged with respect to this grid. The\n\tsize will depend on the system and weighting between real/reciprocal\n\tspace chosen. The grid dimension must be large than or equal to the B spline\n\torder (default = 8)\n- See also: \trspeed veck accuracy ewaldrealradius spme bspline\nqincrement"
  },
  "option-qincrement": {
    "prefix": "option-qincrement",
    "body": "qincrement",
    "description": "- Format: \tqincrement\n\tatom1 atom2 delta <1*flag>\n- Default: \tdelta = 0.0\n- Use: \tIf the keyword qbond is given then the charges on the atoms are\n\tdetermined by bond increments given by this option. An example\n\tof the input is:\n\n\tqincrement\n\tO2 core C core -0.24\n\tO3 core C core 0.15\n\n\tNB: The order of the atoms is important in that the sign of delta\n\tchanges if the order is reversed. Consequently if atom1 and atom2\n\tare of the same type then delta must be zero. Hence, the value of\n\tdelta is applied with the input sign to atom1 and the negative of\n\tthis to atom2.\n- See also: \tqeq eem gasteiger qbond noqeem eembond\nqiterations"
  },
  "option-qiterations": {
    "prefix": "option-qiterations",
    "body": "qiterations",
    "description": "- Format: \tqiterations n <convergence_tolerance>\n- Default: \tn = 200, convergence_tolerance = 0.00000001\n- Use: \tAllows the user to change the default number of iterations and\n\tconvergence tolerance for iterative charge solves triggered by\n\tthe qiteration keyword\n- See also: \tqiterative\nqmmm"
  },
  "option-qmmm": {
    "prefix": "option-qmmm",
    "body": "qmmm",
    "description": "- Format: \tqmmm <mechanical/electronic>\nUnits \tNone\n- Default: \tNo QM/MM scheme\n- Use: \tControls whether a QM/MM scheme is used to modify the energy in\n\tGULP, and if so which scheme. The two options are:\n\n\tmechanical: This implies that the interactions within the MM\n\tregions and between the QM and MM regions are calculated, but\n\tnot within the QM region.\n\n\telectronic: This implies the same as mechanical embedding, except\n\tthat the Coulomb interactions between the QM and MM regions are\n\talso excluded since these are assumed to be accounted for by the\n\tQM portion of the calculation.\n\n\tNB: At present there are restrictions on which facilities will\n\twork in combination with this option. Only 0-D calculations with\n\tup to first derivatives are generally enabled for all models.\nqonsas"
  },
  "option-qonsas": {
    "prefix": "option-qonsas",
    "body": "qonsas",
    "description": "- Format: \tqonsas total_charge\nUnits \tAtomic units (i.e. electrons)\n- Default: \t0.0\n- Use: \tSpecifies the total charge on the SAS for the COSMIC method.\n\tNote that for charged systems the SAS will be constructed so\n\tthat the charge is neutralised. This option adds to the\n\tdefault charge on the SAS due to any net charge of the atoms.\n- See also: \tcosmo cosmic qsas\nqoverr2"
  },
  "option-qoverr2": {
    "prefix": "option-qoverr2",
    "body": "qoverr2",
    "description": "- Format: \tqoverr2 <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <au/nm/pm> <ener/grad>\n\tatom1 atom2 rmax <1*flag>\nUnits \trmax in Angstroms\n- Default: \tnone\n- Use: \tComputes the charge interaction as a local one based on:\n\n\tE = [qi.qj/r**2]\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\tNOTE : The keyword \"noelectrostatics\" should be included when using\n\tthis potential to turn off the normal Ewald sum, otherwise the\n\tCoulomb interaction will be double counted.\n\tNOTE : This expression is used for the Coulomb term in Accelrys's\n\timplementation of Dreiding.\n- See also: \tnoelectrostatics\nqreaxff"
  },
  "option-qreaxff": {
    "prefix": "option-qreaxff",
    "body": "qreaxff",
    "description": "- Format: \tqreaxff <n>\n\ti Qi <weight>\nUnits \tatomic units\n- Default: \tno ReaxFF charges to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tReaxFF charges for fitting. Note that i is the\n\tatom number in the unit cell, not the asymmetric unit.\n\n\tExample:\n\n\tqreaxff 1\n\t1 1.95\n\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq monopoleq\nqsolver"
  },
  "option-qsolver": {
    "prefix": "option-qsolver",
    "body": "qsolver",
    "description": "- Format: \tqsolver <itpack/lapack/bcg>\nUnits \tnone\n- Default: \titpack (serial) / bcg (parallel)\n- Use: \tSelects the algorithm for iterative charge solution in COSMO.\n\tNote that itpack can only be used in serial.\n- See also: \tqiterative parallel matrix_format\nqtaper"
  },
  "option-qtaper": {
    "prefix": "option-qtaper",
    "body": "qtaper",
    "description": "- Format: \tqtaper <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 C rmax <1*flag>\nUnits \tC in eV, rmax in Angs\n- Default: \tnone\n- Use: \tTapers the Coulomb interaction to a constant value, C, at short\n\tdistances. Currently implemented crudely as an interatomic\n\tpotential to stop Coulomb collapse. However, this won't avoid\n\tnumerical errors if atoms are started too close in the first\n\tplace. The potential uses a taper from rmax to 0.0 to match the\n\tCoulomb potential using the charges of the species to the constant\n\tvalue at the nucleus. This potential mimics the fact that at\n\tshort range the Coulomb term becomes damped by being an integral\n\trather than just a 1/r potential.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = [qi.qj/r].f(r) + C.(1-f(r)), where f(r) = polynomial taper\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential cutoffs are omitted from input.\n\nqwolf"
  },
  "option-qwolf": {
    "prefix": "option-qwolf",
    "body": "qwolf",
    "description": "- Format: \tqwolf <original/fennell> <eta> <rmax>\nUnits \teta in inverse Angstroms and rmax in Angstroms\n- Default: \tnone\n- Use: \tCalculates the electrostatic energy using the approximation to the Ewald\n\tsum due to Wolf et al (J. Chem. Phys., 110, 8254, 1999):\n\n\tEij = [qi.qj/r].erfc(eta*r) - lim{r->rmax}([qi.qj/rmax].erfc(eta*rmax))\n\n\tEi = - (erfc(eta*rmax)/(2*rmax) + eta/sqrt(pi))*qi**2\n\n\tNote: it is up to the user to set the eta and rmax values such that the\n\tEwald limit is recovered. At present the Wolf sum cannot be used with a\n\tdefect calculation.\n\n\tNB: The original Wolf sum has energy and forces that are inconsistent\n\twith each other (i.e. the forces are not the negative first derivative of the\n\tenergy). Hence GULP uses forces that are based on the Wolf energy by default.\n\tIf you want to force the use of the original Wolf sum then you can use the\n\t\"original\" sub-option, but don't expect optimisations to converge properly.\n\tYou have been warned!\n\n\tThe \"fennell\" sub-option specifies that the alternative form of the Wolf\n\tsum due to Fennell and Gezelter (J. Chem. Phys., 124, 234104 (2006)) be\n\tused. The advantage of their method is that the potential and force are\n\tconsistent while neither is discontinuous at the cut-off radius. The only\n\tdownside is that the potential is different from the Ewald result. However,\n\tpotential differences (and therefore energetics) should be well-described.\n\tThe energy expression for this form is:\n\n\tEij = qi*qj*[erfc(eta*r)/r - erfc(eta*rmax)/rmax + (r - rmax)*\n\t(erfc(eta*rmax)/rmax**2 +\n\t(2*eta/sqrt(pi))*exp(-(eta*rmax)**2)/rmax)\n\n- See also: \tnoelectrostatics\nradial_force"
  },
  "option-radial_force": {
    "prefix": "option-radial_force",
    "body": "radial_force",
    "description": "- Format: \tradial_force K x y z\nUnits \tK in eV/Ang, x, y, z in Ang\n- Default: \tNo radial force\n- Use: \tThis option allows a radial harmonic force to be applied\n\tto a system with a force constant K and origin of force\n\tat (x,y,z). Because of the point nature of the force it\n\tcan only be applied to finite systems. The energy of the\n\tcontribution is given by:\n\n\tE = sum(i) 1/2 K*[(x_i - x)**2 + (y_i - y)**2 + (z_i - z)**2]\n\n\twhere the sum is over all atoms, i.\nrandom"
  },
  "option-random": {
    "prefix": "option-random",
    "body": "random",
    "description": "- Format: \trandom ncall1 ncall2 ncall3 <G>\nUnits \tNone\n- Default: \tncall1 = ncall2 = ncall3 = 0\n- Use: \tThis option is used for consistent restarting of runs that utilise\n\trandom numbers by keeping track of how many calls were made during\n\tthe previous run so that the position in the sequence of numbers\n\tcan be recreated on restart. There are three types of random number\n\tgenerated in GULP at present and so the three numbers are to track the\n\tnumber of calls for each generator.\n\tThe optional letter G at the end indicates that the Gaussian number\n\tgenerator was called last; this is important in obtaining the proper\n\tsequence going forward in some cases.\n\tNB: This option is not intended for user setting and is included to\n\texplain why this line is present in the restart file.\n- See also: \tmd\nrangeforsmooth"
  },
  "option-rangeforsmooth": {
    "prefix": "option-rangeforsmooth",
    "body": "rangeforsmooth",
    "description": "- Format: \trangeforsmooth <range>\nUnits \tAngstroms\n- Default: \t0.0\n- Use: \tSmooths the inclusion of points on the solvent-accessible\n\tsurface to make the energy surface more continuous.\n- See also: \tcosmo pointsperatom segmentsperatom\nrbins"
  },
  "option-rbins": {
    "prefix": "option-rbins",
    "body": "rbins",
    "description": "- Format: \trbins <n>\n- Default: \t100\n- Use: \tUsed within the pdf input block for PDF calculations.\n\tSets the number of bins to be used for PDF correlation function output\n- See also: \tPDFkeep PDFcut\nrcartesian"
  },
  "option-rcartesian": {
    "prefix": "option-rcartesian",
    "body": "rcartesian",
    "description": "- Format: \trcartesian replica_number\n\tx1 y1 z1 <r1>\n\tx2 y2 z2 <r2>\n\t.. .. ..\n\txN yN zN <rN>\nUnits \tAngstroms\n- Default: \tNone\n- Use: \tSpecifies the coordinates of a replica for the nudged elastic\n\tband method. The number of coordinates must match the number\n\tof atoms in the initial structure. This option is primarily\n\tuseful for restarting. If the coordinates of the replicas are\n\tnot given then the values are initialised based on a linear\n\tinterpolation between the initial and final states. The radii\n\tof the ions can be optionally given on the end of the line if\n\ta breathing shell model is being used. If not specified then\n\tthey are assumed to be zero.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations neb\n\tfcartesian rfractional ffractional rcell fcell fvectors\nrcell"
  },
  "option-rcell": {
    "prefix": "option-rcell",
    "body": "rcell",
    "description": "- Format: \trcell replica_number\n\ta b c alpha beta gamma (for 3-D)\n\ta b alpha (for 2-D)\n\ta (for 1-D)\nUnits \tAngstroms for a/b/c & degrees for alpha/beta/gamma\n- Default: \tNone\n- Use: \tSpecifies the unit cell of a replica for the nudged elastic band\n\tmethod. This option is primarily useful for restarting. If the\n\tunit cells of the replicas are not given then the values are\n\tinitialised based on a linear interpolation between the initial\n\tand final states. The number of cell parameters must match the\n\tdimensionality of the initial system.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian rfractional ffractional fcell neb fvectors\nrcspatial"
  },
  "option-rcspatial": {
    "prefix": "option-rcspatial",
    "body": "rcspatial",
    "description": "- Format: \trcspatial rcspatial_value <rcspatial_BO_value>\n\trcspatial anisotropic rcspatial_x rcspatial_y rcspatial_z <rcspatial_BO_x rcspatial_BO_y rcspatial_BO_z>\nUnits \tAngstroms\n- Default: \tSet equal to the largest potential cutoff in real space.\n- Use: \tCan be used to set the domain size in the spatial decomposition to make\n\tit smaller than the potential cutoff. In this case looping over multiple\n\tcells is needed.\n\tIf the anisotropic suboption is used then a different domain size is applied along each axis.\n- See also: \tspatial\nrdirection"
  },
  "option-rdirection": {
    "prefix": "option-rdirection",
    "body": "rdirection",
    "description": "- Format: \trdirection <frac> x_in y_in z_in x_out y_out z_out\nUnits \tdimensionless\n- Default: \tx_in = y_in = z_in = x_out = y_out = z_out = 1\n- Use: \tIf the Raman susceptibilites are calculated then this\n\toption specifies in the directions of the incident and\n\toutgoing photons.\n\n\tNOTE : This option only applies to a gamma point calculation\n\n\tBy default the directions are assumed to be in Cartesian space\n\tunless the \"frac\" sub-option is given in which case they will\n\tbe taken relative to the crystal axes. In all cases, the\n\tdirections will be normalised, such that the absolute\n\tmagnitude does not influence the result.\n- See also: \tphonon raman\nreaction"
  },
  "option-reaction": {
    "prefix": "option-reaction",
    "body": "reaction",
    "description": "- Format: \treaction <n>\n\tncfg energy <weight> (icfg fcfg) x ncfg\nUnits \teV\n- Default: \tno reaction energies to be fitted\n- Use: \tSubsection of observables, used for specifying reaction energies\n\tin terms of configuration energies.\n\n\tIn the input line, ncfg is the number of configurations to be\n\tused in the reaction (which must be less than or equal to the\n\tnumber specified in the input so far), and then for each ncfg\n\tcase the configuration number and scale factor is given, followed\n\tby the target energy and optionally a weight.\n\n\tExample:\n\n\tIf configuration 1 is H2O, configuration 2 is CO and configuration\n\t3 is the 2H2O...CO complex whose heat of formation is -0.21 eV and\n\ta weight of 10.0 is desired then the input for this would be like:\n\n\treaction 1\n\t3 -0.21 10.0 1 -2.0 2 -1.0 3 1.0\n\n\ti.e. The coefficients are negative for the left-hand side and positive\n\tfor the RHS.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq monopoleq qreaxff fbond relax reaction\nreaxff0_bond"
  },
  "option-reaxff0_bond": {
    "prefix": "option-reaxff0_bond",
    "body": "reaxff0_bond",
    "description": "- Format: \treaxff0_bond p_boc1 p_boc2 <2 x flags>\nreaxff0_lonepair"
  },
  "option-reaxff0_lonepair": {
    "prefix": "option-reaxff0_lonepair",
    "body": "reaxff0_lonepair",
    "description": "- Format: \treaxff0_lonepair p_lp1 <1 x flag>\nreaxff0_over"
  },
  "option-reaxff0_over": {
    "prefix": "option-reaxff0_over",
    "body": "reaxff0_over",
    "description": "- Format: \treaxff0_over p_ovun3 p_ovun4 p_ovun6 p_ovun7 p_ovun8 <5 x flags>\nreaxff0_penalty"
  },
  "option-reaxff0_penalty": {
    "prefix": "option-reaxff0_penalty",
    "body": "reaxff0_penalty",
    "description": "- Format: \treaxff0_penalty p_pen2 p_pen3 p_pen4 <3 x flags>\nreaxff0_torsion"
  },
  "option-reaxff0_torsion": {
    "prefix": "option-reaxff0_torsion",
    "body": "reaxff0_torsion",
    "description": "- Format: \treaxff0_torsion p_tor2 p_tor3 p_tor4 p_cot2 <4 x flags>\nreaxff0_valence"
  },
  "option-reaxff0_valence": {
    "prefix": "option-reaxff0_valence",
    "body": "reaxff0_valence",
    "description": "- Format: \treaxff0_valence p_val7 p_val8 p_val9 p_val10 <4 x flags>\nreaxff0_vdw"
  },
  "option-reaxff0_vdw": {
    "prefix": "option-reaxff0_vdw",
    "body": "reaxff0_vdw",
    "description": "- Format: \treaxff0_vdw p_vdw1 <1 x flag>\nreaxff1_angle"
  },
  "option-reaxff1_angle": {
    "prefix": "option-reaxff1_angle",
    "body": "reaxff1_angle",
    "description": "- Format: \treaxff1_angle\n\tspecies <core/shell> p_val3 p_val5 <2 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters for the species-wise angle parameters.\n\tp_val3 is used in the calculation of the ReaxFF function f7 (eqn 13b).\n\tp_val5 is used in the calculation of the ReaxFF function f8 (eqn 13c).\n- See also: \treaxff1_radii reaxff1_valence reaxff1_over reaxff1_under reaxff1_morse\n\treaxff1_morse\nreaxff1_include_under"
  },
  "option-reaxff1_include_under": {
    "prefix": "option-reaxff1_include_under",
    "body": "reaxff1_include_under",
    "description": "- Format: \treaxff1_include_under\n\tspecies <0/1>\n- Default: \t1 (yes) for 1st row elements and 0 (no) for everything else\n- Use: \tIn the ReaxFF formalism the under coordination formalism due to pi bonding\n\tis modified for elements with a mass greater than 21 amu. This option\n\tallows the user to select which form of the under coordination correction\n\tis applied for each element. Here a value of 1 => first row formula and 0\n\timplies the 2nd row form. No other values are allowed.\n- See also: \treaxff1_under\nreaxff1_lonepair"
  },
  "option-reaxff1_lonepair": {
    "prefix": "option-reaxff1_lonepair",
    "body": "reaxff1_lonepair",
    "description": "- Format: \treaxff1_lonepair\n\tspecies <core/shell> n_lp_opt p_lp2 <2 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters for the species-wise lone pair energy parameters.\n\tn_lp_opt is the optimal number of lone pairs used to construct delta_lp (eqn 9).\n\tp_lp2 is the parameter that scales the lone pair energy for each atom (eqn 10).\n- See also: \treaxff1_radii reaxff1_valence reaxff1_over reaxff1_under reaxff1_angle\n\treaxff1_morse\nreaxff1_morse"
  },
  "option-reaxff1_morse": {
    "prefix": "option-reaxff1_morse",
    "body": "reaxff1_morse",
    "description": "- Format: \treaxff1_morse <au/kcal/kjmol>\n\tspecies <core/shell> alpha Dij rvdw gamma_w <4 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters for the species-wise morse parameters for the\n\tVDW energy (eqns 21a and 21b). In the final morse potential,\n\tDij = sqrt(Dij(i)*Dij(j)), alpha_ij = sqrt(alpha(i)*alpha(j)),\n\tr_vdw = 2*sqrt(rvdw(i)*rvdw(j))\n- See also: \treaxff1_radii reaxff1_valence reaxff1_over reaxff1_under reaxff1_angle\n\treaxff2_bo reaxff2_bond\nreaxff1_over"
  },
  "option-reaxff1_over": {
    "prefix": "option-reaxff1_over",
    "body": "reaxff1_over",
    "description": "- Format: \treaxff1_over\n\tspecies <core/shell> p_boc3 p_boc4 p_boc5 p_ovun2 <4 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters for the species wise overcoordination parameters.\n\tParameters p_boc3, p_boc4, p_boc5 are used to compute the functions f4 & f5\n\tthat correct the bond order (eqns 4e & 4f). The final parameter, p_ovun2, is\n\tpart of the overcoordination energy (eqn 11a).\n- See also: \treaxff1_radii reaxff1_valence reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse\nreaxff1_radii"
  },
  "option-reaxff1_radii": {
    "prefix": "option-reaxff1_radii",
    "body": "reaxff1_radii",
    "description": "- Format: \treaxff1_radii\n\tspecies <core/shell> r_sigma r_pi r_pipi <3 x flags>\n- Default: \tNone\n- Use: \tSpecifies the radii for a species that are to be used in the ReaxFF bond order\n\tcalculation. Here the uncorrected bond order is given by:\n\n\tBO' = exp(p_bo1*(r/r_sigma)**p_bo2) + exp(p_bo3*(r/r_pi)**p_bo4) +\n\texp(p_bo5*(r/r_pipi)**p_bo6)\n\n\tThe remaining parameters, p_bo1 - p_bo6, are input via the reaxff2_bo option.\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff2_bo\nreaxff1_under"
  },
  "option-reaxff1_under": {
    "prefix": "option-reaxff1_under",
    "body": "reaxff1_under",
    "description": "- Format: \treaxff1_under\n\tspecies <core/shell> p_ovun5 <1 x flag>\n- Default: \tNone\n- Use: \tSpecifies the parameter for the species-wise undercoordination parameters.\n\tp_ovun5 scales the undercoordination energy (eqn 12).\n- See also: \treaxff1_radii reaxff1_valence reaxff1_over reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_include_under\nreaxff1_valence"
  },
  "option-reaxff1_valence": {
    "prefix": "option-reaxff1_valence",
    "body": "reaxff1_valence",
    "description": "- Format: \treaxff1_valence\n\tspecies <core/shell> Val_normal Val_boc Val_lp Val_angle <4 x flags>\n- Default: \tNone\n- Use: \tSpecifies the valence states for a species that are to be used in the ReaxFF\n\tcalculation of delta values. The value of delta' (eqn 3a) is given by:\n\n\tdelta'(i) = - Val_normal(i) + sum(j=1->neigh(i)) BO_ij'\n\n\tThere is a second valence used for delta'_boc (eqn 3b):\n\n\tdelta'_boc(i) = - Val_boc(i) + sum(j=1->neigh(i)) BO_ij'\n\n\tThere is a third valence used for delta_e (eqn 7) as part of the lone pair\n\tenergy:\n\n\tdelta_e(i) = - Val_lp(i) + sum(j=1->neigh(i)) BO_ij\n\n\tThere is a fourth valence used for delta_angle (eqn 13e):\n\n\tdelta_angle(i) = - Val_angle(i) + sum(j=1->neigh(i)) BO_ij\n\n- See also: \treaxff1_radii reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse\nreaxff2_bo"
  },
  "option-reaxff2_bo": {
    "prefix": "option-reaxff2_bo",
    "body": "reaxff2_bo",
    "description": "- Format: \treaxff2_bo <over> <bo13>\n\tspecies1 <core/shell> species2 <core/shell> p_bo1 p_bo2 p_bo3 p_bo4 p_bo5 p_bo6 <6xflags>\n- Default: \tNone\n- Use: \tSpecifies the pairwise parameters between species that are to be used in the\n\tReaxFF bond order calculation. Here the uncorrected bond order is given by:\n\n\tBO' = exp(p_bo1*(r/r_sigma)**p_bo2) + exp(p_bo3*(r/r_pi)**p_bo4) +\n\texp(p_bo5*(r/r_pipi)**p_bo6)\n\n\tThe remaining parameters, r_sigma, r_pi, r_pipi, are input via the reaxff1_radii option.\n\tThe two sub-option words control if the bond order is corrected:\n\treaxff2_bo over => correct for overcoordination using f1\n\treaxff2_bo bo13 => correct for 1-3 terms using f4 and f5\n\treaxff2_bo over bo13 => correct for overcoordination using f1 and 1-3 terms using f4 and f5\n\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bond reaxff2_over reaxff2_morse reaxff2_pen\nreaxff2_bond"
  },
  "option-reaxff2_bond": {
    "prefix": "option-reaxff2_bond",
    "body": "reaxff2_bond",
    "description": "- Format: \treaxff2_bond\n\tspecies1 <core/shell> species2 <core/shell> De_sigma De_pi De_pipi p_be1 p_be2 <5xflags>\n- Default: \tNone\n- Use: \tSpecifies the pairwise parameters between species that are to be used in the\n\tReaxFF bond order energy. Here the bond order energy is given by:\n\n\tE_bond = - De_sigma*BO_sigma*exp(p_be1*(1-(BO_sigma)**p_be2)) - De_pi*BO_pi\n\t- De_pipi*BO_pipi\n\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_over reaxff2_morse reaxff2_pen\nreaxff2_morse"
  },
  "option-reaxff2_morse": {
    "prefix": "option-reaxff2_morse",
    "body": "reaxff2_morse",
    "description": "- Format: \treaxff2_morse\n\tspecies1 <core/shell> species2 <core/shell> De alpha r0 r_sigma r_pi r_pipi <6 x flags>\n- Default: \tNone\n- Use: \tSpecifies pairwise Morse potential parameters for ReaxFF\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff2_pen\nreaxff2_over"
  },
  "option-reaxff2_over": {
    "prefix": "option-reaxff2_over",
    "body": "reaxff2_over",
    "description": "- Format: \treaxff2_over\n\tspecies1 <core/shell> species2 <core/shell> p_ovun1 <1 x flag>\n- Default: \tNone\n- Use: \tSpecifies the pairwise parameters between species that are to be used in the\n\tReaxFF overcoordination energy. Here the overcoordination energy is given by:\n\n\tE_over_i = (sum(j=>neigh(i)) p_ovun1(ij).De_sigma.BO_ij).delta_lpcorr(i)\n\t-------------------------------------------------------------\n\t(delta_lpcorr(i) + Val_i) * (1 + exp(p_ovun2*delta_lpcorr(i))\n\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_morse reaxff2_pen\nreaxff2_pen"
  },
  "option-reaxff2_pen": {
    "prefix": "option-reaxff2_pen",
    "body": "reaxff2_pen",
    "description": "- Format: \treaxff2_pen\n\tspecies1 <core/shell> species2 <core/shell> p_pen1 p_pen2 p_pen3 <3 x flags>\n- Default: \tNone\n- Use: \tSpecifies pairwise penalty energy parameters for ReaxFF. The penalty energy is\n\tgiven by:\n\n\tEpen = sum [ p_pen1 * (BO_ij - delta_i - p_pen2*delta**4 - p_pen3)**2]\n\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff2_morse\nreaxff3_angle"
  },
  "option-reaxff3_angle": {
    "prefix": "option-reaxff3_angle",
    "body": "reaxff3_angle",
    "description": "- Format: \treaxff3_angle <au/kcal/kjmol>\n\tspecies1 <core/shell> species2 <core/shell> species3 <core/shell> &\n\ttheta_00 p_val1 p_val2 p_val4 p_val7 <p_val6> <6 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters that determine the angular valence energy that depend\n\ton a triad of species in the ReaxFF force field. Here species1 is the pivot\n\tatom of the three-body like term. Here the valence energy is given by:\n\n\tE_val = f7(BO_12)*f7(BO_13)*f8(delta(1))*p_val1*(1-exp(-p_val2*(theta_0 - theta)**2))\n\n\tThe function f7 is given by:\n\n\tf7(BO) = 1 - exp(-p_val3*BO**p_val4)\n\n\tIf not explicitly given, the value of p_val6 is taken from the global value.\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff3_pen\n\treaxff3_conjugation\nreaxff3_conjugation"
  },
  "option-reaxff3_conjugation": {
    "prefix": "option-reaxff3_conjugation",
    "body": "reaxff3_conjugation",
    "description": "- Format: \treaxff3_conjugation <au/kcal/kjmol>\n\tspecies1 <core/shell> species2 <core/shell> species3 <core/shell> &\n\tp_coa1 p_coa2 p_coa3 p_coa4 <4 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters that determine the three-body conjugation energy that depend\n\ton a triad of species in the ReaxFF force field. Here species1 is the pivot\n\tatom of the three-body like term. Here the valence energy is given by:\n\n\tE_val = p_coa1*(1/(1+exp(p_coa2*delta_1_val)))*\n\texp(-p_coa3*(-BO_12 + sum(n=1->neighbours of 2) BO_2n))*\n\texp(-p_coa3*(-BO_13 + sum(n=1->neighbours of 3) BO_3n))*\n\texp(-p_coa4*(BO_12 - 1.5)**2)*exp(-p_coa4*(BO_13 - 1.5)**2)\n\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff3_angle\n\treaxff3_hbond reaxff3_angle reaxff4_torsion\nreaxff3_hbond"
  },
  "option-reaxff3_hbond": {
    "prefix": "option-reaxff3_hbond",
    "body": "reaxff3_hbond",
    "description": "- Format: \treaxff3_hbond <au/kcal/kjmol>\n\tspecies1 <core/shell> species2 <core/shell> species3 <core/shell> r0_hb p_hb1 &\n\tp_hb2 p_hb3 <4 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameter that determines the hydrogen bonding energy that depends\n\ton a triad of species in the ReaxFF force field (eqn 18). Here species1 is the pivot\n\tatom of the three-body like term and is usually hydrogen.\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff3_angle\n\treaxff3_pen reaxff4_torsion\nreaxff3_pen"
  },
  "option-reaxff3_pen": {
    "prefix": "option-reaxff3_pen",
    "body": "reaxff3_pen",
    "description": "- Format: \treaxff3_pen <au/kcal/kjmol>\n\tspecies1 <core/shell> species2 <core/shell> species3 <core/shell> p_pen1 <1 x flag>\n- Default: \tNone\n- Use: \tSpecifies the parameter that determines the angular penalty energy that depends\n\ton a triad of species in the ReaxFF force field (eqn 14a). Here species1 is the pivot\n\tatom of the three-body like term.\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff3_angle\n\treaxff3_hbond reaxff3_conjugation reaxff4_torsion\nreaxff4_torsion"
  },
  "option-reaxff4_torsion": {
    "prefix": "option-reaxff4_torsion",
    "body": "reaxff4_torsion",
    "description": "- Format: \treaxff4_torsion <au/kcal/kjmol>\n\tspec1 <core/shell> spec2 <core/shell> spec3 <core/shell> spec4 <core/shell> &\n\tV1 V2 V3 p_tor1 p_cot1 <5 x flags>\n- Default: \tNone\n- Use: \tSpecifies the parameters that determine the torsional energy that depends\n\ton a quartet of species in the ReaxFF force field (eqn 16a). Here the species\n\tare connected 1-2-3-4 to yield the relevant torsional angle.\n\tV1, V2, V3 are the barrier heights for different powers of the cosine of phi.\n\tp_tor1 is a scaling factor for an exponent in the V2 contribution.\n\tp_cot1 is a scaling factor for the conjugation energy (eqn 17a).\n- See also: \treaxff1_valence reaxff1_over reaxff1_under reaxff1_lonepair reaxff1_angle\n\treaxff1_morse reaxff1_radii reaxff2_bo reaxff2_bond reaxff2_over reaxff3_angle\n\treaxff3_pen reaxff4_torsion\nreaxff_chi"
  },
  "option-reaxff_chi": {
    "prefix": "option-reaxff_chi",
    "body": "reaxff_chi",
    "description": "- Format: \treaxff_chi\n\tspecies <core/shell> chi <1 x flag>\n- Default: \tNone\n- Use: \tSpecifies the electronegativity for the species in the ReaxFF charge equilibration\n\tscheme.\n- See also: \treaxff_mu reaxff_gamma qiterative reaxff_qshell norxQ reaxff_q0\nreaxff_gamma"
  },
  "option-reaxff_gamma": {
    "prefix": "option-reaxff_gamma",
    "body": "reaxff_gamma",
    "description": "- Format: \treaxff_gamma\n\tspecies <core/shell> gamma <1 x flag>\n- Default: \tNone\n- Use: \tSpecifies the shielding parameter gamma for the species in the ReaxFF charge equilibration\n\tscheme.\n- See also: \treaxff_chi reaxff_mu qiterative reaxff_qshell norxQ reaxff_q0\nreaxff_mu"
  },
  "option-reaxff_mu": {
    "prefix": "option-reaxff_mu",
    "body": "reaxff_mu",
    "description": "- Format: \treaxff_mu\n\tspecies <core/shell> mu <1 x flag>\n- Default: \tNone\n- Use: \tSpecifies the hardness for the species in the ReaxFF charge equilibration\n\tscheme.\n- See also: \treaxff_chi reaxff_gamma qiterative reaxff_qshell norxQ reaxff_q0\nreaxff_q0"
  },
  "option-reaxff_q0": {
    "prefix": "option-reaxff_q0",
    "body": "reaxff_q0",
    "description": "- Format: \treaxff_q0\n\tspecies <core/shell> q0\n- Default: \t0.0\n- Use: \tSpecifies the equilibrium isolated species charge in the ReaxFF charge equilibration\n\tscheme.\n- See also: \treaxff_chi reaxff_gamma qiterative reaxff_qshell norxQ reaxff_mu\nreaxff_qshell"
  },
  "option-reaxff_qshell": {
    "prefix": "option-reaxff_qshell",
    "body": "reaxff_qshell",
    "description": "- Format: \treaxff_qshell\n\tspecies <core/shell> dMu Qs beta <3 x flags>\n- Default: \tdMu = 0.0, Qs & beta no default\n- Use: \tSpecifies the optional shell structure modifier for the ReaxFF charges.\n\tThis term adds an extra energy term to the electronegativity equalisation\n\tscheme that suppresses charges above a value Qs. This can often occur due\n\tto shell structure that breaks the validity of the harmonic charge expansion.\n\tThe energy penalty takes the form of a fourth-order polynomial:\n\n\tE_shell(q) = dMu*(q - Qs)**4 for q > Qs ; 0 for q < Qs\n\n- See also: \treaxff_chi reaxff_mu qiterative reaxff_gamma\nreaxff_r12"
  },
  "option-reaxff_r12": {
    "prefix": "option-reaxff_r12",
    "body": "reaxff_r12",
    "description": "- Format: \treaxff_r12\n\tspecies <core/shell> r12 <1 x flag>\n- Default: \tNone\n- Use: \tTest modification option at present.\n- See also: \treaxff_chi reaxff_mu qiterative reaxff_qshell reaxff_r12\nreaxfftol"
  },
  "option-reaxfftol": {
    "prefix": "option-reaxfftol",
    "body": "reaxfftol",
    "description": "- Format: \treaxfftol bomin <anglemin> <angleprod> <hbondmin> <hbonddist> <torsionprod>\n- Use: \tThis command sets a number of tolerances that control the behaviour of ReaxFF.\n\n\tbomin - the general threshold for bond orders in pairwise terms\n\tanglemin - the threshold for bond orders in valence, penalty and 3-body conjugation\n\tangleprod - a threshold for the product of bond orders (1-2 x 2-3, where 2 = pivot)\n\tHard coded in original program to 0.001, but this leads to discontinuities\n\thbondmin - threshold for A-H bond order in a hydrogen bond. Hard coded to 0.01 in\n\toriginal code.\n\thbonddist - threshold for A...B distance in A-H...B hydrogen bond. Hard coded to\n\t7.5 Ang in original code.\n\ttorsionprod- a threshold for the product of bond orders (1-2 x 2-3 x 3-4) for torsion\n\tinteractions.\n\n- See also: \treaxffcutoff\nregion_1"
  },
  "option-region_1": {
    "prefix": "option-region_1",
    "body": "region_1",
    "description": "- Format: \tregion_1\n\tatomic_symbol x y z <charge> <occupancy> <radius> <mol no> ....\n\t<mol_cell_index> <3*flags> for each ion\nUnits \tcoordinates in Angstroms and charges in electrons\n- Use: \tSpecifies an explicit region 1. Primarily used for restarts\n\tfrom previous runs, but can be used to allow the user to generate\n\tcomplicated defects.\n- See also: \tdefect centre size regi_before bulk_noopt\nreldef"
  },
  "option-reldef": {
    "prefix": "option-reldef",
    "body": "reldef",
    "description": "- Format: \treldef\n\tnreg1 x atom numbers\n- Use: \tUsed by the program to enable restarts when performing\n\tdefect calculations involving bond specifications. This\n\tcommand lists the perfect atom number that each defect\n\tatom started life as. A zero indicates an interstitial\n\tspecies. Normally this list should only need to be\n\twritten by the program rather than the user.\n- See also: \tdefect deflist centre region restore save size\nreperfc"
  },
  "option-reperfc": {
    "prefix": "option-reperfc",
    "body": "reperfc",
    "description": "- Format: \treperfc <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <ener/grad> <type_of_bond>\n\tatom1 atom2 A beta <rmin> rmax <3*flags>\nUnits \tA in eV and beta in Angs\n- Default: \tnone\n- Use: \tSpecifies the parameters of an reperfc potential, which has the form:\n\n\tE_ij = A.erfc(r/beta)/r\n\n- See also: \tqerfc erferfc erfpot\nresetvectors"
  },
  "option-resetvectors": {
    "prefix": "option-resetvectors",
    "body": "resetvectors",
    "description": "- Format: \tresetvectors no_of_steps\nUnits \tNone\n- Default: \t1\n- Use: \tSpecifies the frequency with which the interatomic vector table is\n\tupdated if using the storevectors keyword.\n- See also: \tstorevectors extracutoff\nrfractional"
  },
  "option-rfractional": {
    "prefix": "option-rfractional",
    "body": "rfractional",
    "description": "- Format: \trfractional replica_number\n\tx1 y1 z1 <r1>\n\tx2 y2 z2 <r2>\n\t.. .. ..\n\txN yN zN <rN>\nUnits \tFractional\n- Default: \tNone\n- Use: \tSpecifies the fractional coordinates of a replica for the nudged\n\telastic band method. The number of coordinates must match the number\n\tof atoms in the initial structure. This option is primarily\n\tuseful for restarting. If the coordinates of the replicas are\n\tnot given then the values are initialised based on a linear\n\tinterpolation between the initial and final states. The radii\n\tof the ions can be optionally given on the end of the line if\n\ta breathing shell model is being used. If not specified then\n\tthey are assumed to be zero.\n- See also: \tnebspring nebtolerance nodneb\n\tnebreplica nebtangent nebrandom nebiterations rcartesian\n\tfcartesian ffractional rcell fcell neb fvectors\nrmax"
  },
  "option-rmax": {
    "prefix": "option-rmax",
    "body": "rmax",
    "description": "- Format: \trmax <n>\nUnits \tAngstroms\n- Default: \t5.0\n- Use: \tUsed within the pdf input block for PDF calculations.\n\tSets the maximum radius for atomic pairs to be generated.\n- See also: \tPDFkeep PDFcut\nrspeed"
  },
  "option-rspeed": {
    "prefix": "option-rspeed",
    "body": "rspeed",
    "description": "- Format: \trspeed rspeed_value\n- Default: \t1.0\n- Use: \tRelative speed for reciprocal and real space terms to be calculated.\n\tFormulae for determining optimum eta value assume rspeed=1.0. However,\n\tcalculations can be speeded up by using larger values for small\n\tsystems (e.g. 2.0) or small values for large systems (0.25)\n\tas reciprocal space calculation is generally faster.\n- See also: \tnoexclude qwolf ewaldrealradius accuracy veck index_k\nrtol"
  },
  "option-rtol": {
    "prefix": "option-rtol",
    "body": "rtol",
    "description": "- Format: \trtol scale_factor\nUnits \tnone\n- Default: \t1.2\n- Use: \tBond length tolerance when deciding if two atoms are bonded.\n\tNumber multiplies the sum of the covalent radii.\nryckaert"
  },
  "option-ryckaert": {
    "prefix": "option-ryckaert",
    "body": "ryckaert",
    "description": "- Format: \tryckaert (or torsion ryck) norder <type_of_bond>\n\tatom1 atom2 atom3 atom4 k0 rmax(1-2) rmax(2-3) rmax(3-4) rmax(1-4) <flags*norder+1>\n\tnorder*coefficients\nUnits \tk0 in eV, rmax in Angstroms, coefficients in eV\n- Default: \tnone\n- Use: \tTorsional potential about atoms 2 and 3. Polynomial expansion in\n\tcos(phi) up to fifth order maximum.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion outofplane torangle torharm torexp uff4\nrydberg"
  },
  "option-rydberg": {
    "prefix": "option-rydberg",
    "body": "rydberg",
    "description": "- Format: \trydberg <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 A B r0 <rmin> rmax <3*flags>\nUnits \tA in eV, r0 in Angs\n- Use: \tRydberg potential also found in the following article\n\tRose/Smith/Guinea/Ferrante potential (Phys. Rev. B,\n\t29, 2963 (1984)) - used in modelling metals.\n\n\tE = -A.[1+B*((r/r0)-1)].exp(-B*((r/r0)-1))\n\nsample"
  },
  "option-sample": {
    "prefix": "option-sample",
    "body": "sample",
    "description": "- Format: \tsample value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - if integer, then value is by default\n\ta multiple of the timestep or if non-integer then by\n\tdefault is the time in picoseconds.\n- Use: \tControls how often the properties of the molecular\n\tdynamics run are to be sampled and output to the\n\tstandard output channel. Averaged properties are also\n\tbased on these samples.\n- See also: \tmd timestep equilibration production temperature\n\ttscale write nolist delay_force end_force\nsasexclude"
  },
  "option-sasexclude": {
    "prefix": "option-sasexclude",
    "body": "sasexclude",
    "description": "- Format: \tsasexclude natom_min <natom_max>\n- Default: \tInclude all particles as specified by sasparticles option\n- Use: \tAllows the user to specifically exclude a range of atoms\n\tfrom being involved in determining the solvent accessible\n\tsurface.\n\n\te.g.\n\tsasexclude 10\n\n\twould exclude atom 10 from contributing to the SAS, while\n\n\tsasexclude 10 20\n\n\twould exclude atoms from 10 to 20 from the SAS. Note that\n\tthe atom numbers are those in the full cell rather than\n\tthe asymmetric unit.\n- See also: \tsasparticles\nsasparticles"
  },
  "option-sasparticles": {
    "prefix": "option-sasparticles",
    "body": "sasparticles",
    "description": "- Format: \tsasparticles <cores_only/both_cores_and_shells>\n- Default: \tcores_only\n- Use: \tIn all calculations the cores define the position of the\n\tsolvent accessible surface. This option controls whether\n\tthe potential is determined by the sum of the core and\n\tshell charges at the core position (cores_only) or by\n\tthe explicit potential due to both the core and shell\n\t(both)\n- See also: \tcosmo sasexclude\nsbulkenergy"
  },
  "option-sbulkenergy": {
    "prefix": "option-sbulkenergy",
    "body": "sbulkenergy",
    "description": "- Format: \tsbulkenergy <bulk energy of surface region 1>\nUnits \teV\n- Use: \tSpecifies the energy that the atoms of a surface region 1 would\n\thave had in the bulk material. This value is determined when\n\tbuilding the surface slab and is required to calculate the\n\tsurface energy.\n\tAs an example, consider a surface region 1 of formula Mg24O24 -\n\there the value would be 24 times the value of the bulk MgO energy\n\tfor the primitive cell as calculated by GULP.\n- See also: \tsregion2\nscale"
  },
  "option-scale": {
    "prefix": "option-scale",
    "body": "scale",
    "description": "- Format: \tscale <real_number>\nUnits \tnone\n- Default: \t1.0\n- Use: \tScales subsequent cell vectors and cartesian coordinates by the\n\tscale factor.\nscan_cell"
  },
  "option-scan_cell": {
    "prefix": "option-scan_cell",
    "body": "scan_cell",
    "description": "- Format: \tscan_cell d_a d_b d_c d_alpha d_beta d_gamma nstep (for 3-D)\n\tscan_cell d_a d_b d_alpha nstep (for 2-D)\n\tscan_cell d_a nstep (for 1-D)\n\tscan_cell strain e1 e2 e3 e4 e5 e6 nstep (for 3-D)\n\tscan_cell strain e1 e2 e3 nstep (for 2-D)\n\tscan_cell strain e1 nstep (for 1-D)\nUnits \tAngstrom for d_a, d_b, d_c and degrees for d_alpha, d_beta, d_gamma\n- Use: \tAllows a scan over cell parameters to be performed. Here d_a, d_b\n\tand d_c are the changes in cell lengths, while d_alpha, d_beta and\n\td_gamma are the changes in cell angles. It is recommend that this\n\toption be only used for either constant volume calculations or that\n\tit is used in conjunction with the ocell keyword when the cell is\n\tbeing varied. The number of steps is given by nstep (each step\n\twill change cell parameter a by d_a/nstep, for example)\n\tNote that the translate and scan_cell options are mutually exclusive.\n\n\tNB A value for the change in cell parameters that causes the cell\n\tto go negative is not allowed.\n\n\tIf strain is specified after the option then the input values will\n\tbe taken as strains (e1-e6) rather than angles. Here zero means\n\tthat no strain will be applied to that component.\n- See also: \tcell vectors ocell translate strain\nscell"
  },
  "option-scell": {
    "prefix": "option-scell",
    "body": "scell",
    "description": "- Format: \tscell <angs/au>\n\ta b alpha <3 x optimisation flags>\nUnits \tAngstrom (default) or au for a, b and degrees for angle\n- Use: \tSurface unit cell. Either \"svectors\" or \"scell\"\n\tmust be given for a surface. For optimisations or fitting,\n\tflags must be set unless cellonly, conp or conv are specified.\n- See also: \tsvectors sfrac sregion2\nscmaxsearch"
  },
  "option-scmaxsearch": {
    "prefix": "option-scmaxsearch",
    "body": "scmaxsearch",
    "description": "- Format: \tscmaxsearch <value>\nUnits \tNone\n- Default: \t2.0\n- Use: \tFor free energy minimisation, this parameter sets the maximum\n\tsearch range for pairs of atoms interacting via the same many\n\tbody term that gives a contribution to the third derivatives.\n\tThe value is a multiple of the density cut-off value for the\n\tEAM model. In principle, the range can be up to 3 times the\n\tdensity pairwise cut-off. However, this makes free energy\n\tminimisation very expensive. In practice, a value of around\n\t2 will give almosts identical results, depending on the system,\n\twith a dramatic increase in speed. However, if precise gradients\n\tare needed then a value of 3.0 should be used to check\n\tthe influence. Negative values and values greater than 3.0 are\n\tdisallowed as being stupid!\n- See also: \tfree zsisa manybody eam_functional eam_density lowest_mode\nsdlc"
  },
  "option-sdlc": {
    "prefix": "option-sdlc",
    "body": "sdlc",
    "description": "- Format: \tsdlc <n>\n\ti j dielectric constant se(i,j) <weight>\nUnits \tnone\n- Default: \tno static dielectric constants to be fitted\n- Use: \tSubsection of observables, used for specifying experimental\n\tstatic dielectric constants for fitting.\n\tOnly give unique static dielectric constants.\n- See also: \telastic piezoelectric hfdlc weight srefractive hfrefractive\n\tbornq young poisson shear voigt bulk omega\nseed"
  },
  "option-seed": {
    "prefix": "option-seed",
    "body": "seed",
    "description": "- Format: \tseed q\n- Default: \t-1\n- Use: \tInitial pointer used in random number generation wherever random numbers are used.\n\tInput value is an integer.\nsegmentsperatom"
  },
  "option-segmentsperatom": {
    "prefix": "option-segmentsperatom",
    "body": "segmentsperatom",
    "description": "- Format: \tsegmentsperatom <no. of segments per atom> <no. per H atom>\n- Default: \t92 (dodecahedron) / 110 (octahedron)\nUnits \tNone\n- Use: \tSpecifies the number of segments per atom for the\n\tsolvent-accessible surface in a COSMO calculation.\n\tThe points per atom are grouped together to form\n\tthe segments. Note it is possible to specify a\n\tdifferent value for H. However, if this is omitted\n\tthen it defaults to the same value as for other atoms.\n- See also: \tcosmo pointsperatom solventepsilon solventradius\n\tsolventrmax vdw cosmoshape rangeforsmooth\nsfinite"
  },
  "option-sfinite": {
    "prefix": "option-sfinite",
    "body": "sfinite",
    "description": "- Format: \tsfinite deltaC deltaS\n- Default: \t0.00001 / 0.00001\nUnits \tAngstroms and none for deltaC and deltaS, respectively.\n- Use: \tSets the finite difference intervals to be used for the numerical\n\tevaluation of properties by central finite differencing of the\n\tanalytic first derivatives. deltaC is used for the Cartesian\n\tdisplacements while deltaS controls the change in strain.\n- See also: \tnumerical pfinite\nsfractional"
  },
  "option-sfractional": {
    "prefix": "option-sfractional",
    "body": "sfractional",
    "description": "- Format: \tsfractional <region <n> <qm/mm> <rigid <xyz>>> <nonrigid>\n\tat.sym. <species_type> x y z <charge> <occupancy> <radius> <3 x flags> <T/%>\nUnits \tFractional for x and y, Angstroms for z and radius, and electrons\n- Default: \tFor region 2, rigid is the default.\n- Use: \tInternal coordinates and charges for all species in the surface cell.\n\tEither the atomic number or the symbol may be supplied, followed\n\tby the species type. If the species type is omitted then it is\n\tassumed to be a core. Individual charges may be supplied for each\n\tion or the charges for each type of species given using the\n\tspecies option. If the charges are given, then optionally site\n\toccupancies may also be specified. Similarly, if the charge and\n\toccupancy are given, then the radius of a breathing shell may\n\talso be present. Optimisation flags are only needed if cellonly,\n\tconv, bulk, conp or shell are not specified.\n\tIf the \"region\" sub-option is specified, then this tells the program\n\tthe region number for the following atoms. In a surface calculation\n\tregion 2 is held fixed. If the \"rigid\" sub-option is also specified\n\tafter \"region\" then the region is created as a rigid body so that\n\tall atoms are constrained with respect to each other. By specifying\n\ta string after this containing x, y and/or z, the region may be\n\tallowed to move in particular directions. For example, in an interface\n\tcalculation, a region could be specified that is allowed to only relax\n\tin the z direction by using:\n\n\tsfrac region 3 rigid z\n\n\tNB: The \"region\" sub-option must come before any of the other related\n\tsub-options.\n\n\tIf a \"T\" is specified then the atom is marked for the translate option\n\tIf a \"%\" is specified then the atom is part of a growth slice if it\n\tis in region 1 of a surface calculation.\n- See also: \tscell sregion2\nshear_modulus"
  },
  "option-shear_modulus": {
    "prefix": "option-shear_modulus",
    "body": "shear_modulus",
    "description": "- Format: \tshear_modulus <weight>\nUnits \tGPa\n- Default: \tshear modulus not to be fitted\n- Use: \tSubsection of observables, used for specifying the experimental\n\tshear modulus for fitting. By default, the Reuss definition of\n\tthe bulk modulus is used. However, the Voigt and Hill definitions\n\tcan be used by specifying the appropriate keyword.\n- See also: \tobservables elastic sdlc hfdlc bulk_modulus srefractive\n\thfrefractive weight bornq hill voigt young poisson\nshellmass"
  },
  "option-shellmass": {
    "prefix": "option-shellmass",
    "body": "shellmass",
    "description": "- Format: \tshellmass\n\tspecies_symbol ratio\n- Default: \tratio = 0.0\n- Use: \tSpecifies that shells will get assigned masses in shell model\n\tmolecular dynamics. If shells have a mass their equations of motion\n\tare integrated as for a core. \"ratio\" is the fraction of the total\n\tmass of an ion which will be assigned to the shell. It has to be\n\tselected so that the shell motions are significantly faster than\n\tthe motions of the cores. GULP calculates \"wave numbers\" for the\n\tcore/shell relative motion if this option is specified to assist\n\tin the selection of a suitable ratio. Note that the finite mass\n\talgorithm is not compatible with breathing shells - the iterations\n\toption should be used instead in this case.\n\tThe shellmass ratio should be specified for each species, unlike\n\tprevious versions.\n\te.g.\n\n\tshellmass\n\tAl 0.25\n\tO 0.12\n\n- See also: \titerations md\nshift"
  },
  "option-shift": {
    "prefix": "option-shift",
    "body": "shift",
    "description": "- Format: \tshift energy_shift <ev/au/kcal/kjmol-1>\nUnits \teV (default), au, kcal or kJmol-1\n- Default: \t0.0 eV\n- Use: \tShifts energy by this amount - mainly for use in fitting\n\tab initio energy surfaces. Shift is applied to all subsequent\n\tconfigurations until the value of shift is changed by another\n\tshift directive. Shift can also appear in the variables section\n\tas a command to cause the shift to be fitted.\n- See also: \tsshift ashift\nshrink"
  },
  "option-shrink": {
    "prefix": "option-shrink",
    "body": "shrink",
    "description": "- Format: \tshrink ix <iy> <iz>\nUnits \tix, iy and iz are dimensionless integers\n- Default: \t1 1 1\n- Use: \tSpecifies the shrinking factors in reciprocal space. The higher the\n\tshrinking factor the more extensively k space is sampled. One value\n\tmay be given, in which case the shrinking factor is used isotropically\n\tor three anisotropic values can be given.\n\tIn theory an isotropic shrinking factor n will generate n**3 k points.\n\tHowever, GULP by default uses some of the symmetry of the Patterson\n\tgroup to reduce this number. This can be turned off using \"noksym\".\n\tRemember that if anisotropic values are given that do not conform\n\tto the symmetry of the unit cell then the symmetry adapted sampling\n\twill give slightly different results to the P -1 sampling - beware!\n\tN.B. If phonon properties are required the user must make sure that\n\tconvergence has been achieved with respect to the number of k points.\n- See also: \tphonon dispersion kpoints noksym msd\nsiginc"
  },
  "option-siginc": {
    "prefix": "option-siginc",
    "body": "siginc",
    "description": "- Format: \tsiginc atomic_nnumber <siginc>\nUnits \tAngstrom2 (=108 Barns)\n- Use: \tUsed within element option input block, overwrites the default bound\n\tincoherent neutron scattering cross-section (siginc) for a specified element.\n\t(at. no. or symbol may be used)\n- See also: \tcoreinfo element bbar\nsize"
  },
  "option-size": {
    "prefix": "option-size",
    "body": "size",
    "description": "- Format: \tsize radius_region_1 <radius_region_2a> <old_radius_region_1>\nUnits \tAngstroms\n- Default: \tnone\n- Use: \tSpecifies the region 1 and 2a radii for use in defect calculations.\n\tIf no value is specified for region 2 then it is set equal to the\n\tregion 1 radius. When restarting from a dumpfile containing\n\tan explicit region 1 specification, but with a larger region 1\n\tradius, then the old region 1 radius from the previous run must\n\talso be given to ensure a correct restart.\n- See also: \tdefect centre region_1 vacancy interstitial impurity\n\tbulk_noopt\nslater"
  },
  "option-slater": {
    "prefix": "option-slater",
    "body": "slater",
    "description": "- Format: \tslater <inter/intra> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <ener/grad> <scale14> <type_of_bond>\n\tatom1 atom2 A B <rmin> rmax <2*flags>\nUnits \tA in eV, B in Angs**-1\n\tIf kcal is given : A in kcal, B in Angs**-1\n\tIf kjmol is given: A in kJmol-1, B in Angs**-1\n- Default: \tnone\n- Use: \tSpecifies a Slater two-body potential that arises from the overlap of\n\ttwo spherical atomic densities that decay exponentially.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = A.[((B*r)**2/3) + B*r + 1]*exp(-B*r)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\tThe words energy or gradient may be\n\tgiven on the first line resulting in energy or gradient offsets being\n\tapplied such that the specified quantity goes to zero at the cutoff\n\tdistance.\n\n- See also: \tc6 mm3buck buckingham\nslower"
  },
  "option-slower": {
    "prefix": "option-slower",
    "body": "slower",
    "description": "- Format: \tslower <value>\nUnits \tNone\n- Default: \t0.001\n- Use: \tThis is the scale factor by which the eigenvectors will be\n\tmultiplied when attempting to lower the symmetry along an\n\timaginary mode direction.\n- See also: \tlower_symmetry\nsmelectronegativity"
  },
  "option-smelectronegativity": {
    "prefix": "option-smelectronegativity",
    "body": "smelectronegativity",
    "description": "- Format: \tsmelectronegativity\n\t<Atomic_symbol/atomic_number> chi mu zeta Znuc <Q0> <E0> <4 x flags>\n\n\tor\n\n\tsmelectronegativity <qrange/qmin/qmax>\n\t<Atomic_symbol/atomic_number> chi mu zeta Znuc <Q0> <E0> <qmin> <qmax> <4 x flags>\nUnits \tChi, mu, and E0 in eV, Znuc in a.u., zeta in Angstroms**-1, Q0, qmin, qmax in a.u.\n- Default: \tQ0 = 0.0, E0 = 0.0\n- Use: \tAllows the user to specify the parameters needed for the\n\tStreitz and Mintmire electronegativity equalisation method\n\tfor determining charges. Note that if the flags are not\n\tspecified they are assumed to be zero.\n\tQ0 is the charge about which the electronegativity equations\n\tare quadratic. In most methods this is zero, but need not be.\n\tFor example, the EQeq method assigns values of Q0 not equal\n\tto zero.\n\tE0 is an additive constant for the energy of an atom. This is\n\tonly really needed when using multiple q ranges to ensure\n\tenergy matching.\n\tThe sub-options qrange, qmin, and qmax control whether the\n\tvalues apply for a given value of charge. By default the values\n\tapply to all values of charge (q). If qmin is specified then\n\tthey are only applied to charges larger than qmin, while if qmax\n\tis given the they are applied when q is less than qmax. When\n\tqrange is specified then the values apply for qmin =< q < qmax.\n\tNB: If no parameters are input then the default values will be\n\tused for all charge values. However, if parameters are input\n\tthen this will override the default values and the user must\n\tset parameters for all relevant ranges of charge.\n- See also: \tsm eem electronegativity qeq qelectronegativity noqeem external_potential\n\teembond\nsolventepsilon"
  },
  "option-solventepsilon": {
    "prefix": "option-solventepsilon",
    "body": "solventepsilon",
    "description": "- Format: \tsolventepsilon <dielectric constant OR solvent_name>\n- Default: \t1.0\nUnits \tNone\n- Use: \tSpecifies the dielectric constant of the solvent to\n\tbe used in a COSMO solvation energy calculation. Note\n\tthat values must be greater than 1.0!\n\tThe values of the dielectric constant for use in\n\tCOSMO are known for the following solvents :\n\n\tsolvent_name dielectric_constant\n\t------------ -------------------\n\n\twater 78.400\n\tacetone 20.700\n\tbenzene 2.274\n\tchlorobenzene 5.621\n\tchloroform 4.806\n\tcyclohexane 2.015\n\tethylether 4.335\n\tmethanol 32.630\n\ttetrachloromethane 2.228\n\tconductor 1000.000\n\n- See also: \tcosmo pointsperatom segmentsperatom solventradius\n\tsolventrmax vdw\nsolventradius"
  },
  "option-solventradius": {
    "prefix": "option-solventradius",
    "body": "solventradius",
    "description": "- Format: \tsolventradius <Rsolv> <deltaRsolv>\n- Default:s \t1.0 / 0.1 Angstroms\nUnits \tAngstroms\n- Use: \tSpecifies the radius of the solvent molecule, Rsolv,\n\tand the distance of the screening centre from the\n\tmolecular centre, deltaRsolv, for use in a COSMO\n\tscreening calculation. Note that these two values\n\tare the parameters for each solvent that must be\n\tdetermined in order to obtain accurate solvation\n\tenergies.\n- See also: \tcosmo pointsperatom segmentsperatom solventepsilon\n\tsolventrmax vdw\nsolventrmax"
  },
  "option-solventrmax": {
    "prefix": "option-solventrmax",
    "body": "solventrmax",
    "description": "- Format: \tsolventrmax <maximum distance> <smoothing range>\n- Default:s \t10.0 / 1.0 Angstroms\nUnits \tAngstroms\n- Use: \tMaximum distance parameter used by COSMO solvation\n\tmodel. Below this value, elements of the A matrix\n\tare evaluated at the level of sub-points, while\n\tbeyond this they are evaluated between segments,\n\twhich is more approximate. The smoothing range\n\tis used to taper the two sides of the cut-off\n\ttogether continuously to avoid problems during\n\toptimisation.\n- See also: \tcosmo pointsperatom segmentsperatom solventepsilon\n\tsolventradius vdw\nspacegroup"
  },
  "option-spacegroup": {
    "prefix": "option-spacegroup",
    "body": "spacegroup",
    "description": "- Format: \tspace group no. or Hermann-Maugain symbol\n\tNote: symbol must be in capital letters with spaces between them\n\te.g. for MgO => 225 or F M -3 M\nUnits \tnone\n- Default: \tno symmetry => P1\n- Use: \tSpecifies symmetry information by space group. Either the standard\n\tsymbol may be used or the extended symbol for specifying alternative\n\tsettings. When giving extended symbols only the first line in\n\tInternational Tables should be given i.e. the 4th operator/qualifier\n\tafter the centring symbol should be omitted. For example, in order\n\tspecify the non-standard P 21/A setting of P 21/C the input should be:\n\n\tspace\n\tP 1 21/A 1\n\n- See also: \torigin valid_spacegroups symmetry_operator\nspecies"
  },
  "option-species": {
    "prefix": "option-species",
    "body": "species",
    "description": "- Format: \tatomic_symbol <core/shell> charge <radius> <library symbol>\n- Default: \tcharge and radius both equal to zero\n- Use: \tSpecify charges and radius by species and type, rather than for each\n\tion separately. The library symbol is a symbolic name to be assigned\n\tto this species for referencing libraries of interatomic potentials,\n\totherwise the atomic symbol will try to be used. See library for\n\tmore details.\n\tNB: The species command will overwrite the charges of ions that\n\tare specified individually on the coordinate input line unless the\n\tpreserve_Q keyword is specified.\n- See also: \tlibrary preserve_Q\nspline"
  },
  "option-spline": {
    "prefix": "option-spline",
    "body": "spline",
    "description": "- Format: \tspline <cubic> <reverse> <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <type_of_bond>\n\tatom1 atom2 <shift> <rmin> rmax <1*flag>\n\tenergy_1 distance_1\n\tenergy_2 distance_2\n\t: :\n\tenergy_n distance_n\nUnits \tEnergies in eV, distances in Angs\n- Default: \trational function spline, shift = 0.0\n- Use: \tSpline potential - flag for fitting (0/1) of shift.\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\tIf the option \"reverse\" is specified then the spline information\n\twill be read as distance then energy, ie the reverse order to\n\tnormal.\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded, potential cutoffs are omitted from input.\n\nsplit"
  },
  "option-split": {
    "prefix": "option-split",
    "body": "split",
    "description": "- Format: \tsplit <number of species to be varied>\n\tlist of cores whose charges are to be varied\nUnits \tnone\n- Default: \tcharges fixed\n- Use: \tAllows split of core-shell to be varied during fitting while\n\tmaintaining the initial total charge.\n\tThis directive must be part of the variables section.\n\tNB: DO NOT specify charges on the coordinate line for the atoms\n\tthat you wish to be influenced by this option since they will be\n\theld fixed as they are NOT overwritten by the species option.\nspring"
  },
  "option-spring": {
    "prefix": "option-spring",
    "body": "spring",
    "description": "- Format: \tspring <kcal/kjmol>\n\tatom1 k2 <k4> <flags>\nEqn \tE = (1/2)*k2*r**2 + (1/24)*k4*r**4\nUnits \tk2 in eV/Angs*2, k4 in eV/Angs**4\n- Default: \tk4 = 0.0\n- Use: \tCore-shell spring potential - optimisation flags for fitting.\n\tSpring potential does not need cutoffs as the maximum is set by cuts\n\tand the minimum is zero.\n\tOnly atom1 needs to be specified as this potential is specifically\n\tfor core shell pairs. Atom1 can be given either by atomic number\n\tor symbol which in the latter case can be followed by a species\n\ttype. If no species type is given then type is assumed to be core.\n- See also: \tcosh-spring\nsqomega"
  },
  "option-sqomega": {
    "prefix": "option-sqomega",
    "body": "sqomega",
    "description": "- Format: \tsqomega filename.sqw <weight>\nUnits \tArbitrary\n- Default: \tNo S(Q,omega) data to be fitted\n- Use: \tThis option enables fitting of S(Q,omega) data. The S(Q,omega)\n\tdata is read from a .sqw file specified on this line.\n\tThe parameters that control the grid for S(Q,omega) are\n\tspecified by the commands for scattering and must match those\n\tpresent in the .sqw file.\n\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive piezo\n\tbornq monopoleq qreaxff fbond fangle relax reaction\nsquaredharmonic"
  },
  "option-squaredharmonic": {
    "prefix": "option-squaredharmonic",
    "body": "squaredharmonic",
    "description": "- Format: \tsquaredharmonic <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <grad> <scale14> <type_of_bond>\n\tatom1 atom2 k2 r0 <coul> <rmin> rmax <2*flags>\nUnits \tk2 in eV*Angs**-4, r0 in Angs, coul in none\n- Use: \tGROMOS bonded potential - optimisation flags for fitting.\n\tcoul = 1.0 => Coulomb subtracted\n\tatom1 and atom2 may be specified either by atomic number or symbol\n\twhich in the latter case can be followed by a species type. If\n\tno species type is given then type is assumed to be core.\n\n\tE = 1/4 K2*(r**2 - r0**2)**2 - coul*qi*qj/r\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n\tWhen specified as bonded potential, cutoffs are omitted from input.\n\n- See also: \tspring harmonic\nsrefractive_index"
  },
  "option-srefractive_index": {
    "prefix": "option-srefractive_index",
    "body": "srefractive_index",
    "description": "- Format: \ti static_refractive_index(i) <weight>\nUnits \tNone\n- Default: \tNo static refractive indices to be fitted\n- Use: \tSpecifies exptl static refractive indices for fitting\n\talong principal axes.\n- See also: \telastic piezoelectric sdlc hfdlc hfrefractive weight\nsregion2"
  },
  "option-sregion2": {
    "prefix": "option-sregion2",
    "body": "sregion2",
    "description": "- Format: \tsregion2 atom_number\nUnits \tnone\n- Use: \tSpecifies the first atom in the slab that is in region 2. Region 2\n\tis the region that contains the fixed atoms that represent the\n\tbulk in a surface calculation. Atoms in region 2 will automatically\n\tbe fixed during geometry optimisation and the self-energy of the\n\tregion will be excluded from the surface energy of the slab - i.e.\n\tthe surface energy calculated will be for one side, that of region 1.\n- See also: \tsfrac scell sbulkenergy\nsrglue"
  },
  "option-srglue": {
    "prefix": "option-srglue",
    "body": "srglue",
    "description": "- Format: \tsrglue <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 d rmin rmax\n\ta14 a13 a12 a11 a10\n\ta26 a25 a24 a23 a22 a21 a20\nUnits \teV and Angstroms\n- Default: \tnone\n- Use: \tInput for the Short-Range part of the Glue model:\n\n\tif r < d:\n\n\tE = a14*(r-d)**4 + a13*(r-d)**3 + a12*(r-d)**2 + a11*(r-d) + a10\n\n\tif d < r =< rmax:\n\n\tE = a26*(r-d)**6 + a25*(r-d)**5 + a24*(r-d)**4 + a23*(r-d)**3 +\n\ta22*(r-d)**2 + a21*(r-d) + a20\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then potential will only act between bonded\n\tatoms. x12 => exclude 1-2 interaction and x13 => exclude 1-2 and 1-3\n\tinteraction. x14 implies x13 and scale14 = 0 (i.e. no 1-4 interactions)\n- See also: \team_functional eam_density\nsshift"
  },
  "option-sshift": {
    "prefix": "option-sshift",
    "body": "sshift",
    "description": "- Format: \tsshift scale_factor\nUnits \tnone\n- Default: \t1.0\n- Use: \tScales the shift value for the present configuration. Allows\n\tenergies of structures with different numbers of formula units\n\tto be fitted.\n- See also: \tshift\nstart"
  },
  "option-start": {
    "prefix": "option-start",
    "body": "start",
    "description": "- Use: \tCauses program to skip the rest of the input file and begin execution.\nstatic dielectric"
  },
  "option-static dielectric": {
    "prefix": "option-static dielectric",
    "body": "static dielectric",
    "description": "- Format: \tsdlc <n>\n\ti j dielectric constant se(i,j) <weight>\nUnits \tnone\n- Default: \tno static dielectric constants to be fitted\n- Use: \tSubsection of observables, used for specifying experimental\n\tstatic dielectric constants for fitting.\n\tOnly give unique static dielectric constants.\n- See also: \telastic piezoelectric hfdlc weight srefractive hfrefractive\nstepmx"
  },
  "option-stepmx": {
    "prefix": "option-stepmx",
    "body": "stepmx",
    "description": "- Format: \tstepmx <opt/fit/rfo> <real value>\nUnits \tfractional\n- Default: \t1.0 for opt / 1000.0 for fit / 100.0 for rfo\n- Use: \tMaximum step size in optimisation/fitting/rfo.\n\tValue may appear on same line as option or on the following line.\n\tIf opt/fit is not supplied then value is applied to both.\n- See also: \tmaxcyc optimise fit rfo switch_stepmx\nstop"
  },
  "option-stop": {
    "prefix": "option-stop",
    "body": "stop",
    "description": "- Use: \tCauses program to stop execution at that point in the input file. Use\n\tis mainly for locating problems in input files.\nstrain_derivative"
  },
  "option-strain_derivative": {
    "prefix": "option-strain_derivative",
    "body": "strain_derivative",
    "description": "- Format: \tstrain_derivative\n\tstrain_no strain_derivative_value <weight>\nUnits \tGPa\n- Default: \tall fitted strain derivatives are zero\n- Use: \tSubsection of observables, used for specifying the strain derivative\n\tcomponents for fitting to. Here the strain_no is as follows:\n\n\t1 => xx 2 => yy 3 => zz 4 => yz 5 => xz 6 => xy\n\n\tNote that strains are dependent on the cell orientation\n\tand so take care when specifying.\n- See also: \tobservables gradients stress\nstress"
  },
  "option-stress": {
    "prefix": "option-stress",
    "body": "stress",
    "description": "- Format: \tstress\n\tstress_no stress_value <weight>\nUnits \tGPa\n- Default: \tall fitted stresses are zero\n- Use: \tSubsection of observables, used for specifying the stress\n\tcomponents for fitting to. Here the stress_no is as follows:\n\n\t1 => xx 2 => yy 3 => zz 4 => yz 5 => xz 6 => xy\n\n\tNote that stresses are dependent on the cell orientation\n\tand so take care when specifying.\n- See also: \tobservables gradients strain_derivative\nsupercell"
  },
  "option-supercell": {
    "prefix": "option-supercell",
    "body": "supercell",
    "description": "- Format: \tsupercell (ncells in x) (ncells in y) (ncells in z)\n- Default: \t1 1 1 (i.e. no supercell)\n- Use: \tExpands the input unit cell by the three factors given to create a\n\tsupercell. This implies that symmetry is removed from the structure\n\tat the moment.\n- See also: \tghost_supercell\nsvectors"
  },
  "option-svectors": {
    "prefix": "option-svectors",
    "body": "svectors",
    "description": "- Format: \tsvectors <angs/au>\n\tx y for vector 1\n\tx y for vector 2\n\t<2 x optimisation flags>\nUnits \tAngstrom (default) or au\n- Use: \tSpecifies the cartesian components of the surface vectors.\n\tEither \"svectors\" or \"scell\" must be included for a surface.\n\tStrain optimsation flags appear on last line.\n- See also: \tscell\nsw2"
  },
  "option-sw2": {
    "prefix": "option-sw2",
    "body": "sw2",
    "description": "- Format: \tsw2 <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14> <type_of_bond>\n\tatom1 atom2 A rho B rmin rmax <3*flags>\nUnits \tA in eV, B in Angs**4, rho in Angs\n- Use: \tStillinger-Weber's two-body potential with cutoff smoothing\n\tsuch that potential goes to zero at rmax:\n\n\tE = A.exp(rho/(r-rmax)).(B/r**4 - 1)\n\n- See also: \tsw3 sw2jb sw3jb\nsw2jb"
  },
  "option-sw2jb": {
    "prefix": "option-sw2jb",
    "body": "sw2jb",
    "description": "- Format: \tsw2jb <intra/inter> <bond/x12/x13/x14/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 A rho B Q <rmin> rmax <4*flags>\nUnits \tA in eV, B in Angs**4, rho in Angs, Q in a.u.\n- Use: \tJiang and Brown's variant of Stillinger-Weber's two-body potential\n\twhich includes charge dependent bond softening\n\n\tE = A.exp(rho/(r-rmax)).(B/r**4 - 1)*F(qi,qj)\n\n\tF(qi,qj) = exp(1/Q)exp(1/(qi + qj - Q)) if qi+qj < Q\n\tF(qi,qj) = 0 if qi+qj > Q\n\n\tSee Chem. Eng. Sci., 49, 2991 (1994) for more details.\n- See also: \tsw3 sw2 sw3jb\nsw3"
  },
  "option-sw3": {
    "prefix": "option-sw3",
    "body": "sw3",
    "description": "- Format: \tsw3 <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K theta0 rho1 rho2 <rmin12> rmax12 <rmin13> rmax13 <rmin23>\n\trmax23 <4*flags>\n\n\tor\n\n\tsw3 modified <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K theta0 rho1 rho2 C <rmin12> rmax12 <rmin13> rmax13 <rmin23>\n\trmax23 <5*flags>\n\n\tor\n\n\tsw3 garofalini <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K theta0 rho1 rho2 C <rmin12> rmax12 <rmin13> rmax13 <rmin23>\n\trmax23 <5*flags>\nUnits \tK in eV, theta in degrees, rho1 and rho2 in Angstroms\n- Use: \tStillinger-Weber's three-body potential with cutoff smoothing\n\n\tE(three) = K * exp(rho1/(r12-rmax12) + rho2/(r13-rmax13))*(cos-ct0)**2\n\n\twhere cos = cos(theta(jik)) and ct0 = cos(theta0)\n\n\tIf \"modified\" is specified then the functional form given in J. Appl. Phys.\n\t101, 103515 (2007) is given:\n\n\tE(three) = K * exp(rho1/(r12-rmax12) + rho2/(r13-rmax13))*(cos-ct0)**2/(1 + C*(cos-ct0)**2)\n\n\tIf \"garofalini\" is specified then the functional form given in J. Phys. Chem.\n\t100, 2201 (1996) is given:\n\n\tE(three) = K * exp(rho1/(r12-rmax12) + rho2/(r13-rmax13))*[(cos-ct0)*sin*cos]**2\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. Note that unlike most potentials, the specification of the\n\tcut-off distances is still required when using the \"bond\" sub-option\n\tsince the values act as parameters to the model.\n\n- See also: \tthree-body angle exponential axilrod-teller bcross sw2 sw2jb urey-bradley\n\tmurrell-mottram bcoscross bacross hydrogen-bond equatorial sw3jb uff3\n\tlin3 3coulomb bagcross\nsw3jb"
  },
  "option-sw3jb": {
    "prefix": "option-sw3jb",
    "body": "sw3jb",
    "description": "- Format: \tsw3jb <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K theta0 rho1 rho2 Q <rmin12> rmax12 <rmin13> rmax13 <rmin23>\n\trmax23 <5*flags>\nUnits \tK in eV, theta in degrees, rho1 and rho2 in Angstroms, Q in a.u.\n- Use: \tJiang and Brown's variant of Stillinger-Weber's three-body potential with\n\tcharge-dependent softening\n\n\tE(three) = K*F12*F13*exp(rho1/(r12-rmax12) + rho2/(r13-rmax13))(cos-ct0)**2\n\n\twhere cos = cos(theta(jik)) and ct0 = cos(theta0)\n\n\tF12(q1,q2) = exp(1/Q)exp(1/(q1 + q2 - Q)) if q1+q2 < Q\n\tF12(q1,q2) = 0 if q1+q2 > Q\n\tF13(q1,q3) = exp(1/Q)exp(1/(q1 + q3 - Q)) if q1+q3 < Q\n\tF13(q1,q3) = 0 if q1+q3 > Q\n\n\tSee Chem. Eng. Sci., 49, 2991 (1994) for more details.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. Note that unlike most potentials, the specification of the\n\tcut-off distances is still required when using the \"bond\" sub-option\n\tsince the values act as parameters to the model.\n\n- See also: \tthree-body angle exponential axilrod-teller bcross sw2 sw2jb urey-bradley\n\tmurrell-mottram bcoscross bacross hydrogen-bond equatorial sw3 lin3\n\tuff3 bagcross\nswitch_minimiser"
  },
  "option-switch_minimiser": {
    "prefix": "option-switch_minimiser",
    "body": "switch_minimiser",
    "description": "- Format: \tswitch_minimiser <minimiser> <cycle/gnorm/lower> <criterion>\n- Use: \tThis option allows the minimiser to be changed part\n\tway through an optimisation when the given criterion\n\tis satisfied. The criterion can be either the number\n\tof cycles of optimisation or when the gradient norm\n\tdrops below a certain value. This option is particularly\n\tuseful for cases where the RFO minimiser is needed to\n\taccelerate the end game convergence. However it is\n\tinefficient and unstable a long way from the minimum.\n\n\tValid minimisers are:\n\tbfgs (default)\n\trfo (rational function optimisation)\n\tunit (bfgs, but starting from a unit Hessian)\n\tnume (bfgs, but starting from numerical diagonal Hessian)\n\tconj (conjugate gradients)\n\n\tExamples:\n\n\tswitch rfo cycle 10\n\n\t=> Change to rfo method after 10 cycles of optimisation.\n\tNote that the order of words after switch is irrelevant\n\tand additional words can be inserted to make the line more\n\treadable. For example this line could be written as:\n\n\tswitch to rfo method after 10 cycles of optimisation\n\n\tswitch conj gnorm 0.123\n\n\t=> Change to conjugate gradient method when Gnorm is less\n\tthan 0.123. Note that if cycle and gnorm are omitted then\n\tGULP assumes gnorm as a default.\n\n\tswitch rfo lower\n\n\t=> Change to rfo method if restarting optimisation after\n\tthe lower option has been applied.\n\n- See also: \toptimise rfo unit conj optlower switch_stepmx\nswitch_stepmx"
  },
  "option-switch_stepmx": {
    "prefix": "option-switch_stepmx",
    "body": "switch_stepmx",
    "description": "- Format: \tswitch_stepmx new_step_max <cycle/gnorm> <criterion>\n- Use: \tThis option allows the minimiser to change the maximum\n\tstep size to a value new_step_max from the current one\n\twhen a given criterion is met.\n\n\tExamples:\n\n\tswitch_stepmx 0.1 cycle 10\n\n\t=> Change to a maximum step size of 0.1 after 10 cycles\n\tof optimisation.\n\n\tswitch 0.1 gnorm 0.123\n\n\t=> Change to maximum step size of 0.1 when Gnorm is less\n\tthan 0.123. Note that if cycle and gnorm are omitted then\n\tGULP assumes gnorm as a default.\n\n- See also: \tstepmx switch_minimiser\nsymbol"
  },
  "option-symbol": {
    "prefix": "option-symbol",
    "body": "symbol",
    "description": "- Format: \tsymbol at.no. <symbol(a2)>\n- Default: \tas per periodic table\n- Use: \tAllows atomic symbols to be changed.\n\tCommand is part of element section.\n- See also: \telement\nsymmetry_cell"
  },
  "option-symmetry_cell": {
    "prefix": "option-symmetry_cell",
    "body": "symmetry_cell",
    "description": "- Format: \tsymmetry_cell <cell_type>\n- Default: \tTriclinic\n- Use: \tWhen specifying the symmetry manually, this allows the user to set the\n\tcell type. Allowed values are triclinic, monoclinic, orthorhombic,\n\ttetragonal, hexagonal, rhombohedral and cubic.\n- See also: \tsymmetry_operator\nsymmetry_number"
  },
  "option-symmetry_number": {
    "prefix": "option-symmetry_number",
    "body": "symmetry_number",
    "description": "- Format: \tsymmetry_number value\n- Default: \t1\n- Use: \tThis option allows the user to specify the symmetry number for use\n\tin calculating the rotational partition function.\n- See also: \tproperty temperature pressure\nsymmetry_operator"
  },
  "option-symmetry_operator": {
    "prefix": "option-symmetry_operator",
    "body": "symmetry_operator",
    "description": "- Format: \tsymmetry_operator\n\tr(1,1) r(1,2) r(1,3) t(1)\n\tr(2,1) r(2,2) r(2,3) t(2)\n\tr(3,1) r(3,2) r(3,3) t(3)\nUnits \tNone / Fractional\n- Use: \tSpecifies the symmetry operators for a 3-D system manually. The\n\tmatrix r specifies the rotational matrix and the vector t specifies\n\tthe translational component of the roto-translational operator. Note\n\tthat the identity operator is always present and should not be given\n\tagain. If specified, this option causes any spacegroup specified to\n\tbe ignored.\n- See also: \tspacegroup origin symmetry_cell\nsynciterations"
  },
  "option-synciterations": {
    "prefix": "option-synciterations",
    "body": "synciterations",
    "description": "- Format: \tsynciterations <maximum_number>\n- Default: \t1000\n- Use: \tSpecifies the maximum number of iterations for minimization\n\tof the force norm during each step of a syncrhonous transit run.\n- See also: \tneb syncsteps synctolerance\n\tnebreplica fcartesian ffractional fcell fvectors\nsyncsteps"
  },
  "option-syncsteps": {
    "prefix": "option-syncsteps",
    "body": "syncsteps",
    "description": "- Format: \tsyncsteps <maximum_number>\n- Default: \t1000\n- Use: \tSpecifies the maximum number of steps during a syncrhonous\n\ttransit run. Each consists of a move of one image towards the other\n\tfollowed by minimisation of that image while the force remains\n\torthogonal to the vector between the images.\n- See also: \tneb syncsteps synctolerance\n\tnebreplica fcartesian ffractional fcell fvectors\nsynctolerance"
  },
  "option-synctolerance": {
    "prefix": "option-synctolerance",
    "body": "synctolerance",
    "description": "- Format: \tsynctolerance <tolerance_value>\n- Default: \t0.0001\n- Use: \tSpecifies the convergence criteria for a synchronous transit\n\trun in terms of the residual force norm.\n- See also: \tneb syncsteps synciterations\n\tnebreplica fcartesian ffractional fcell\ntau_barostat"
  },
  "option-tau_barostat": {
    "prefix": "option-tau_barostat",
    "body": "tau_barostat",
    "description": "- Format: \ttau_barostat tau <s/ns/ps/fs>\nUnits \ts, ns, ps or fs; default is ps\n- Default: \t1 ps\n- Use: \tSpecifies the relaxation time for the barostat if the integrator is\n\tset to type \"stochastic\".\n- See also: \tintegrator md tau_thermostat\ntau_thermostat"
  },
  "option-tau_thermostat": {
    "prefix": "option-tau_thermostat",
    "body": "tau_thermostat",
    "description": "- Format: \ttau_thermostat tau <s/ns/ps/fs>\nUnits \ts, ns, ps or fs; default is ps\n- Default: \t1 ps\n- Use: \tSpecifies the relaxation time for the thermostat if the integrator is\n\tset to type \"stochastic\".\n- See also: \tintegrator md tau_barostat\ntd_external_force"
  },
  "option-td_external_force": {
    "prefix": "option-td_external_force",
    "body": "td_external_force",
    "description": "- Format: \ttd_external_force\n\tatomnumber direction forceA forceB forceC\nUnits \tforceA in eV/Angstrom, forceB in 1/ps, & forceC in fraction\n\tof 2*pi\n- Default: \tNo time dependent force\n- Use: \tSpecifies that a time-dependent force is applied to selected\n\tatoms during a molecular dynamics simulation. This force can\n\tbe specified separately for each Cartesian direction and takes\n\tthe form of;\n\n\tF = forceA*cos[2*pi*(t*forceB + forceC)]\n\n\twhere t is the time within the simulation.\n\tExample 1:\n\t1 z 3.5 0.5 0.5\n\t3 z 3.5 0.5 0.0\n\tExample 2:\n\t1 z -3.5 0.5 0.0\n\t3 z 3.5 0.5 0.0\n\tNote: both of the other examples would cause the atoms to\n\toscillate exactly out of phase with each other and are\n\tequivalent. The maximum force experienced would be +/-\n\t3.5 eV/Angstrom\n- See also: \texternal_force\ntd_field"
  },
  "option-td_field": {
    "prefix": "option-td_field",
    "body": "td_field",
    "description": "- Format: \ttd_field magnitude <direction> B C\nUnits \tmagnitude in eV/(Ang.a.u.), B in 1/ps, & C in fraction of 2*pi\n- Default: \tNo time dependent force\n- Use: \tSpecifies that a time-dependent field is applied to the system.\n\tFor details of how to specify the field direction see the time-independent\n\tfield option. The time-dependence is then given by:\n\n\tF = magnitude*cos[2*pi*(t*B + C)]\n\n\twhere t is the time within the simulation.\n\tMultiple time-dependent fields can be applied to each configuration.\n\tNB: This option only influences MD simulations.\n- See also: \tfield delay_field end_field dipole delta_dipole initial_coordinates\ntemperature"
  },
  "option-temperature": {
    "prefix": "option-temperature",
    "body": "temperature",
    "description": "- Format: \ttemperature value_of_temperature <C/F/K> <step> <no. of steps> <step0>\nUnits \tKelvin (or Centigrade if C added, or Fahrenheit if F added)\n- Default: \t0 K, no steps (for phonons) 100 K for simulated annealing.\n- Use: \tSpecifies temperature of a structure for use in the calculation of\n\tphonon properties, such as the entropy, free energy and heat capacity.\n\tAlso specifies the temperature for molecular dynamics and Monte Carlo\n\truns, including annealing.\n\n\tTemperature can optionally be followed by an increment, a number of steps,\n\t(and a first step for MD).\n\n\tPhonons\n\n\tIf a range is given, then the phonon properties will be calculated at each\n\ttemperature value over the range. Note that if present during a free energy\n\tcalculation this will result in the last temperature being used for the\n\trun. For CPU time reasons a range should not be used during a free energy\n\tminimisation.\n\n\tMolecular dynamics / Monte Carlo\n\n\tHere the option is used to set the temperature of the run or the schedule\n\tof temperatures for an anneal. For example, if the initial temperature is\n\tto be 298 K for the first 300 steps and then is to increase to 398 K over\n\ta 1000 steps, the input would look like:\n\n\ttemperature 298 0.1 1000 300\n\n- See also: \tphonon free predict anneal ftol factor ttol\nterse"
  },
  "option-terse": {
    "prefix": "option-terse",
    "body": "terse",
    "description": "- Format: \tterse <in/out/inout> <cell/coordinates/structure/potentials/derivatives>\n- Default: \tAll appropriate quantities are output in full.\n- Use: \tOffers the user the option of making the output more terse - i.e. to not\n\tprint out so much. The first word should control whether the sub-options\n\trefer to the input information, the output information or both, while the\n\tsecond refers to the quantity not to be printed:\n\n\tcell => don't output the unit cell parameters for vectors\n\tcoordinates => don't output the coordinates of the atoms\n\tstructure => don't output the structure (i.e. cell & coordinates)\n\tpotentials => don't output the interatomic potentials\n\tderivatives => don't output the final derivatives\n\ntether"
  },
  "option-tether": {
    "prefix": "option-tether",
    "body": "tether",
    "description": "- Format: \ttether n1-n2 or n1,n2, ... or any combination of both\n- Use: \tSpecifies atoms to keep fixed during a molecular dynamics calculation.\n\tThese atoms create forces on other atoms, but do not move themselves.\n\tn1, n2 ... is the number of the atom in the input file, e. g. if\n\tatoms 2, 3, 4, and 7 shall be kept fixed tether 2-4,7 will do that.\n\tNB: The line continuation character should not be used with the tether\n\toption. Instead multiple tether lines can be used.\n\te.g.\n\n\ttether 1-3, 121- 123, 127 - 129\n\ttether 143 - 146, 150, 152, 181 - 183, 10, 11, 12\n\n- See also: \tmd\nthree-body"
  },
  "option-three-body": {
    "prefix": "option-three-body",
    "body": "three-body",
    "description": "- Format: \tthree <exponential/vessal/cosine> <k3> <k4> <nbeq/nbne nbond> <intra/inter> <bond/mol> <kcal/kjmol/degree>\n\tatom1 atom2 atom3 k <k3> <k4> theta0 <rmin(1-2)> rmax(1-2) <rmin(1-3)> rmax(1-3) &\n\t<rmin(2-3)> rmax(2-3) <2-4 flags>\nUnits \tk in eVrad**-2, k3 in eVrad**-3, k4 in eVrad**-4 (for standard)\n\tk in eVrad**-2 (for exponential/vessal)\n\tk, k3 and k4 in eV (for cosine)\n\ttheta0 in degrees, rmin & rmax in Angs\n- Default: \tnone\n- Use: \tThree-body potentials about atom1. k is force constant and theta0\n\tthe equilibrium angle. Optional flags are for fitting. Atom 1 is\n\tthe middle atom of the triad about which the force acts.\n\tE(three) = 1/2 * k * (theta-theta0)**2\n\n\tExponentially decaying form is also available:\n\tE(three) = 1/2 * k * (theta-theta0)**2.exp(-r12/rho1).exp(-r13/rho2)\n\tFormat:\n\tthree exponential\n\tatom1 atom2 atom3 k theta0 rho1 rho2 <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <4xflags>\n\n\tExponentially decaying form is also available in Vessal form:\n\tE(three) = 1/4*A*(B**2).exp(-r12/rho1).exp(-r13/rho2)\n\tA = k/(2*(theta0-pi)**2)\n\tB = (theta0-pi)**2 - (theta-pi)**2\n\tFormat:\n\tthree vessal\n\tatom1 atom2 atom3 k theta0 rho1 rho2 <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <4xflags>\n\n\tk3 and k4 terms can also be included:\n\tE(three) = 1/2*k*(theta-theta0)**2 + 1/6*k3*(theta-theta0)**3\n\t+ 1/24*k4*(theta-theta0)**4\n\tFormats:\n\tthree k3\n\tatom1 atom2 atom3 k k3 theta0 <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <3xflags>\n\tthree k4\n\tatom1 atom2 atom3 k k4 theta0 <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <3xflags>\n\tthree k3 k4\n\tatom1 atom2 atom3 k k3 k4 theta0 <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <4xflags>\n\n\tNB: k3 and k4 terms can only be specified with the standard threebody or cosine forms\n\n\tCosine of theta can also be used instead of theta, if the cosine\n\toption is used :\n\n\tE(three) = 1/2*k*(cos(theta)-cos(theta0))**2\n\n\tk3 and k4 terms can also be included for the cosine form:\n\tE(three) = 1/2*k*(cos(theta)-cos(theta0))**2 + 1/6*k3*(cos(theta)-cos(theta0))**3\n\t+ 1/24*k4*(cos(theta)-cos(theta0))**4\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2 and 1-3 are bonded.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\tThe order of the bond type options matches the order of the pivot atom\n\t- end atom pairs. For example, if a potential acts for the triad\n\tS - C - O, where the C-S bond is a regular bond and the C-O is an\n\texocyclic double bond then the input would look like:\n\n\tthree bond single regular double exocyclic\n\tC core S core O core ...... etc\n\n\tConditions can also be placed on a potential to check the number of bonds\n\tassociated with the pivot atom (e.g. if a potential is designed for a 90\n\tdegree angle it might be necessary to check that the number of bonds is\n\tfour or six for square planar or octahedral). The conditions are placed\n\tusing one or more instances of \"nbeq\" or \"nbne\" followed by an integer.\n\tHere \"nbeq\" imples no. of bonds must equal and \"nbne\" number of bonds must\n\tnot equal. Hence, \"nbeq 4\" would require the pivot to have 4 bonds. When\n\tmultiple terms are used, the logic of nbeq is concatenated with \"or\", whereas\n\tthat of nbne is joined by \"and\". Therefore \"nbne 4 nbne 6\" would apply to\n\tan atom with 3 bonds, but not one with 4 or 6.\n\n\tNB It's important to specify the first bond as being of \"regular\" type so\n\tthat the \"exocyclic\" attribute is correctly assigned to the second bond\n\tsince the first term is assumed to apply to the first bond, whereas the\n\tsecond applies to the second bond.\n\n- See also: \taxilrod-teller angle stillinger-weber exponential bcross uff3\n\turey-bradley murrell-mottram bacross lin3 hydrogen-bond equatorial\n\t3coulomb exp2 bagcross mm3angle\nthreshold"
  },
  "option-threshold": {
    "prefix": "option-threshold",
    "body": "threshold",
    "description": "- Format: \tthreshold min_fc3_ij min_fc3\n- Default: \t0.0000001 / 0.00001\nUnits \teV/Angs**3\n- Use: \tSets thresholds for the smallest values of third order force constants that\n\tare considered non-zero. Because third order force constants can contain\n\tnumerical error, especially when using finite differences, many of the\n\tresulting force constants contain noise. This allows some of this to be\n\tremoved. There are two threshold values:\n\tmin_fc3_ij: If an individual force constant is below this value then it is set\n\tto zero.\n\tmin_fc3 : If all force constants within a block are below this value then the\n\t: whole block is set to zero.\n- See also: \tnum3 output\ntime"
  },
  "option-time": {
    "prefix": "option-time",
    "body": "time",
    "description": "- Format: \ttime time_limit <seconds/minutes/hours>\nUnits \tseconds (default), minutes or hours\n- Default: \tInfinity!\n- Use: \tSpecifies time limit for calculation.\ntimestep"
  },
  "option-timestep": {
    "prefix": "option-timestep",
    "body": "timestep",
    "description": "- Format: \ttimestep value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs; default is ps\n- Use: \tSpecifies the timestep for integration in a molecular\n\tdynamics simulation. A value must be supplied for an\n\tMD run.\n- See also: \tmd equilibration production sample write nolist\n\ttscale temperature delay_force end_force momentum_correct\ntitle"
  },
  "option-title": {
    "prefix": "option-title",
    "body": "title",
    "description": "- Format: \ta72\n- Default: \tnone\n- Use: \tAdds title lines to output\n\tThis option can now handle multiple title lines and they can be\n\tinput via either of the two following formats:\n\n\ttitle N (where N=no of title lines)\n\t<line 1>\n\t<line 2>\n\t: :\n\t<line N>\n\n\tOR\n\n\ttitle\n\t<line 1>\n\t<line 2>\n\t: :\n\t<line N>\n\tend\n\ntorangle"
  },
  "option-torangle": {
    "prefix": "option-torangle",
    "body": "torangle",
    "description": "- Format: \ttorangle <intra/bond/improper> <kcal/kjmol> <dreiding> <type_of_bond>\n\tatom1 atom2 atom3 atom4 K theta0 theta0' rmax(1-2) rmax(2-3) rmax(3-4) <3 x flags>\nUnits \tK in eV/rad**2, theta0 & theta0' in degrees\n- Default: \tnone\n- Use: \tSpecifies a torsional - angle cross potential. The form of the potential is:\n\n\tE = K.cos(phi).(theta - theta0).(theta' - theta0')\n\n\twhere theta is the angle between 1-2-3 & theta' is between 2-3-4\n\n\tIf the sub-option dreiding is specified then the force constant is divided\n\tby the number of torsional interactions for each central j-k pair to\n\tensure a constant torsional barrier for the j-k bond.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion torharm torexp outofplane uff4 torcosangle\ntorcosangle"
  },
  "option-torcosangle": {
    "prefix": "option-torcosangle",
    "body": "torcosangle",
    "description": "- Format: \ttorcosangle <intra/bond/improper> <kcal/kjmol> <dreiding> <type_of_bond>\n\tatom1 atom2 atom3 atom4 K theta0 theta0' rmax(1-2) rmax(2-3) rmax(3-4) <3 x flags>\nUnits \tK in eV/rad**2, theta0 & theta0' in degrees\n- Default: \tnone\n- Use: \tSpecifies a torsional - cosine angle cross potential. The form of the potential is:\n\n\tE = K.cos(phi).(cos(theta) - cos(theta0)).(cos(theta') - cos(theta0'))\n\n\twhere theta is the angle between 1-2-3 & theta' is between 2-3-4\n\n\tIf the sub-option dreiding is specified then the force constant is divided\n\tby the number of torsional interactions for each central j-k pair to\n\tensure a constant torsional barrier for the j-k bond.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion torharm torexp outofplane uff4 torangle\ntorexp"
  },
  "option-torexp": {
    "prefix": "option-torexp",
    "body": "torexp",
    "description": "- Format: \ttorexp <bond/improper/intra/inter> <kcal/kjmol> <esff> <dreiding> <type_of_bond>\n\tatom1 atom2 atom3 atom4 k <+/->nphase <phi0> rho12 rho23 rho34 rmax(1-2)\n\trmax(2-3) rmax(3-4) rmax(4-1) <4 x flags>\n\n\tor if esff option is specified\n\n\tatom1 atom2 atom3 atom4 k1 k2 <+/->nphase rho12 rho23 rho34 rmax(1-2) rmax(2-3)\n\trmax(3-4) rmax(4-1) <5 x flags>\nUnits \tk/k1/k2 in eV, isign is +1 or -1 according to the sign of nphase,\n\trho12/23/34 and rmax in Angstroms, phi0 in degrees\n- Default: \tif phi0 is not given it is assumed to be zero\n- Use: \tSpecifies an exponentially decaying torsional potential of the form:\n\n\tE = k*(1+isign*cos(nphase*phi-phi0))*exp(-r12/rho12)*exp(-r23/rho23)*exp(-r34/rho34)\n\n\tESFF :\n\n\tE = [k1*(sin1**2)*(sin2**2)+isign*k2*(sin1**n)*(sin2**n)*cos(n*phi)]*\n\t*exp(-r12/rho12)*exp(-r23/rho23)*exp(-r34/rho34)\n\n\tIf the sub-option dreiding is specified then the force constant is divided\n\tby the number of torsional interactions for each central j-k pair to\n\tensure a constant torsional barrier for the j-k bond.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion torharm outofplane torexp uff4\ntorharm"
  },
  "option-torharm": {
    "prefix": "option-torharm",
    "body": "torharm",
    "description": "- Format: \ttorharm <bond/improper/intra/inter> <kcal/kjmol> <dreiding> <type_of_bond>\n\tatom1 atom2 atom3 atom4 K <phi0> rmax(1-2) rmax(2-3) rmax(3-4) <rmax(1-4)> <2 x flags>\nUnits \tK in eV/rad**2, phi0 in degrees\n- Default: \tnone, phi0 = 0 if omitted, rmax(1-4) = 0.0\n- Use: \tSpecifies a harmonic torsional potential. Note that this is not a sensible\n\tchoice for a convenientional torsional potential, but is used by some\n\tforcefields for an improper torsional angle. The form of the potential is:\n\n\tE = 1/2 K(phi - phi0)**2\n\n\tIf the sub-option dreiding is specified then the force constant is divided\n\tby the number of torsional interactions for each central j-k pair to\n\tensure a constant torsional barrier for the j-k bond.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion torangle torexp outofplane uff4\ntorsion"
  },
  "option-torsion": {
    "prefix": "option-torsion",
    "body": "torsion",
    "description": "- Format: \ttorsion <intra/inter> <bond/improper> <esff> <dreiding> <kcal/kjmol> <type_of_bond>\n\tatom1 atom2 atom3 atom4 k <+/->n <phi0> rmax(1-2) rmax(2-3)\n\trmax(3-4) rmax(4-1) <1 x flag>\n\n\tor if esff option is specified\n\n\tatom1 atom2 atom3 atom4 k1 k2 <+/->n rmax(1-2) rmax(2-3)\n\trmax(3-4) rmax(4-1) <2 x flags>\nEqn \tNormal :\n\n\tE = k*(1+isign*cos(n*phi-phi0))\n\n\tESFF :\n\n\tE = k1*(sin1**2)*(sin2**2)+isign*k2*(sin1**n)*(sin2**n)*cos(n*phi)\n\nUnits \tk/k1/k2 in eV, isign is +1 or -1 according to the sign of n,\n\trmax in Angstroms, phi0 in degrees\n- Default: \tif phi0 is not given it is assumed to be zero\n- Use: \tTorsional potential about atoms 2 and 3. k is half the barrier\n\tand nphase is the periodicity. The optional flag is for fitting of k.\n\tIf rmax(4-1) is input as zero then rmax(4-1) is set to infinity.\n\tNote that when rmax(4-1) is not zero then atoms 1 and 4 cannot be\n\tthe same atom for a valid torsional term.\n\tWhen used as a keyword, torsion causes a list of valid torsion terms\n\tto be output before and after any optimisation/calculation.\n\tSee also Ryckaert for an alternative form of torsion potential.\n\tfour is an alternative valid name for this potential type.\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given then no cutoffs are required as the potential\n\twill act only when i-j, j-k and k-l are bonded. If improper is given\n\tthen again no cutoffs are required, but the atoms must now be bonded\n\ti-j, j-k, j-l to make an improper torsion about atom j.\n\n\tif the option esff is specified after torsion then the potential takes\n\tthe ESFF form. Here the potential becomes dependent on the two angles\n\tinvolved in the torsional angle so that it smoothly goes to zero when\n\tthe torsional angle becomes indeterminate. Strictly the two coefficients\n\tk1 and k2 should be related by :\n\n\tk1 = K / (sin10**2.sin20**2) k2 = K / (sin10**n.sin20**n)\n\n\twhere sin10 and sin20 are the sines of the equilibrium values of angles\n\t1 and 2 respectively. Here they are just input as coefficients for\n\tgenerality.\n\n\tIf the sub-option dreiding is specified then the force constant is divided\n\tby the number of torsional interactions for each central j-k pair to\n\tensure a constant torsional barrier for the j-k bond.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \tryckaert outofplane torexp tortaper torangle uff4\ntortaper"
  },
  "option-tortaper": {
    "prefix": "option-tortaper",
    "body": "tortaper",
    "description": "- Format: \ttortaper <bond/improper/intra/inter> <kcal/kjmol> <esff> <dreiding> <type_of_bond>\n\tatom1 atom2 atom3 atom4 k <+/->nphase <phi0> rtaper rmax(1-2)\n\trmax(2-3) rmax(3-4) rmax(4-1) <1 x flags>\n\n\tor if esff option is specified\n\n\tatom1 atom2 atom3 atom4 k1 k2 <+/->nphase rtaper rmax(1-2) rmax(2-3)\n\trmax(3-4) rmax(4-1) <2 x flags>\nUnits \tk/k1/k2 in eV, isign is +1 or -1 according to the sign of nphase,\n\trtaper and rmax in Angstroms, phi0 in degrees\n- Default: \tif phi0 is not given it is assumed to be zero\n- Use: \tSpecifies a torsional potential with tapering of the cut-offs over rtaper of the form:\n\n\tE = k*(1+isign*cos(nphase*phi-phi0))*f(r12)*f(r23)*f(r34)\n\n\tESFF :\n\n\tE = [k1*(sin1**2)*(sin2**2)+isign*k2*(sin1**n)*(sin2**n)*cos(n*phi)]\n\t*f(r12)*f(r23)*f(r34)\n\n\twhere f(r) is a cosine tapering function.\n\tIf the sub-option dreiding is specified then the force constant is divided\n\tby the number of torsional interactions for each central j-k pair to\n\tensure a constant torsional barrier for the j-k bond.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion torharm outofplane torexp torangle uff4\ntotalenergy"
  },
  "option-totalenergy": {
    "prefix": "option-totalenergy",
    "body": "totalenergy",
    "description": "- Format: \ttotalenergy <total energy of bulk unit cell>\nUnits \teV\n- Use: \tThis option is written out by GULP as information for the generation\n\tof a surface calculation input by GDIS based on a restart file.\n- See also: \tsbulkenergy\ntournament"
  },
  "option-tournament": {
    "prefix": "option-tournament",
    "body": "tournament",
    "description": "- Format: \ttournament initial <final> <stepsize>\n- Default: \t0.8 <0.8> <0.0>\n- Use: \tPart of ga options section. Specifies the tournament selection\n\tprobability. The higher the value, the more likely it is that\n\tthe better configuration will be selected. If <initial> value\n\tis less than <final> value then after 20 iterations tournament\n\tincremented by <stepsize>. If the optimisation is stuck in a local minimum\n\tthen, if stepsize non-zero, tournament is reset to <initial>.\n- See also: \tgenetic anneal gexp\ntpxo"
  },
  "option-tpxo": {
    "prefix": "option-tpxo",
    "body": "tpxo",
    "description": "- Default: \tUse one point crossover\n- Use: \tPart of ga options section.\n- See also: \tcrossover\ntranslate"
  },
  "option-translate": {
    "prefix": "option-translate",
    "body": "translate",
    "description": "- Default: \tnone\nUnits \tdmax in Angstroms\n- Use: \tRepeats the requested calculation type automatically for\n\ta series of points in which a subset of atoms are shifted\n\tby a translation vector. This option is useful for mapping\n\tout energy surfaces at the moment in one dimension.\n\tThe input format is:\n\n\ttranslate x y z nstep <noise fmax> <thermal dmax>\n\n\twhere x, y, z are the components of the vector between the\n\tthe initial and final positions of the atoms. If the\n\tsystem is three-dimensional then x, y and z are assumed\n\tto be in fractional units. If the system is a cluster\n\tthen they are assumed to be in angstroms. nstep is the\n\tnumber of points to be sampled along the translation\n\tvector (this leads to nstep+1 calculations including\n\tthe first and last points).\n\tThe subset of atoms to which the translation is to be\n\tapplied is defined by adding a \"T\" flag to the end of the\n\tcoordinate lines of these atoms. If the flag \"T-\" is used\n\tthen the atoms are translated in the opposite direction to\n\tthe vector input.\n\n\tIf \"noise\" is also specified with a value then random displacements\n\tare added to the coordinates of the atoms in non-rigid regions\n\tafter each translation step to prevent trapping in local high\n\tsymmetry states. The magnitude of the displacement is given by a\n\trandom number between -1 and 1 times the step size during translate\n\tscaled by fmax. Therefore fmax should usually be a small value << 1.\n\n\tIf \"thermal\" is specified with a value then random displacements\n\tare added to the coordinates of all atoms in non-rigid regions,\n\tregardless of whether they were displaced or not in the translation.\n\tThe magnitude of the displacement is given by a Gaussian random value with\n\tmean of zero and a standard deviation of dmax (in Angstroms).\n\n\tNote that the translate and scan_cell options are mutually exclusive.\n- See also: \tnofirst_point scan_cell\ntscale"
  },
  "option-tscale": {
    "prefix": "option-tscale",
    "body": "tscale",
    "description": "- Format: \ttscale value <freq> <s/ns/ps/fs>\nUnits \ts, ns, ps or fs; default is ps.\n- Use: \tControls how long in simulation time the temperature\n\tscaling is to be applied for. By default this is set\n\tequal to the length of the equilibration phase of\n\tthe run. Optionally the frequency of scaling can be\n\tspecified, which normally defaults to the timestep.\n- See also: \tmd equilibration production timestep sample write\n\tnolist temperature delay_force end_force momentum_correct\ntsuneyuki"
  },
  "option-tsuneyuki": {
    "prefix": "option-tsuneyuki",
    "body": "tsuneyuki",
    "description": "- Format: \ttsuneyuki <form2> <inter/intra/bond> <x12/x13/x14/mol/o14/g14> <type_of_bond>\n\tatom1 atom2 Q1 Q2 zeta <rmin> rmax <1*flag>\nUnits \tQ1 & Q2 in a.u., zeta in Angstroms**-1\n- Default:s \tform1\n- Use: \tSpecifies the short-range Coulomb correction described by Tsuneyuki et al\n\tPRL, 61, 869 (1988). Note that the role of the charges is inverted relative\n\tto the paper in order that charge neutrality is achieved in the long-range\n\tlimit. It is assumed that this was a typo. The correction to the Coulomb\n\tterm is given by:\n\n\tU = [Q1.Q2 - q1.q2]g(r)/r\n\n\twhere q1 & q2 are the regular charges specified elsewhere, and g(r) is:\n\n\tForm1: g(r) = (1+z.r)exp(-2z.r)\n\n\tForm2: g(r) = (1 + 11(z.r)/8 + 3(z.r)**2/4 + (z.r)**3/6)exp(-2z.r)\n\n\twhere z is used as a short-hand for zeta\n\nttol"
  },
  "option-ttol": {
    "prefix": "option-ttol",
    "body": "ttol",
    "description": "- Format: \tttol Tmin\n- Default: \tTmin=0.01\n- Use: \tTemperature tolerence for simulated annealing routine.\ntwist"
  },
  "option-twist": {
    "prefix": "option-twist",
    "body": "twist",
    "description": "- Format: \ttwist <+/->n\nUnits \tNone\n- Default:s \tn = 0, or if twist is specified then +1\n- Use: \tTakes the coordinates of a 1-D periodic system and introduces\n\ta twist angle about the central axis in the repeat direction.\n\tThe periodicity will be set so that the twist completes over\n\ta single cell. Longer periods can be created by first creating\n\ta supercell, while n specifies the number of complete twists\n\tin a single cell. By specifying -n then the phase is reversed.\n- See also: \tpcell\nuff1"
  },
  "option-uff1": {
    "prefix": "option-uff1",
    "body": "uff1",
    "description": "- Format: \tuff1 <intra/inter> <bond> <kcal/kjmol>\n\tatom1 r theta x D zeta Zeff type tor Koop Thetaoop Chi <10 x flags>\nUnits \tr & x in Ang, theta & thetaoop in degrees, D, Koop, chi and tor in eV, Zeff in a.u.\n- Default: \tnone\n- Use: \tSpecifies the species parameters for UFF force field generation by\n\tcombination rules.\n- See also: \tumorse\nuff3"
  },
  "option-uff3": {
    "prefix": "option-uff3",
    "body": "uff3",
    "description": "- Format: \tuff3 <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K theta0 rmin(1-2) rmax(1-2) rmin(1-3) rmax(1-3)\n\trmin(2-3) rmax(2-3) <flag>\nUnits \tK in eV, theta0 in degrees, rmin and rmax in Angstroms\n- Default: \tnone\n- Use: \tUFF non-linear three-body form :\n\n\tE(three) = K * (C0 + C1*cos(theta) + C2*cos(2*theta))\n\n\tHere the coefficients are related to theta0 by:\n\n\tC2 = 1/(2*sin(theta0))**2\n\tC1 = - 4*C2*cos(theta0)\n\tC0 = C2*(2*(cos(theta0))**2 + 1)\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species were 1-2, 2-3 and 1-3 are bonded.\n\n- See also: \taxilrod-teller angle stillinger-weber exponential bcross lin3\n\turey-bradley murrell-mottram bacross three hydrogen-bond equatorial\n\t3coulomb bagcross\nuff4"
  },
  "option-uff4": {
    "prefix": "option-uff4",
    "body": "uff4",
    "description": "- Format: \tuff4 <bond/improper/intra/inter> <kcal/kjmol> <dreiding> <type_of_bond>\n\tatom1 atom2 atom3 atom4 K n <phi0> rmax(1-2) rmax(2-3) rmax(3-4) rmax(4-1) <1 x flag>\nUnits \tK in eV, phi0 in degrees\n- Default: \tnone, phi0 = 0 if omitted\n- Use: \tSpecifies a torsional potential of the UFF form:\n\n\tE = 1/2 K*(1 - cos(n.phi0)*cos(n.phi))\n\n\tn is an integer and there is only a flag for K\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion torangle torexp outofplane torharm\nuff_bondorder"
  },
  "option-uff_bondorder": {
    "prefix": "option-uff_bondorder",
    "body": "uff_bondorder",
    "description": "- Format: \tuff_bondorder bond_type bond_order\nUnits \tNone\n- Default:\n\tdouble => bond_order = 2.0\n\ttreble => bond_order = 3.0\n\tquadruple => bond_order = 4.0\n\tresonant => bond_order = 1.5\n\tamide => bond_order = 1.41\n\thalf => bond_order = 0.5\n\tquarter => bond_order = 0.25\n\tthird => bond_order = 1/3\n\tcustom => bond_order = 1.0\n\n- Use: \tAllows the user to change the default bond orders for use in UFF.\n\tNB: The single bond order is fixed at 1.0 and cannot be changed.\n- See also: \tconnect\nuffoop"
  },
  "option-uffoop": {
    "prefix": "option-uffoop",
    "body": "uffoop",
    "description": "- Format: \tuffoop <intra/inter/bond/mol> <only3> <kcal/kjmol>\n\tatom1 atom2 atom3 atom4 k C0 C1 C2 rmax(1-2) rmax(1-3) rmax(1-4) <4 x flags>\nUnits \tk in eV, C0, C1, C2 are unitless\n- Default: \tnone\n- Use: \tOut of plane energy - energy penalty for atom 1 lying\n\tout of the plane of atoms 2, 3 and 4. This form uses the\n\tUniversal Force Field expression:\n\n\tE = k.(C0 + C1*cos(phi) + C2*cos(2*phi))\n\n\twhere phi is the angle between the plane of the centre atom and two\n\tothers with the bond from the centre atom to the third atom.\n\tNote that because phi depends on which of the 3 different angles is\n\tchosen, GULP computes the contribution for all 3 cases and takes the\n\taverage.\n\tIf the only3 sub-option is specified then the potential applies where\n\tan atom has exactly 3 bonds present.\n- See also: \ttorsion ryckaert torangle torharm torexp xoutofplane inversion outofplane\nunfreeze"
  },
  "option-unfreeze": {
    "prefix": "option-unfreeze",
    "body": "unfreeze",
    "description": "- Format: \teither: atom_no. radius\n\tor x y z radius\nUnits \tfractional for x, y, z and Angstroms for radius\n- Default: \tnone\n- Use: \tAtoms with no variables marked for optimisation are frozen out of the\n\tderivative calculations to save cpu time. This can be done either by\n\tsetting the appropriate flags or running a \"cello\" calculation in\n\twhich only the strains are marked for optimisation, but no internal\n\tvariables. Unfreeze causes atoms within a spherical region about\n\teither a given atom or a given origin to be marked for optimisation.\n\tThis option cannot be used with conp or conv for obvious reasons!\n\tThis option is primarily designed for large unit cell situations\n\twhere in effect a defect calculation is being performed.\n- See also: \toptimise transition_state cello noexclude fix_atom\nunique"
  },
  "option-unique": {
    "prefix": "option-unique",
    "body": "unique",
    "description": "- Format: \tunique d\n- Default: \td=0.0d0\n- Use: \tPart of ga options section. Any 2 candidates to be optimised must\n\thave a cost function difference of at least d.\nunits"
  },
  "option-units": {
    "prefix": "option-units",
    "body": "units",
    "description": "- Format: \tunits <kcaltoev/evtoangs> value\n- Default: \tThe default values for unit conversion factors are:\n\tkcaltoev = 4.3364432032d-2\n\tangstoev = 14.3997584\n- Use: \tThe default values of unit conversion factors can be changed either\n\tby editing the values in modules.f90 before compilation or by setting\n\tthis value in the input.\n\tNB: This should be placed after the keyword line otherwise any use\n\tof the conversion factor before this command will use the default\n\tvalue.\n- See also:\nupdate"
  },
  "option-update": {
    "prefix": "option-update",
    "body": "update",
    "description": "- Format: \tinteger number\n- Default: \t10\n- Use: \tChanges the maximum number of cycles of Hessian updating before exact\n\tcalculation is performed. Number may appear on same line as command\n\tor the following line.\nurey-bradley"
  },
  "option-urey-bradley": {
    "prefix": "option-urey-bradley",
    "body": "urey-bradley",
    "description": "- Format: \turey-bradley <intra/inter> <bond> <nbeq/nbne nbond> <kcal/kjmol>\n\tatom1 atom2 atom3 K r0 <rmin12> rmax12 <rmin13> rmax13 <rmin23> rmax23 <2*flags>\nUnits \tK in eV/Angs**2, r0 in Angstroms\n- Use: \tHarmonic distance potential between atoms which are 1-3\n\n\tE(three) = 1/2 * K * (r - r0)**2\n\n\tintra/inter can also be specified for molecular calculations, as can\n\tbond. If bond is given no cutoff is required as the potential will\n\tonly act between species where 1-2 and 1-3 are bonded.\n\n- See also: \tthree-body angle exponential axilrod-teller stillinger bcross lin3\n\tmurrell-mottram bacross hydrogen-bond equatorial uff3 3coulomb\nvacancy"
  },
  "option-vacancy": {
    "prefix": "option-vacancy",
    "body": "vacancy",
    "description": "- Format: \tvacancy <cartesian/fractional/molecule> <number> <symbol> <x y z>\n- Use: \tCreates a vacancy in a defect calculation. The vacancy site may\n\tbe specified in the following ways:\n\t(a) atom number - removes the nearest image to the defect centre\n\tof the asymmetric unit site of that number.\n\te.g. vacancy 2\n\t(b) atom symbol - removes the first atom in the asymmetric unit\n\twith the symbol matching that given. The nearest image to\n\tto the defect centre is removed.\n\te.g. vacancy Mg2\n\t(c) molecule number - removes a complete molecule. Takes the\n\tnearest image of the molecule number given to the defect\n\tcentre. Remember that when molecular defects are being\n\trun the energy of the molecule at infinite separation\n\tmust be corrected for.\n\te.g. vacancy molecule 3\n\t(d) coordinates - removes any ions within a tolerance of that\n\tposition. By default fractional coordinates are assumed in\n\twhich case the nearest image to the defect centre is taken.\n\tIf \"cartesian\" is specified then x y z are taken as being\n\tabsolute cartesian coordinates.\n\te.g. vacancy 0.5 0.5 0.5\n\tvacancy cart 1.2 1.2 1.2\n- See also: \tdefect intersitial impurity size centre region_1\nvariables"
  },
  "option-variables": {
    "prefix": "option-variables",
    "body": "variables",
    "description": "- Format: \tkeyword\n- Default: \tnone\n- Use: \tSpecifies fitting variables associated with\n\tdifferent species - valid options are charge, split,\n\tand shift. Also allows constraints to be applied.\n- See also: \tconstrain charge split shift\nvbo_twobody"
  },
  "option-vbo_twobody": {
    "prefix": "option-vbo_twobody",
    "body": "vbo_twobody",
    "description": "- Format: \tvbo_twobody\n\tatom1 atom2 c gamma R0 delta <4xflags>\nUnits \tc in eV; R0 and delta in Angstroms; gamma is unitless\n- Default: \tNone\n- Use: \tTwobody potential of a form suitable for use as part of VBO model of Truhlar et al.\n\n\tE = N.exp(-gamma/(1-sqrt(r/delta))) for r < delta & E = 0 for r >= delta\n\n\tNB: Because the potential goes to zero at delta there is no rmax or rmin for this\n\tpotential (i.e. rmax = delta).\n\n\tThe normalisation constant N is given by:\n\n\tN = 2*exp(gamma/(1-sqrt(R0/delta)))\n\n\tNB: The factor of two in N comes from the translation of how the two-body sum is\n\texpressed in the papers by Truhlar to how it is implemented in GULP.\n\n- See also: \team_functional eam_density\nvdw"
  },
  "option-vdw": {
    "prefix": "option-vdw",
    "body": "vdw",
    "description": "- Format: \tvdw at.no. <radius>\nUnits \tAngstroms\n- Default: \tstandard literature value\n- Use: \tAllows VDW radii to be changed.\n\tCommand is part of element section.\n\tCan be species specific for use with COSMO/COSMIC\n\n\te.g. to change the VDW radius of all oxygens to 1.5 Ang:\n\n\telement\n\tvdw O 1.5\n\tend\n\n\te.g. to change the VDW radius of 2 different types of oxygen:\n\n\telement\n\tvdw O2 1.3\n\tvdw O4 1.5\n\tend\n- See also: \telement\nvectors"
  },
  "option-vectors": {
    "prefix": "option-vectors",
    "body": "vectors",
    "description": "- Format: \tvectors <angs/au>\n\tx y z for vector 1\n\tx y z for vector 2\n\tx y z for vector 3\n\t<6 x optimisation flags>\nUnits \tAngstrom (default) or au\n- Use: \tSpecifies the cartesian components of the lattice vectors.\n\tEither \"vectors\" or \"cell\" must be included.\n\tStrain optimisation flags appear on last line.\nvelocities"
  },
  "option-velocities": {
    "prefix": "option-velocities",
    "body": "velocities",
    "description": "- Format: \tvelocities <angs/ps>\n\tatom_no velocity_x velocity_y velocity_z\nUnits \tAngstroms / ps\n- Default: \tNone\n- Use: \tSpecifies the current Cartesian velocities in an MD simulation and\n\tcan be used for restarting such a run. Can also be used to set the\n\tinitial velocities.\n- See also: \tmd accelerations\nvolume"
  },
  "option-volume": {
    "prefix": "option-volume",
    "body": "volume",
    "description": "- Format: \tvolume vol <weight>\nUnits \tAngstroms**3\n- Default: \tVolume is not fitted, weight = 1\n- Use: \tSubsection of observables, used for specifying that the volume\n\tis fitted. Usually the cell parameters of a system are fitted\n\tand so this constrains the volume. This option allows the\n\tvolume to be targetted instead.\n- See also: \tobservables elastic sdlc hfdlc piezo energy stress\nweight"
  },
  "option-weight": {
    "prefix": "option-weight",
    "body": "weight",
    "description": "- Format: \tweight <number of weights to be changed>\n\tlist of observables whose weights are to be changed\n\tlist of new weights in order\nUnits \tnone\n- Default: \t1.0\n- Use: \tSubsection of observables, allows weighting factors to changed.\n\tNumber of weights = 0 causes default to be\n\tchanged for subsequent observables.\n- See also: \tdefault_weight\nwmax"
  },
  "option-wmax": {
    "prefix": "option-wmax",
    "body": "wmax",
    "description": "- Format: \twmax <n>\nUnits \tTHz\n- Default: \tNone: must be specified.\n- Use: \tUsed within the \"pdf\" input block for \"PDFcut\" or \"PDFkeep\" calculations.\n\tSets the maximum phonon frequency to be used in calculating PDFs.\n\tUnits can be changed using 'unit freq'\n- See also: \tPDFkeep PDFcut units wmin\nwmin"
  },
  "option-wmin": {
    "prefix": "option-wmin",
    "body": "wmin",
    "description": "- Format: \twmin <n>\nUnits \tTHz\n- Default: \tNone: must be specified.\n- Use: \tUsed within the \"pdf\" input block for \"PDFcut\" or \"PDFkeep\" calculations.\n\tSets the minimum phonon frequency to be used in calculating PDFs.\n\tUnits can be changed using 'unit freq'\n- See also: \tPDFkeep PDFcut units wmax\nwrite"
  },
  "option-write": {
    "prefix": "option-write",
    "body": "write",
    "description": "- Format: \twrite value <s/ns/ps/fs>\nUnits \ts, ns, ps or fs - if integer, then value is by default\n\ta multiple of the timestep or if non-integer then by\n\tdefault is the time in picoseconds.\n- Use: \tDetermines how often the program writes to the molecular\n\tdynamics dumpfile during the production phase of the\n\trun for subsequent analysis.\n- See also: \tmd timestep equilibration production temperature\n\ttscale sample nolist delay_force end_force\nxangleangle"
  },
  "option-xangleangle": {
    "prefix": "option-xangleangle",
    "body": "xangleangle",
    "description": "- Format: \txangleangle <inter/intra> <bond> <kcal/kjmol>\n\tatom1 atom2 atom3 atom4 k(213/4) k(312/4) k(412/3) theta0(213) theta0(214) theta0(314) &\n\trmax(1-2) rmax(1-3) rmax(1-4) <6 x flag>\nUnits \tAll k in eV*rad**-2 and all theta0 in degrees\n- Default: \tnone\n- Use: \tAngle-angle cross potential for all angles about a central atom, atom 1:\n\n\tE = k(213/4)*(theta(213) - theta0(213))*(theta(214) - theta0(214)) +\n\tk(312/4)*(theta(312) - theta0(312))*(theta(314) - theta0(314)) +\n\tk(412/3)*(theta(412) - theta0(412))*(theta(413) - theta0(413))\n\n- See also: \ttorsion ryckaert torangle torharm torexp xoutofplane inversion outofplane\n\tuffoop xcosangleangle\nxcosangleangle"
  },
  "option-xcosangleangle": {
    "prefix": "option-xcosangleangle",
    "body": "xcosangleangle",
    "description": "- Format: \txcosangleangle <inter/intra> <bond> <kcal/kjmol>\n\tatom1 atom2 atom3 atom4 k(213/4) k(312/4) k(412/3) theta0(213) theta0(214) theta0(314) &\n\trmax(1-2) rmax(1-3) rmax(1-4) <6 x flag>\nUnits \tAll k in eV and all theta0 in degrees\n- Default: \tnone\n- Use: \tAngle cosine - angle cosine cross potential for all angles about a central atom, atom 1:\n\n\tE = k(213/4)*(cos(theta(213)) - cos(theta0(213)))*(cos(theta(214)) - cos(theta0(214))) +\n\tk(312/4)*(cos(theta(312)) - cos(theta0(312)))*(cos(theta(314)) - cos(theta0(314))) +\n\tk(412/3)*(cos(theta(412)) - cos(theta0(412)))*(cos(theta(413)) - cos(theta0(413)))\n\n- See also: \ttorsion ryckaert torangle torharm torexp xoutofplane inversion outofplane\n\tuffoop xangleangle\nxoutofplane"
  },
  "option-xoutofplane": {
    "prefix": "option-xoutofplane",
    "body": "xoutofplane",
    "description": "- Format: \txoutofplane <intra/inter/bond/mol> <kcal/kjmol> <type_of_bond>\n\tatom1 atom2 atom3 atom4 atom5 atom6 k rmax(1-2) rmax(1-3) rmax(1-4) rmax(2-5) rmax(2-6) <1 x flag>\nUnits \tk in eV*Angs**-2\n- Default: \tnone\n- Use: \tSpecifies an cross - out of plane potential of form:\n\n\tE = k.d1.d2\n\n\twhere d1 is the out of plane distance of atom 1 from the plane of atoms 2/3/4\n\tand d2 is the out of plane distance of atom 2 from the plane of atoms 1/5/6. This\n\tfunctional form is used in the CVFF forcefield. This is a six-body potential.\n\n\tThe type of bond sub-option can be used to control which bonded atoms the\n\tpotential applies to. For a three-body potential, the bond type for the\n\ttwo bonds connected to the pivot atom can be supplied and then checked\n\tbefore applying the potential. Valid type of bond options are: single,\n\tdouble, triple, quadruple, resonant, amide, custom, half, quarter, and third.\n\tIn addition a bond may specified as regular (default), cyclic or exocyclic.\n\n- See also: \ttorsion ryckaert torangle torharm torexp outofplane uffoop\nxtol"
  },
  "option-xtol": {
    "prefix": "option-xtol",
    "body": "xtol",
    "description": "- Format: \txtol <opt/fit> <real value>\nUnits \tfractional\n- Default: \t0.00001 for opt / 0.00001 for fit\n- Use: \tParameter tolerance for optimisation/fitting.\n\tValue may appear on same line as option or on the following line.\n\tIf xtol > 1.0 => xtol=10**(-xtol)\n\tIf opt/fit is not supplied then value is applied to both.\n- See also: \tgdcrit gtol gmax ftol\nyoungs_modulus"
  },
  "option-youngs_modulus": {
    "prefix": "option-youngs_modulus",
    "body": "youngs_modulus",
    "description": "- Format: \tyoungs_modulus <n>\n\t<x/y/z> youngs_modulus <weight>\nUnits \tGPa\n- Default: \tno Youngs moduli to be fitted\n- Use: \tSubsection of observables, used for specifying values of\n\tYoung's moduli for fitting.\nExample \tTo fit a Young's modulus of 240.0 GPa in the x direction\n\twith a weight of 1.0:\n\n\tyoung 1\n\tx 240.0 1.0\n\n\tNB: The Young's moduli are computed assuming that the\n\tmaterial is linear elastic orthotropic.\n- See also: \telastic sdlc hfdlc weight srefractive hfrefractive bornq\n\tpiezoelectric poisson shear voigt bulk\nzbl"
  },
  "option-zbl": {
    "prefix": "option-zbl",
    "body": "zbl",
    "description": "- Format: \tzbl <intra/inter> <bond/x12/x13/x14/mol/o14/g14> <kcal/kjmol> <scale14>\n\tatom1 atom2 <b1 c1 b2 c2 b3 c3 b4 c4 d n> <rmin> rmax <9*flags>\nUnits \td, n, b1-4 are unitless, c1-4 are in Ang**-1\n- Default: \td = 0.46850, n=0.23, b1=0.18175, b2=0.50986, b3=0.28022, b4=0.02817\n\tc1=3.19980, c2=0.94229, c3=0.40290, c4=0.20162\n- Use: \tSpecifies the use of the ZBL potential, as widely used in simulations\n\tof radiation cascades.\n\n\tE = (1/(4*pi*epsilon0)) * Zi*Zj*e**2*phi(rij/a)/rij\n\n\twhere Zi & Zj are the atomic numbers of the elements. The constant a\n\tis given by;\n\n\ta = d/(Zi**n + Zj**n)\n\n\tand phi(x) by:\n\n\tphi(x) = sum(i=1,4) bi*exp(-ci*x)\n\n- See also: \tgeneral\n14_scale"
  },
  "information-14_scale": {
    "prefix": "information-14_scale",
    "body": "14_scale",
    "description": "Info \tMany organic forcefields require the scaling of 1-4 two body\n\tinteractions. Typically a factor of a 1/2 is used. This can\n\tbe achieved in GULP. Nearly all two-body potentials allow a\n\tscale factor to be specified on the same line as the potential\n\toption word which has this effect. Similarly Coulomb interactions\n\tcan be scaled by using the Coulomb subtract potential which\n\talready has a coefficient and can be specified to act only for\n\t1-4 interactions.\nCtrl_C"
  },
  "information-Ctrl_C": {
    "prefix": "information-Ctrl_C",
    "body": "Ctrl_C",
    "description": "- Use: \tThe control C key sequence can be used to exit a fitting\n\tprocess or optimisation cleanly at the end of the current\n\tcycle. If control C is executed twice then the program\n\twill terminate.\nline_continuation"
  },
  "information-line_continuation": {
    "prefix": "information-line_continuation",
    "body": "line_continuation",
    "description": "Info \tTo continue a line onto further lines the character\n\t\"&\" can be given at the end of the line.\n\te.g. the following input could be given in the two\n\tfollowing ways:\n\n\tbuck\n\tSi core O shel 1280.0 0.3 0.0 0.0 12.0 1 0 0\n\n\tor\n\n\tbuck\n\tSi core O shel &\n\t1280.0 0.3 0.0 0.0 12.0 &\n\t1 0 0\nscale14"
  },
  "information-scale14": {
    "prefix": "information-scale14",
    "body": "scale14",
    "description": "Info \tMany organic forcefields require the scaling of 1-4 two body\n\tinteractions. Typically a factor of a 1/2 is used. This can\n\tbe achieved in GULP. Nearly all two-body potentials allow a\n\tscale factor to be specified on the same line as the potential\n\toption word which has this effect. Similarly Coulomb interactions\n\tcan be scaled by using the Coulomb subtract potential which\n\talready has a coefficient and can be specified to act only for\n\t1-4 interactions.\nstillinger-weber"
  },
  "information-stillinger-weber": {
    "prefix": "information-stillinger-weber",
    "body": "stillinger-weber",
    "description": "Info \tThe 2 and 3 body potentials of Stillinger-Weber are\n\tavailable using the potential types sw2 and sw3,\n\trespectively.\n- See also: \tsw2 sw2jb sw3 sw3jb\ntrajectory_format\n"
  },
  ":-": {
    "prefix": ":-",
    "body": "",
    "description": "Written once only for each run :\n        write(31)version\n        write(31)numat,ndimensions\nWritten for every configuration :\n  Version = 3.4:\n        write(31)timesofar,ekin,fc,temp\n        write(31)(xalat(i),i=1,numat)\n        write(31)(yalat(i),i=1,numat)\n        write(31)(zalat(i),i=1,numat)\n        write(31)(velx(i),i=1,numat)\n        write(31)(vely(i),i=1,numat)\n        write(31)(velz(i),i=1,numat)\n        if (lconp) then\n          write(31)(xcell(i),i=1,9)\n          write(31)(velc(i),i=1,nstrains)\n        endif\n  Version = 4.0 onwards:\n        write(31)timesofar,ekin,fc,temp\n        write(31)(xalat(i),i=1,numat)\n        write(31)(yalat(i),i=1,numat)\n        write(31)(zalat(i),i=1,numat)\n        write(31)(velx(i),i=1,numat)\n        write(31)(vely(i),i=1,numat)\n        write(31)(velz(i),i=1,numat)\n        write(31)(xdrv(i),i=1,numat)\n        write(31)(ydrv(i),i=1,numat)\n        write(31)(zdrv(i),i=1,numat)\n        write(31)(esite(i),i=1,numat)\n        if (lconp) then\n          write(31)(xcell(i),i=1,9)\n          write(31)(velc(i),i=1,nstrains)\n        endif"
  },
  "output-marvin": {
    "prefix": "output-marvin",
    "body": "output marvin ${0:filename}",
    "description": "generates a file suitable for input to Marvin for surface calculations. Index of surface plane needs to be added first, though this may be passed through GULP to the marvin input but using the \"marvin\" option. If the file extension \".mvn\" is not given by the user it will be added by the program.\ne.g. output marvin alumina produces alumina.mvn\nIf a file for Marvin2 is required, then use the sub-option marvin2 instead.\ne.g. output marvin2 alumina"
  },
  "output-thbrel": {
    "prefix": "output-thbrel",
    "body": "output thbrel ${0:filename}",
    "description": "converts the final bulk structure into a file format suitable for the THBREL suite of programs. Not all features are readily transferable between the programs so no guarantee is made that the input file is perfect and for similar reasons both programs may not always yield the same results unless the user is careful to make sure the files are equivalent. If a phonon run has been requested then the output is modified for THBPHON instead of THBREL."
  },
  "output-xtl": {
    "prefix": "output-xtl",
    "body": "output xtl ${0:filename}",
    "description": "this is only applicable to crystal structures with a single structure per file. Produces a .xtl file for input into the BIOSYM software, though use of the archive file is better unless symmetry is present. If the filename input is not already terminated with \".xtl\" then this will be added by the program. e.g. output xtl alumina produces alumina.xtl"
  },
  "output-xr": {
    "prefix": "output-xr",
    "body": "output xr ${0:filename}",
    "description": "this will output a modified CSSR file suitable for input into the Oxford Materials graphical interface program Crysalis. The file will have the extension \".xr\" added. At the moment this is only applicable to 3D systems.\ne.g. output xr alumina produces alumina.xr"
  },
  "output-cssr": {
    "prefix": "output-cssr",
    "body": "output cssr ${0:filename}",
    "description": "this will output a CSSR file suitable for input into the MSI graphical interface Cerius2. The file will have the extension \".cssr\" added. At the moment this is only applicable to 3D systems.\ne.g. output cssr alumina produces alumina.cssr"
  },
  "output-arc": {
    "prefix": "output-arc",
    "body": "output arc ${0:filename}",
    "description": "alternatively known as a \".car\" file. This option produces archive files suitable for input into the BIOSYM Insight software and will handle bulk, cluster and defect calculations, all with multiple structures. The username should input a root name, e.g. output arc alumina The program will then produce archive file names with either \"_3D\", \"_defe\", or \"_0D\" appended to distinguish the files resulting from a particular section of the run. If multiple structures are present then an underscore followed by the structure number will be added, all followed by \".arc\". e.g. if the above input for alumina contained two bulk structures then the files produced would be \"alumina_bulk_1.arc\" and \"alumina_bulk_2.arc\". If the word \"movie\" is specified then all structures during an optimisation will be included in the arcfile, rather than just the final one, so that the optimisation may be viewed. e.g. output movie arc alumina NB for MD runs the name of the archive file is set by \"mdarchive\" to avoid overwriting the optimisation archive file if present. Also in the case of MD the file is only written during the production phase. It is also possible to specify a frequency for the output\ne.g. output movie 5 arc alumina\nThis would output an archive file frame every 5 steps during the movie. The default is to output at every step. NB The residue field has now been changed to contain the molecule number, rather than the atom number or a dummy string."
  },
  "output-xyz": {
    "prefix": "output-xyz",
    "body": "output xyz ${0:filename}",
    "description": "this will output an xyz file suitable for input into programs such as Molden and with slight modification Unichem. The file will have the extension \".xyz\" At the moment this is only applicable to non-periodic systems. When called with a periodic case just the Cartesian coordinates will be output, without the unit cell. e.g. output xyz cluster produces cluster.xyz If the word \"movie\" is specified then all structures during an optimisation will be included in the xyz file, rather than just the final one, so that the optimisation may be viewed. e.g. output movie xyz cluster"
  },
  "output-trajectory": {
    "prefix": "output-trajectory",
    "body": "output trajectory ${0:filename}",
    "description": "this is a binary file which stores the coordinates and velocities from a molecular dynamics run, as well as some of the system properties. This file is used by the Cerius interface to generate a .trj file for analysis in Cerius. Note that this file is only written during the production phase by default. e.g. output trajectory alumina For this sub-option the further option \"ascii\" may be specified in order to obtain an ASCII format trajectory file. Note that this is less efficient for disk space usage! e.g. output trajectory ascii alumina Furthermore, the sub-option \"equil\" may be added to force writing during the equilibration phase of the simulation. The default extension for this file type is .trg"
  },
  "output-history": {
    "prefix": "output-history",
    "body": "output history ${0:filename}",
    "description": "this is a text file in the DLPOLY HISTORY file format containing the structure and velocities sampled from a MD run. This file can be used for post-MD analysis using the same programs as for DLPOLY such as \"After\"."
  },
  "output-fdf": {
    "prefix": "output-fdf",
    "body": "output fdf ${0:filename}",
    "description": "this is a text file in the Flexible Data Format of Alberto Garcia and Jose M. Soler. This file can then form the basis of an input deck for the program SIESTA."
  },
  "output-drv": {
    "prefix": "output-drv",
    "body": "output drv ${0:filename}",
    "description": "this is a text file containing the energy and appropriate derivatives calculated by GULP at the last function evaluation. This can be used for QM/MM schemes. Note that if freezing is being used then second derivatives may not be output since not all derivatives may be calculated. To turn off freezing then specify the keyword \"noexclude\"."
  },
  "output-frc": {
    "prefix": "output-frc",
    "body": "output frc ${0:filename}",
    "description": "this is a text file containing the energy and appropriate force constants for cores only calculated by GULP during a phonon calculation. This can be used for QM/MM schemes, such as in the program QMPOT. A phonon calculation must be specified otherwise no file will be output. NB Force constant matrices can also be output in a format suitable for ShengBTE and Phonopy using the output shengbte option."
  },
  "output-cif": {
    "prefix": "output-cif",
    "body": "output cif ${0:filename}",
    "description": "this is only applicable to crystal structures with a single structure per file. Produces a .cif file for input into a variety of programs. If the filename input is not already terminated with \".cif\" then this will be added by the program. Note that at present the files are output in P1 regardless of symmetry for simplicity. e.g. output cif alumina produces alumina.cif Strictly speak a cif file is only valid for 3-D systems, but files can be output from GULP for 0-D, 1-D and 2-D with the addition of a dummy cell parameter. This value can be set from the option\ne.g. output cif 12.0 surface\nwill create a 3-D cif file with a dummy lattice parameter of 12 Angstroms for directions that are non-periodic. The default dummy lattice parameter is 0 which implies that a cif file shouldn't be written for the wrong periodicity."
  },
  "output-str": {
    "prefix": "output-str",
    "body": "output str ${0:filename}",
    "description": "this is a file in the CRYSTAL98 format, suitable for reading by DLV. If the filename input is not already terminated with \".str\" then this will be added. If multiple structures are specified then the filename will be modified so that a separate file can be written for each structure."
  },
  "output-phonon": {
    "prefix": "output-phonon",
    "body": "output phonon ${0:filename}",
    "description": "this option leads to the density of states from a phonon calculation and any dispersion curve points being output to the files <filename>.dens and <filename>.disp, respectively, in a format suitable for input into a curve plotting program. If the sub-option \"ir\" is specified then the density of states will be weighted by the IR intensities e.g. output phonon ir alumina"
  },
  "output-frequency": {
    "prefix": "output-frequency",
    "body": "output frequency ${0:filename}",
    "description": "this option produces a list of frequencies over all k points for use in an analysis program. A typical application might be in the calculation of the Gruneisen parameter by differencing of the frequencies with respect to the cell volume. The file can either be output in binary format (to maintain precision - the default)\ne.g. output freq binary <filename> <ndecimal>\nor as ordinary text\ne.g. output freq text <filename> <ndecimal>\nHere the optional value of ndecimal specifies how many decimal places you get (up to a maximum of 12 since going further than this would be non-sensical in double precision!)."
  },
  "output-pressure": {
    "prefix": "output-pressure",
    "body": "output pressure ${0:filename}",
    "description": "this option outputs a file containing the pressure tensor during a molecular dynamics run, both instanteously and as an average. File is output as <filename>.pre using units of GPa."
  },
  "output-osc": {
    "prefix": "output-osc",
    "body": "output osc ${0:filename}",
    "description": "this is a text file containing the oscillator strengths for the phonon modes so that the frequency dependent data can be handled in post processing. In this file the frequencies are in wavenumbers, while the oscillator strengths are in cm^-2"
  },
  "output-pdf": {
    "prefix": "output-pdf",
    "body": "output pdf ${0:filename}",
    "description": "this option sets the name for the .wid and .pdf files created by the pdf keyword. The .wid file can be suppressed by the nowidth keyword."
  },
  "output-cosmo": {
    "prefix": "output-cosmo",
    "body": "output cosmo ${0:filename}",
    "description": "this outputs a COSMO file in the Accelrys format for visualisation of information relating to solvation an the solvent accessible surface"
  },
  "output-lammps": {
    "prefix": "output-lammps",
    "body": "output lammps ${0:filename}",
    "description": "this outputs a LAMMPS input files for a system based on the information available to GULP. This includes a .lmp file containing the structure and bonding information. If followed by \"var\" then variable names will be used in the output."
  },
  "output-lammps_pots": {
    "prefix": "output-lammps_pots",
    "body": "output lammps_pots ${0:filename}",
    "description": "this outputs a LAMMPS file containing a tabulation of any twobody potentials. There are 3 addition pieces of information that can be provided which are the start of the range, r0, the end of the range, rend, and the number of points, np. e.g. output lammps_pots 0.1 9.0 1000 myfile This would create a table from 0.1 to 9.0 Angstroms with 1000 points and write it to a file called myfile."
  },
  "output-cml": {
    "prefix": "output-cml",
    "body": "output cml ${0:filename}",
    "description": "this is a Chemical Markup Language output file which contains all the important information about the calculation in an XML format. This output is suitable for various database tools and for data transfer between CML-enabled applications."
  },
  "output-eig": {
    "prefix": "output-eig",
    "body": "output eig ${0:filename}",
    "description": "this outputs the eigenvectors for each K point as a file."
  },
  "output-qbo": {
    "prefix": "output-qbo",
    "body": "output qbo ${0:filename}",
    "description": "this file contains the charges and bond orders, as appropriate, for a potential model. e.g. output qbo myfile The above command would produce a file myfile.qbo containing the charges and bond orders for the final configuration. If the values for all structures are required then the sub-option \"append\" can be used\ne.g. output qbo append myfile"
  },
  "output-dcd": {
    "prefix": "output-dcd",
    "body": "output dcd ${0:filename}",
    "description": "this file contains the coordinates from an MD trajectory and can be used by programs such as VMD for analysis and visualisation."
  },
  "output-inertia": {
    "prefix": "output-inertia",
    "body": "output inertia ${0:filename}",
    "description": "output information on the moment of inertia tensor for molecules at the final structure for each configuration"
  },
  "output-castep_phonon": {
    "prefix": "output-castep_phonon",
    "body": "output castep_phonon ${0:filename}",
    "description": "this file contains the phonon information from multiple K points in the same format as used for the program CASTEP. The default extension for this is \".csp\" e.g. output castep_phon myfile.csp"
  },
  "output-kpt": {
    "prefix": "output-kpt",
    "body": "output kpt ${0:filename}",
    "description": "this file list the k points within the asymmetric unit of the Brillouin zone along with the symmetry unique images of the k point."
  },
  "output-shengBTE": {
    "prefix": "output-shengBTE",
    "body": "output shengBTE ${0:filename}",
    "description": "this causes the files needed to perform a ShengBTE run to be output. This usually comprises the files CONTROL, FORCE_CONSTANTS_2ND, FORCE_CONSTANTS_3RD that contain the system information and control parameters, the second order force constants, and the third order force constants, respectively. Note that the FORCE_CONSTANTS_2ND file is also suitable for use with Phonopy. NB Since the calculation of the third order force constants is potentially expensive expect this option to substantially increase the computational cost of a run!!! The use of the keyword nod3 allows the ShengBTE output to be restricted to second derivatives only. NB The option \"threshold\" controls the minimum size for force constants to be output as non-zero"
  },
  "output-dipole": {
    "prefix": "output-dipole",
    "body": "output dipole ${0:filename}",
    "description": "this causes GULP to output a text file that contains the dipole of the system for each time step of a molecular dynamics run. If the delta_dipole keyword is specifed then the dipole is computed relative to the initial value. The units of the dipoles for this file are Debye and the format has the current time in ps follow by the three Cartesian components in the order x, y and z."
  },
  "output-xsf": {
    "prefix": "output-xsf",
    "body": "output xsf ${0:filename}",
    "description": "output a file in XCrySDen format. When performing MD it is possible to output either a single XSF file or a sequence of files for single frames with a number appended to differentiate them. The format is\noutput xsf <seq/sym> myfile\nwhere seq (sequential) is optional but if specified will result in multiple files being output during molecular dynamics. Here myfile is the root name for the file. For example;\noutput xsf seq myfile\nwould produce myfile000001.xsf, myfile000002.xsf, etc. If \"sym\" is specified then atomic symbols are used instead of atomic numbers in the files. This is relevant if using Aenet which expects symbols, whereas XCrySDen specifies atomic numbers for the format."
  }
}